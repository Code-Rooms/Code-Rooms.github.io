{"version":3,"sources":["Authentication/Login.js","Redux/Actions/AuthActions.js","Redux/Actions/RoomsDataActions.js","Components/Home.js","Components/MyDivider.js","Navbar/NavbarDrawer.js","Navbar/MyNavbar.js","MyRooms/AllRooms/RenderRooms.js","MyRooms/AllRooms/AllRooms.js","MyRooms/RoomByRoomId/RoomSettings.js","MyRooms/RoomByRoomId/RenderQuestions.js","MyRooms/RoomByRoomId/RoomEnrolled.js","MyRooms/RoomByRoomId/RoomWaiting.js","MyRooms/RoomByRoomId/OneRoom.js","EnrolledRooms/AllEnrolled/RenderEnrolled.js","EnrolledRooms/AllEnrolled/AllEnrolled.js","EnrolledRooms/JoinRoom.js","EnrolledRooms/EnrolledById/RenderQuestions.js","EnrolledRooms/EnrolledById/EnrolledRoom.js","TextEditor/MyTextEditor.js","MyRooms/EditQuestion/QuestionTemplate.js","Components/WindowDimensions.js","MyRooms/EditQuestion/QuestionPreview.js","MyRooms/EditQuestion/QuestionCases.js","MyRooms/EditQuestion/QuestionSettings.js","MyRooms/EditQuestion/EditQuestion.js","CodePlayground/EditorNavbar.js","CodePlayground/RenderSaved.js","CodePlayground/MyEditor.js","CodePlayground/CodePlayground.js","EnrolledRooms/ViewQuestion/EditorNavbar.js","EnrolledRooms/ViewQuestion/CodeType.js","Constants.js","EnrolledRooms/ViewQuestion/FileType.js","EnrolledRooms/ViewQuestion/ViewQuestion.js","MyRooms/CheckSubmissions/CodeType.js","MyRooms/CheckSubmissions/ManageSelected.js","MyRooms/CheckSubmissions/FileType.js","MyRooms/CheckSubmissions/CheckSubmissions.js","Components/UserSettings.js","Components/AboutUs.js","AuthRouter.js","Authentication/VerifyEmail.js","Authentication/Signup.js","Authentication/ChangePassword.js","App.js","reportWebVitals.js","Redux/AuthReducer.js","Redux/RoomsDataReducer.js","Redux/ReduxCombined.js","index.js"],"names":["Login","document","title","useState","loading","setLoading","userName","setUserName","history","useHistory","useSnackbar","enqueueSnackbar","closeSnackbar","resendEmail","key","a","axios","get","params","username","then","res","variant","catch","err","response","data","detail","error","action","Fragment","onClick","style","background","border","cursor","color","paddingRight","textDecoration","fontWeight","onFinish","values","post","password","localStorage","setItem","access_token","window","location","href","state","from","status","persist","className","src","alignSelf","width","boxShadow","name","labelCol","span","wrapperCol","initialValues","remember","onFinishFailed","errorInfo","errorFields","errors","autoComplete","Item","label","rules","required","message","Password","htmlType","backgroundColor","fontSize","height","marginTop","loginUser","details","type","payload","logoutUser","removeItem","setMyRooms","setEnrolled","setBreadcrumb","Home","due","setDue","dispatch","useDispatch","useEffect","timeConditions","question","moment","endTime","diff","format","display","valueStyle","value","reload","position","size","length","paddingTop","map","to","questionId","marginLeft","minWidth","roomName","_type","MyDivider","margin","SubMenu","Menu","NavbarDrawer","drawerOpen","setDrawerOpen","authReducer","useSelector","roomsDataReducer","pushLink","link","push","alignItems","MenuOutlined","marginRight","footer","mode","theme","selectable","icon","keyboard","placement","closable","onClose","visible","bodyStyle","padding","headerStyle","borderBottom","footerStyle","borderTop","defaultSelectedKeys","defaultOpenKeys","HomeOutlined","BookOutlined","onTitleClick","enrolledRoomsLoading","enrolledRooms","room","roomId","AppstoreOutlined","myRoomsLoading","myRooms","PlusCircleOutlined","CodeOutlined","SettingOutlined","InfoCircleFilled","LogoutOutlined","MyNavbar","breadcrumb","page","url","fontStyle","RenderRooms","createNewRoom","extra","breakpointCols","default","columnClassName","enrolled","questions","visibility","AllRooms","getMyRoomsData","loadingMessage","setLoadingMessage","queryParams","URLSearchParams","useLocation","search","has","firstName","newRoomId","RoomSettings","settingsVisible","setSettingsVisible","roomInfo","setRoomInfo","specialFields","setSpecialFields","handleSave","newData","undefined","waitingRoomEnabled","newRoomInfo","destroyOnClose","onCancel","Radius","layout","console","log","labelAlign","defaultValue","Option","defaultChecked","justifyContent","marginBottom","hidden","waitingRoomCount","field","index","onChange","e","target","changeSpecialField","readOnly","filter","i","removeField","danger","disabled","RenderQuestions","getInitialData","deleteQuestion","id","renderVisibility","isVisible","isAfter","onConfirm","okText","cancelText","overlayInnerStyle","maxWidth","top","right","left","submitted","lineWidth","paddingAngle","RoomEnrolled","enrolledTable","setEnrolledTable","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","ref","node","placeholder","onPressEnter","handleSearch","SearchOutlined","handleReset","closeDropdown","setSearchText","setSearchedColumn","filterIcon","filtered","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","render","text","searchedColumn","highlightStyle","searchWords","searchText","autoEscape","textToHighlight","tableLoading","setTableLoading","members","deleteMember","userId","tableId","columns","children","row","item","dataSource","pagination","RoomWaiting","waitingTable","setWaitingTable","acceptMember","TabPane","Tabs","OneRoom","setQuestions","useParams","replace","createNewQuestion","newQuestionId","deleteRoom","toCopy","origin","temp","createElement","tempMsg","createTextNode","appendChild","body","select","execCommand","removeChild","CopyOutlined","overlay","defaultActiveKey","tab","RenderEnrolled","AllEnrolled","getEnrolledRoomsData","JoinRoom","specialInfo","setSpecialInfo","joinRoom1","Countdown","Statistic","isSubmitted","submissionTime","EnrolledRoom","getRoomData","leaveRoom","host","DescriptionEditor","props","focus","refs","editor","editorState","setState","handleKeyCommand","_handleKeyCommand","bind","mapKeyToEditorCommand","_mapKeyToEditorCommand","toggleBlockType","_toggleBlockType","toggleInlineStyle","_toggleInlineStyle","command","newState","RichUtils","this","keyCode","getDefaultKeyBinding","newEditorState","onTab","blockType","inlineStyle","contentState","getCurrentContent","hasText","getBlockMap","first","getType","onToggle","blockStyleFn","getBlockStyle","customStyleMap","styleMap","keyBindingFn","spellCheck","React","Component","CODE","fontFamily","block","StyleButton","preventDefault","active","onMouseDown","BLOCK_TYPES","BlockStyleControls","selection","getSelection","getBlockForKey","getStartKey","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","QuestionTemplate","setTitle","description","setDescription","sample","setSample","handleSampleChange","newSample","saveQuestionTemplate","template","convertToRaw","textAlign","input","output","explanation","getWindowDimensions","innerWidth","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","QuestionPreview","whiteSpace","QuestionCases","testCases","setTestCases","handleChange","newCases","saveCases","tcase","QuestionSettings","questionSettings","setQuestionSettings","date","setDate","handleDateChange","saveSettings","disabledDate","current","allowClear","checked","EditQuestion","questionDetails","EditorState","createWithContent","convertFromRaw","add","endOf","minSize","maxSize","defaultSize","split","Select","EditorNavbar","savedCodes","setSavedCodes","selectedCode","setSelectedCode","getEditorCode","setOutput","saveOpen","setSaveOpen","handleRun","code","language","JSON","parse","newSaved","setTimeout","onOk","CaretRightOutlined","SaveFilled","RenderSaved","setInput","handleNew","Math","floor","random","PlusCircleFilled","loadSavedCode","handleDelete","MyEditor","editorRef","useRef","centered","getValue","onMount","monaco","borderRight","CodePlayground","savedPlaygroundCodes","getItem","stringify","setQuestionDetails","handleSubmit","noOfCases","casesPassed","submittedAt","SendOutlined","CodeType","overlayLoading","setOverlayLoading","savedCode","widht","backendURL","FileType","setSrc","file","setFile","deleteSubmission","submissionId","handleSubmitFile","formData","FormData","append","config","headers","fetch","blob","URL","createObjectURL","download","click","fileType","filePath","listType","beforeUpload","maxCount","multiple","accept","fileList","UploadOutlined","controls","ViewQuestion","roomDetails","setRoomDetails","selected","setSelected","setLanguage","getUserCode","newSelected","options","ManageSelected","showTable","setShowTable","noOfTCases","tCasesPassed","handleSelected","paddingLeft","paddingBottom","CheckSubmissions","UserSettings","submitUsername","decoded","jwt_decode","isLogged","lastName","email","tabBarExtraContent","destroyInactiveTabPane","QuestionCircleOutlined","pattern","RegExp","Meta","Card","AboutUs","smooth","cover","alt","actions","AuthRouter","handleError","JWTtoken","token","currentTime","Date","now","exp","exact","path","pathname","VerifyEmail","countdown","setCountdown","result","setResult","statusColor","setStatusColor","otp","Signup","rePassword","warningOnly","offset","ChangePassword","showPasswordAndOTP","setShowPasswordAndOTP","requestOTP","changePassword","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","ReduxCombined","combineReducers","defaults","baseURL","common","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","StrictMode","maxSnack","anchorOrigin","vertical","horizontal","autoHideDuration","getElementById"],"mappings":"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","file":"static/js/main.1b8df2cd.chunk.js","sourcesContent":["import { Form, Input, Button } from \"antd\";\r\nimport axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nexport default function Login() {\r\n    document.title = \"Login | Code Rooms\"\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [userName, setUserName] = useState(\"\");\r\n    const history = useHistory();\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n    const resendEmail = async(key) => {\r\n        closeSnackbar(key);\r\n        setLoading(true);\r\n        await axios.get(\"/auth/resend_verification_link\", {\r\n            params: {\r\n                username: userName\r\n            }\r\n        })\r\n            .then(res => {\r\n                enqueueSnackbar(\"Verification link sent.\", {variant: 'success'});\r\n            })\r\n            .catch(err => {\r\n                try {\r\n                    enqueueSnackbar(err.response.data.detail, {\r\n                        variant: \"error\",\r\n                    });\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some Error occurred.\", {\r\n                        variant: \"error\",\r\n                    });\r\n                }\r\n            })\r\n        setLoading(false);\r\n    }\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <>\r\n            <div onClick={() => { resendEmail(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", paddingRight:\"8px\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Resend Email\r\n            </div>\r\n            <div onClick={() => { closeSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dismiss\r\n            </div>\r\n            </>\r\n        </React.Fragment>\r\n    );\r\n\r\n    const onFinish = async values => {\r\n        setLoading(true);\r\n        setUserName(values.userName);\r\n        await axios\r\n            .post(\"/auth/login\", {\r\n                username: values.userName,\r\n                password: values.password,\r\n            })\r\n            .then(res => {\r\n                // console.log(res);\r\n                localStorage.setItem(\"JWTtoken\", res.data.access_token);\r\n                try {\r\n                    window.location.href = history.location.state.from;\r\n                } catch (error) {\r\n                    window.location.href = \"/\";\r\n                }\r\n            })\r\n            .catch(err => {\r\n                try {\r\n                    if(err.response.status === 406){\r\n                        enqueueSnackbar(err.response.data.detail, {\r\n                            variant: 'warning',\r\n                            persist: true,\r\n                            action,\r\n                        });\r\n                    }\r\n                    else{\r\n                        enqueueSnackbar(err.response.data.detail, {\r\n                            variant: \"error\",\r\n                        });\r\n                    }\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some Error occurred.\", {\r\n                        variant: \"error\",\r\n                    });\r\n                }\r\n            });\r\n        setLoading(false);\r\n    };\r\n\r\n    const onFinishFailed = errorInfo => {\r\n        // console.log(errorInfo);\r\n        try {\r\n            enqueueSnackbar(errorInfo.errorFields[0].errors[0], {\r\n                variant: \"error\",\r\n            });\r\n        } catch (error) {\r\n            enqueueSnackbar(\"Some Error occurred.\", {\r\n                variant: \"error\",\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-outer-div\">\r\n            <img\r\n                src=\"./Logo.PNG\"\r\n                style={{ alignSelf: \"center\", width: '250px', boxShadow: \"20px 20px 2px rgba(0, 0, 0, 0.3)\" }}\r\n            />\r\n            <div className=\"login-header-div\">Login</div>\r\n\r\n            <Form\r\n                name=\"basic\"\r\n                labelCol={{\r\n                    span: 24,\r\n                }}\r\n                wrapperCol={{\r\n                    span: 24,\r\n                }}\r\n                initialValues={{\r\n                    remember: true,\r\n                }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                autoComplete=\"off\"\r\n                className=\"login-form\"\r\n            >\r\n                <Form.Item\r\n                    label={<label style={{ color: \"var(--primaryText)\" }}>Username / Email</label>}\r\n                    name=\"userName\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your username/email !\",\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label={<label style={{ color: \"var(--primaryText)\" }}>Password</label>}\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your password!\",\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n                <div>\r\n                    <a href=\"/change_password\"> Forgot password. </a>\r\n                </div>\r\n                <a href=\"/signup\"> Dont have an account ? Create one. </a>\r\n                \r\n                <Form.Item>\r\n                    <Button\r\n                        htmlType=\"submit\"\r\n                        loading={loading}\r\n                        style={{\r\n                            backgroundColor: \"var(--success)\",\r\n                            // width: \"100px\",\r\n                            fontSize: \"20px\",\r\n                            height: \"auto\",\r\n                            marginTop: \"10px\",\r\n                        }}\r\n                    >\r\n                        Log in\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n","export const loginUser = details => {\r\n    return {\r\n        type: \"AR_SET_LOGGED\",\r\n        payload: details,\r\n    };\r\n};\r\n\r\nexport const logoutUser = () => {\r\n    localStorage.removeItem(\"JWTtoken\");\r\n    return {\r\n        type: \"AR_LOGOUT\",\r\n    };\r\n};\r\n","export const setMyRoomsLoading = () => {\r\n    return {\r\n        type: \"RDR_SET_MYROOMS_LOADING\"\r\n    };\r\n};\r\n\r\nexport const removeMyRoomsLoading = () => {\r\n    return {\r\n        type: \"RDR_REMOVE_MYROOMS_LOADING\"\r\n    };\r\n};\r\n\r\nexport const setMyRooms = (data) => {\r\n    return {\r\n        type: \"RDR_SET_MYROOMS\",\r\n        payload: data\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const setEnrolledLoading = () => {\r\n    return {\r\n        type: \"RDR_SET_ENROLLED_LOADING\"\r\n    };\r\n};\r\n\r\nexport const removeEnrolledLoading = () => {\r\n    return {\r\n        type: \"RDR_REMOVE_ENROLLED_LOADING\"\r\n    };\r\n};\r\n\r\nexport const setEnrolled = (data) => {\r\n    return {\r\n        type: \"RDR_SET_ENROLLED\",\r\n        payload: data\r\n    };\r\n};\r\n\r\n\r\nexport const setBreadcrumb = (data) => {\r\n    return {\r\n        type: \"RDR_SET_BREADCRUMB\",\r\n        payload: data\r\n    };\r\n};\r\n","import Countdown from \"antd/lib/statistic/Countdown\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { RiCodeLine, RiFileAddLine } from \"react-icons/ri\";\r\nimport SemipolarLoading from \"react-loadingg/lib/SemipolarLoading\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logoutUser } from \"../Redux/Actions/AuthActions\";\r\nimport { setBreadcrumb } from \"../Redux/Actions/RoomsDataActions\";\r\n\r\nexport default function Home() {\r\n    document.title = \"Home | Code Rooms\";\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [due, setDue] = useState([]);\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(async () => {\r\n        dispatch(setBreadcrumb([]));\r\n        setLoading(true);\r\n        await axios\r\n            .get(\"/due_questions\")\r\n            .then(res => {\r\n                setDue(res.data.due);\r\n            })\r\n            .catch(err => {\r\n                if (!err.response) {\r\n                    enqueueSnackbar(\"Some Error occurred while getting due questions.\", { variant: \"error\" });\r\n                    return;\r\n                }\r\n                if (err.response.status === 401) {\r\n                    dispatch(logoutUser());\r\n                } else {\r\n                    enqueueSnackbar(\"Some Error occurred while getting due questions\", { variant: \"error\" });\r\n                }\r\n            });\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    const timeConditions = (question) => {\r\n        if(moment(question.endTime).diff(moment().format(), 'seconds') < 0 ){\r\n            return(\r\n                <div style={{color: 'var(--error)', fontSize: '22px'}}>\r\n                    Due date over\r\n                </div>\r\n            )\r\n        }\r\n        if(moment(question.endTime).diff(moment().format(), 'hours') > 48){\r\n            return(\r\n                <span style={{ fontSize: \"20px\", display: \"inline-flex\", color: \"var(--privateRoom)\" }}>\r\n                    Due : {moment(question.endTime).format(\"Do MMM\")}\r\n                </span>\r\n            )\r\n        }\r\n        if(moment(question.endTime).diff(moment().format(), 'hours') > 24){\r\n            return(\r\n                <span style={{ fontSize: \"20px\", display: \"inline-flex\", color: \"var(--privateRoom)\" }}>\r\n                    Due : Tommorow\r\n                </span>\r\n            )\r\n        }\r\n        if(moment(question.endTime).diff(moment().format(), 'hours') > 10){\r\n            return(\r\n                <span style={{ fontSize: \"20px\", display: \"inline-flex\", color: \"var(--privateRoom)\" }}>\r\n                    Due : Today\r\n                </span>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div>\r\n    \r\n                    <Countdown\r\n                        valueStyle={{color: 'var(--privateRoom)', fontSize: '22px'}}\r\n                        value={question.endTime}\r\n                        onFinish={() => {\r\n                            window.location.reload();\r\n                        }}\r\n                        format=\"[Due] : H[h] : m[m] : s[s]\"\r\n                    />\r\n                </div> \r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    return loading ? (\r\n        <div className=\"VerifyEmail-heading-div\">\r\n            <div>Getting Your Data ....</div>\r\n            <div style={{marginTop: \"40px\", position: 'relative'}}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\"  />\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        due.length === 0 ? (\r\n            <div className=\"playground-code-title\" style={{paddingTop: '20px'}}>No Questions Due !!</div> \r\n            ) : (\r\n            <>\r\n                <div className=\"playground-code-title\" style={{paddingTop: '20px'}}>Questions Due</div> \r\n                <div style={{ fontSize: \"20px\", color: \"#fff\" }}>\r\n                    {due.map(question => (\r\n                        <Link to={\"/question?qId=\" + question.questionId} key={\"room.roomId\"}>\r\n                            <div className=\"myRooms-cards-box\">\r\n                                <div className=\"myRooms-cards-info\">\r\n                                    <div className=\"myRooms-cards-title\">\r\n                                        <span>{question.title}</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <div className=\"myRooms-cards-description\">\r\n                                        <span\r\n                                            style={{\r\n                                                marginLeft: \"10px\",\r\n                                                display: \"inline-flex\",\r\n                                                minWidth: \"70px\",\r\n                                                fontWeight: \"bolder\",\r\n                                            }}\r\n                                        >\r\n                                            Room\r\n                                        </span>\r\n                                        : {question.roomName}\r\n                                    </div>\r\n                                    <div className=\"myRooms-cards-description\" style={{marginLeft: '8px'}}>\r\n                                    {\r\n                                        question._type === \"code\" ? (\r\n                                            <>\r\n                                                <RiCodeLine />\r\n                                                <span style={{ marginLeft: \"10px\", display: \"inline-flex\" }}>\r\n                                                    Code Type\r\n                                                </span>\r\n                                            </>\r\n                                        ) :(\r\n                                            <>\r\n                                                <RiFileAddLine />\r\n                                                <span style={{ marginLeft: \"10px\", display: \"inline-flex\" }}>\r\n                                                    File Type\r\n                                                </span>\r\n                                            </>\r\n                                        )\r\n                                    }\r\n                                    </div>\r\n                                    <div className=\"myRooms-card-bottom-bar\">\r\n                                        {timeConditions(question)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    ))}\r\n                </div>\r\n            </>\r\n        )\r\n    )   \r\n}\r\n","import { Divider } from 'antd'\r\nimport React from 'react'\r\n\r\nexport default function MyDivider() {\r\n    return (\r\n        <Divider style={{margin: \"0px\"}} />\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Menu } from 'antd';\r\nimport { BsPersonSquare } from \"react-icons/bs\";\r\nimport { VscVersions } from \"react-icons/vsc\";\r\nimport {\r\n    MenuOutlined,\r\n    AppstoreOutlined,\r\n    HomeOutlined,\r\n    InfoCircleFilled,\r\n    LogoutOutlined,\r\n    BookOutlined,\r\n    PlusCircleOutlined,\r\n    CodeOutlined,\r\n    SettingOutlined\r\n} from '@ant-design/icons';\r\nimport { logoutUser } from \"../Redux/Actions/AuthActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MyDivider from \"../Components/MyDivider\";\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nexport default function NavbarDrawer() {\r\n    const [drawerOpen, setDrawerOpen] = useState(false);\r\n\r\n    const authReducer = useSelector(state => state.authReducer);\r\n    const roomsDataReducer = useSelector(state => state.roomsDataReducer);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const openDrawer = () => {\r\n        setDrawerOpen(true);\r\n    };\r\n    const closeDrawer = () => {\r\n        setDrawerOpen(false);\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        dispatch(logoutUser());\r\n    }\r\n\r\n    const pushLink = (link) => {\r\n        setDrawerOpen(false);\r\n        history.push(link)\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <MenuOutlined style={{ fontSize: \"25px\", color: \"var(--primaryText)\" }} onClick={openDrawer} />\r\n\r\n            <Drawer\r\n                title={\r\n                    <div style={{ width: \"100%\", display: \"inline-flex\", alignItems: \"center\" }}>\r\n                        <BsPersonSquare style={{ fontSize: \"20px\", marginRight: \"20px\" }} />\r\n                        <div style={{ fontSize: \"20px\" }}>{authReducer.userName}</div>\r\n                    </div>\r\n                }\r\n                footer={\r\n                    <Menu style={{  background: 'var(--primaryBackground)'}} mode=\"vertical\" theme=\"dark\" selectable={false}>\r\n                        <MyDivider />\r\n\r\n                        <Menu.Item key=\"2\" icon={<VscVersions />}>\r\n                            Version 0.1\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                }\r\n                keyboard={true}\r\n                placement=\"left\"\r\n                closable={false}\r\n                onClose={closeDrawer}\r\n                visible={drawerOpen}\r\n                key=\"left\"\r\n                bodyStyle={{ \r\n                    backgroundColor: \"var(--primaryBackground)\",\r\n                    padding: '0px'\r\n                }}\r\n                headerStyle={{\r\n                    backgroundColor: \"var(--primaryBackground)\",\r\n                    height: \"61px\",\r\n                    borderBottom: \"2px solid var(--primaryText)\",\r\n                }}\r\n                footerStyle={{\r\n                    backgroundColor: \"var(--primaryBackground)\",\r\n                    borderTop: \"None\",\r\n                    padding: '0px'\r\n                    // fontSize: \"18px\",\r\n                }}\r\n                defaultSelectedKeys={['home']}\r\n                defaultOpenKeys={['home']}\r\n            >\r\n                <Menu style={{  background: 'var(--primaryBackground)'}} mode=\"vertical\" theme=\"dark\" selectable={false}>\r\n\r\n                    <Menu.Item key=\"home\" className=\"navbar-drawer-item\" icon={<HomeOutlined/>} onClick={() => {pushLink(`/`)}}>\r\n                        Home\r\n                    </Menu.Item>\r\n\r\n                    <MyDivider />\r\n                    \r\n                    <SubMenu icon={<BookOutlined />} title=\"Enrolled Rooms\" key=\"sub1\" onTitleClick={() => {pushLink(`/enrolled_rooms`)}}>\r\n                        {  \r\n                            roomsDataReducer.enrolledRoomsLoading ? (\r\n                                <Menu.Item >Loading .....</Menu.Item>\r\n                            ) : (\r\n                                roomsDataReducer.enrolledRooms.length === 0 ? (\r\n                                    <Menu.Item >No Rooms</Menu.Item>\r\n                                ) : (\r\n                                    roomsDataReducer.enrolledRooms.map(room => (\r\n                                        <Menu.Item key={room.roomId} onClick={() => {pushLink(`/enrolled_rooms/${room.roomId}`)}}>\r\n                                            {room.roomName}\r\n                                        </Menu.Item>\r\n                                    ))\r\n                                )\r\n                            )\r\n                        }\r\n                    </SubMenu>\r\n\r\n                    <MyDivider />\r\n\r\n                    <SubMenu icon={<AppstoreOutlined/>} title=\"My Rooms\" key=\"sub2\" onTitleClick={() => {pushLink(`/my_rooms`)}} >\r\n                        {  \r\n                            roomsDataReducer.myRoomsLoading ? (\r\n                                <Menu.Item >Loading .....</Menu.Item>\r\n                            ) : (\r\n                                roomsDataReducer.myRooms.length === 0 ? (\r\n                                    <Menu.Item >No Rooms</Menu.Item>\r\n                                ) : (\r\n                                    roomsDataReducer.myRooms.map(room => (\r\n                                        <Menu.Item key={room.roomId} onClick={() => {pushLink(`/my_rooms/${room.roomId}`)}}>\r\n                                            {room.roomName}\r\n                                        </Menu.Item>\r\n                                    ))\r\n                                )\r\n                            )\r\n                        }\r\n\r\n                        <MyDivider />\r\n\r\n                        <Menu.Item icon={<PlusCircleOutlined />} onClick={() =>{pushLink(\"/my_rooms?createNewRoom=true\")}}>\r\n                            Create New\r\n                        </Menu.Item>\r\n\r\n                    </SubMenu>\r\n                    \r\n                    <MyDivider />\r\n\r\n                    <Menu.Item icon={<CodeOutlined />} key=\"code\" onClick={() =>{pushLink(\"/code\")}}>\r\n                        Code Playground\r\n                    </Menu.Item>\r\n\r\n                    <MyDivider />\r\n\r\n                    <Menu.Item icon={<SettingOutlined />} key=\"settings\" onClick={() =>{pushLink(\"/user_settings\")}}>\r\n                        Settings\r\n                    </Menu.Item>\r\n\r\n                   \r\n                    <MyDivider />\r\n\r\n                    <Menu.Item icon={<InfoCircleFilled />} key=\"about\" onClick={() =>{pushLink(\"/about\")}} >\r\n                        About\r\n                    </Menu.Item>\r\n\r\n                    <MyDivider />\r\n\r\n                    <Menu.Item icon={<LogoutOutlined />} key=\"logout\" onClick={handleLogout}>\r\n                        Logout\r\n                    </Menu.Item>\r\n                    \r\n                    <MyDivider />\r\n                    \r\n                </Menu>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport NavbarDrawer from \"./NavbarDrawer\";\r\nimport { Breadcrumb, Tooltip } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function MyNavbar() {\r\n    const roomsDataReducer = useSelector(state => state.roomsDataReducer);\r\n\r\n    return (\r\n        <div className=\"navbar-outer-div\">\r\n            <div style={{ display: \"inline-flex\" }}>\r\n                <NavbarDrawer />\r\n                <Breadcrumb style={{display: 'flex', alignItems: 'center', marginLeft: '20px', fontSize: '18px'}}>\r\n                    <Breadcrumb.Item href=\"\">\r\n                        <Link to=\"/\" >\r\n                            {/* <HomeOutlined style={{fontSize: '16px'}} /> */}\r\n                            <span style={{marginLeft: '3px'}}>Home</span>\r\n                        </Link>\r\n                    </Breadcrumb.Item>\r\n\r\n                    {\r\n                        roomsDataReducer.breadcrumb.map(page => (\r\n                            <Breadcrumb.Item href=\"\">\r\n                                <Link to={page.url} >\r\n                                    <span style={{marginLeft: '3px'}}>{page.name}</span>\r\n                                </Link>\r\n                            </Breadcrumb.Item>\r\n                        ))\r\n                    }\r\n\r\n\r\n                </Breadcrumb>\r\n            </div>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <Tooltip title=\"shlokzanwar14@gmail.com\">\r\n                    <div style={{ fontSize: \"25px\", margin: \"0px 20px\", fontStyle: \"italic\", cursor: \"pointer\" }}>\r\n                        Code Rooms\r\n                    </div>\r\n                </Tooltip>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { Button, Result } from \"antd\";\r\nimport React from \"react\";\r\nimport { BsPeople, BsPatchQuestion } from \"react-icons/bs\";\r\nimport Masonry from \"react-masonry-css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function RenderRooms({createNewRoom}) {\r\n    const breakpoints = {\r\n        default: 5,\r\n        1900: 4,\r\n        1520: 3,\r\n        1180: 2,\r\n        830: 1,\r\n    };\r\n    const roomsDataReducer = useSelector(state => state.roomsDataReducer);\r\n\r\n    const getVisblity = (visibility) => {\r\n        if(visibility === \"public\"){\r\n            return(\r\n                <div className=\"myRooms-room-visibility myRooms-public-room\">\r\n                    Public\r\n                </div>\r\n            )\r\n        }\r\n        else if(visibility === \"private\"){\r\n            return(\r\n                <div className=\"myRooms-room-visibility myRooms-private-room\">\r\n                    Private\r\n                </div>\r\n            )\r\n        }\r\n        else if(visibility === \"hidden\"){\r\n            return(\r\n                <div className=\"myRooms-room-visibility myRooms-hidden-room\">\r\n                    Hidden\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return roomsDataReducer.myRooms.length === 0 ? (\r\n        <Result\r\n            title=\"No Rooms created.\"\r\n            extra={\r\n                <Button type=\"primary\" key=\"console\" onClick={createNewRoom}>\r\n                    Create First Room\r\n                </Button>\r\n            }\r\n        />\r\n    ) : (\r\n        <div className=\"myRooms-cards-outer\">\r\n            <Masonry breakpointCols={breakpoints} className=\"my-masonry-grid\" columnClassName=\"my-masonry-grid_column\">\r\n                {roomsDataReducer.myRooms.map(room => (\r\n                    <Link to={\"/my_rooms/\" + room.roomId} key={room.roomId}>\r\n                        <div className=\"myRooms-cards-box\">\r\n                            <div className=\"myRooms-cards-info\">\r\n                                <div className=\"myRooms-cards-title\">\r\n                                    {/* <AppstoreOutlined /> */}\r\n                                    <span>{room.roomName}</span>\r\n                                </div>\r\n                                <div className=\"myRooms-cards-description\">\r\n                                    <BsPeople />\r\n                                    <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"150px\" }}>\r\n                                        Enrolled\r\n                                    </span>\r\n                                    {room.enrolled}\r\n                                </div>\r\n                                <div className=\"myRooms-cards-description\">\r\n                                    <BsPatchQuestion />\r\n                                    <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"150px\" }}>\r\n                                        Questions\r\n                                    </span>\r\n                                    {room.questions}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"myRooms-card-bottom-bar\">\r\n                                {getVisblity(room.visibility)}\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                ))}\r\n            </Masonry>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Divider } from \"antd\";\r\nimport SemipolarLoading from \"react-loadingg/lib/SemipolarLoading\";\r\nimport RenderRooms from \"./RenderRooms\";\r\nimport { removeMyRoomsLoading, setBreadcrumb, setMyRooms, setMyRoomsLoading } from \"../../Redux/Actions/RoomsDataActions\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { logoutUser } from \"../../Redux/Actions/AuthActions\";\r\n\r\nexport default function AllRooms({getMyRoomsData}) {\r\n    document.title = \"My Rooms | Code Rooms\";\r\n\r\n    const [loadingMessage, setLoadingMessage] = useState(\"Getting Your Rooms Data ....\");\r\n    \r\n    const roomsDataReducer = useSelector(state => state.roomsDataReducer);\r\n    const authReducer = useSelector(state => state.authReducer);\r\n    const dispatch = useDispatch();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const history = useHistory();\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n\r\n    const createBreadcrumb = () => {\r\n        getMyRoomsData()\r\n        dispatch(setBreadcrumb( [\r\n            {\r\n                \"name\": \"My Rooms\",\r\n                \"url\": \"/my_rooms\"\r\n            }\r\n        ] ));\r\n    }\r\n\r\n    useEffect(() => {\r\n        createBreadcrumb();\r\n        if(queryParams.has(\"createNewRoom\")){\r\n            createNewRoom();\r\n        }\r\n    }, [queryParams.get(\"createNewRoom\")])\r\n\r\n    const createNewRoom = async() => {\r\n        setLoadingMessage(\"Creating a new Room, please wait ....\");\r\n        dispatch(setMyRoomsLoading());\r\n        await axios.post(\"/create_room\", {\r\n            roomName: authReducer.firstName + \"'s Room \" + (roomsDataReducer.myRooms.length + 1)\r\n        })\r\n            .then(res => {\r\n                dispatch(setMyRooms(res.data.myRooms))\r\n                history.push(\"/my_rooms/\" + res.data.newRoomId + \"?settingsOpen=true\");\r\n            })\r\n            .catch(err => {\r\n                if(!err.response){\r\n                    enqueueSnackbar(\"Some Error occurred while creating room\", {variant: 'error'});\r\n                    return;\r\n                }\r\n                if(err.response.status === 401){\r\n                    dispatch(logoutUser());\r\n                }\r\n                else{\r\n                    enqueueSnackbar(\"Some Error occurred while creating room\", {variant: 'error'})\r\n                }\r\n            })\r\n        dispatch(removeMyRoomsLoading());\r\n    }\r\n\r\n    \r\n\r\n    return roomsDataReducer.myRoomsLoading ? (\r\n        <div className=\"VerifyEmail-heading-div\">\r\n            <div>{loadingMessage}</div>\r\n            <div style={{marginTop: \"40px\", position: 'relative'}}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\"  />\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div className=\"myRooms-outer-div\">\r\n\r\n            <div className=\"myRooms-header\">\r\n                <span>Your Rooms</span>\r\n                <div className=\"myRooms-createNew-button\" onClick={createNewRoom}>\r\n                    <PlusCircleOutlined />\r\n                    <span style={{marginLeft: '5px'}}> Create New </span>\r\n                </div>\r\n            </div>\r\n\r\n            <Divider />\r\n\r\n            <RenderRooms createNewRoom={createNewRoom} />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useDebugValue, useState } from \"react\";\r\nimport { Modal, Button, Input, Form, Switch, Select, Divider, Tooltip } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { setMyRooms } from \"../../Redux/Actions/RoomsDataActions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { BsFillQuestionDiamondFill } from \"react-icons/bs\";\r\n\r\nexport default function RoomSettings({ settingsVisible, setSettingsVisible, roomInfo, setRoomInfo }) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [specialFields, setSpecialFields] = useState(roomInfo.specialFields || []);\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n\r\n    const onFinish = values => {\r\n        console.log(values);\r\n        handleSave(values);\r\n    };\r\n\r\n    const handleSave = async newData => {\r\n        setLoading(true);\r\n        await axios.post(\"/update_room_settings\", {\r\n            roomId: roomInfo.roomId,\r\n            roomName: newData.roomName === undefined ? roomInfo.roomName : newData.roomName,\r\n            visibility: newData.visibility === undefined ? roomInfo.visibility : newData.visibility,\r\n            waitingRoomEnabled: newData.waitingRoomEnabled === undefined ? roomInfo.waitingRoomEnabled : newData.waitingRoomEnabled,\r\n            specialFields: specialFields,\r\n        })\r\n            .then(res => {\r\n                // console.log(res);\r\n                dispatch(setMyRooms(res.data.myRooms));\r\n                var newRoomInfo = { ...roomInfo };\r\n                newRoomInfo.roomName = res.data.roomInfo.roomName;\r\n                newRoomInfo.visibility = res.data.roomInfo.visibility;\r\n                newRoomInfo.waitingRoomEnabled = res.data.roomInfo.waitingRoomEnabled;\r\n                newRoomInfo.enrolled = res.data.roomInfo.enrolled;\r\n                setRoomInfo(newRoomInfo);\r\n                setSettingsVisible(false);\r\n                enqueueSnackbar(\"Settings Updated\", { variant: \"success\" });\r\n            })\r\n            .catch(err => {\r\n                // console.log(err);\r\n                enqueueSnackbar(\"Error while updating Settings\", { variant: \"error\" });\r\n\r\n            });\r\n        setLoading(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setSettingsVisible(false);\r\n    };\r\n\r\n    const changeSpecialField = (e, index) => {\r\n        const newData = [...specialFields];\r\n        newData[index] = e.target.value;\r\n        setSpecialFields(newData);\r\n    };\r\n    const removeField = index => {\r\n        const newData = specialFields.filter((field, i) => index !== i);\r\n        setSpecialFields(newData);\r\n    };\r\n\r\n    const addField = () => {\r\n        const newData = [...specialFields];\r\n        newData.push(\"New Field\");\r\n        setSpecialFields(newData);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title={<div className=\"myRooms-header\">Settings</div>}\r\n            visible={settingsVisible}\r\n            destroyOnClose={true}\r\n            onCancel={handleCancel}\r\n            style={{ Radius: \"20px\" }}\r\n            footer={null}\r\n        >\r\n            <Form layout=\"horizontal\" onFinish={onFinish}>\r\n                <Form.Item name=\"roomName\" labelCol={{ span: 5 }} wrapperCol={{ span: 10 }} label=\"Room Name\" labelAlign=\"right\">\r\n                    <Input defaultValue={roomInfo.roomName} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    wrapperCol={{ span: 10 }}\r\n                    labelCol={{ span: 5 }}\r\n                    label=\"Visibility\"\r\n                    name=\"visibility\"\r\n                    labelAlign=\"right\"\r\n                >\r\n                    <Select defaultValue={roomInfo.visibility}>\r\n                        {/* <Select.Option value=\"public\">Public</Select.Option> */}\r\n                        <Select.Option value=\"private\">Private</Select.Option>\r\n                        <Select.Option value=\"hidden\">Hidden</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{ span: 2 }} label=\"Waiting room\" name=\"waitingRoomEnabled\">\r\n                    <Switch defaultChecked={roomInfo.waitingRoomEnabled} />\r\n                </Form.Item>\r\n\r\n                <Divider />\r\n\r\n                <div\r\n                    style={{\r\n                        fontSize: \"23px\",\r\n                        display: \"inline-flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"space-between\",\r\n                        width: \"100%\",\r\n                        marginBottom: \"10px\",\r\n                    }}\r\n                >\r\n                    <div>\r\n                        <span style={{ marginRight: \"10px\" }}>Special Fields</span>\r\n                        <Tooltip title=\"Special Field take extra inputs from user to identify them better. It can only be used when there are 0 users enrolled.\">\r\n                            <BsFillQuestionDiamondFill />\r\n                        </Tooltip>\r\n                    </div>\r\n                    <div>\r\n                        <Button onClick={addField} hidden={roomInfo.enrolled > 0 || roomInfo.waitingRoomCount > 0}>\r\n                            Add\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                {roomInfo.enrolled > 0 || roomInfo.waitingRoomCount > 0 ? \r\n                    <span></span> :\r\n                    <span style={{color: 'var(--error)'}}> Note !! Name, email and username are already collected .. </span>\r\n                }\r\n\r\n                {specialFields.length === 0 ? <span>No fields</span> : <></> }\r\n\r\n                {specialFields.map((field, index) => (\r\n                    <div style={{ margin: \"10px\" }}>\r\n                        <div style={{ display: \"inline-flex\" }}>\r\n                            <Input\r\n                                value={field}\r\n                                onChange={e => {\r\n                                    changeSpecialField(e, index);\r\n                                }}\r\n                                readOnly={roomInfo.enrolled > 0 || roomInfo.waitingRoomCount > 0}\r\n                            />\r\n                            <Button\r\n                                onClick={() => {\r\n                                    removeField(index);\r\n                                }}\r\n                                danger={true}\r\n                                style={{ marginLeft: \"10px\" }}\r\n                                hidden={roomInfo.enrolled > 0 || roomInfo.waitingRoomCount > 0}\r\n                            >\r\n                                Remove\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n\r\n                <Divider />\r\n                <Button htmlType=\"submit\" type=\"primary\" disabled={loading}>\r\n                    {loading ? \"Loading ...\" : \"Save and Close\"}\r\n                </Button>\r\n            </Form>\r\n\r\n        </Modal>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Popconfirm, Result, Tooltip } from \"antd\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Masonry from \"react-masonry-css\";\r\nimport moment from \"moment\";\r\nimport { RiDeleteBin5Line, RiCodeLine, RiFileAddLine } from \"react-icons/ri\";\r\nimport axios from \"axios\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logoutUser } from \"../../Redux/Actions/AuthActions\";\r\n\r\nexport default function RenderQuestions({getInitialData, questions, enrolled }) {\r\n    const breakpoints = {\r\n        default: 5,\r\n        1900: 4,\r\n        1520: 3,\r\n        1180: 2,\r\n        830: 1,\r\n    };\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n\r\n    const deleteQuestion = async (id) => {\r\n        await axios.post(\"/delete_question\", {\r\n            questionId: id,\r\n        })\r\n            .then(res => {\r\n                enqueueSnackbar(\"Question deleted succesfully!\", { variant: \"info\" });\r\n                getInitialData();\r\n            })\r\n            .catch(err => {\r\n                try {\r\n                    if (err.response.status === 401) {\r\n                        dispatch(logoutUser());\r\n                        return;\r\n                    }\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some error occured while deleting this room\", { variant: \"error\" });\r\n                }\r\n            });\r\n     };\r\n\r\n\r\n    const renderVisibility = (question) => {\r\n\r\n        if(!question.isVisible){\r\n            return(\r\n                <div className={\"myRooms-room-visibility myRooms-hidden-room\" } >\r\n                    Hidden\r\n                </div>\r\n            )\r\n        }\r\n        if( moment(moment().format()).isAfter(moment(question.endTime)) ){\r\n            return(\r\n                <div className={\"myRooms-room-visibility myRooms-private-room\" } >\r\n                    Due Over\r\n                </div>\r\n            )\r\n        }\r\n        if(question.isVisible){\r\n            return(\r\n                <div className={\"myRooms-room-visibility myRooms-public-room\" } >\r\n                    Visible\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div className={\"myRooms-room-visibility myRooms-hidden-room\" } >\r\n                    Hidden\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    return questions.length === 0 ? (\r\n        <Result title=\"No Questions in this room.\"/>\r\n    ) : (\r\n        <>\r\n            <Masonry breakpointCols={breakpoints} className=\"my-masonry-grid\" columnClassName=\"my-masonry-grid_column\">\r\n                {questions.map(question => (\r\n                    <>\r\n                        <div className=\"myRooms-cards-box\" style={{cursor: 'auto'}}>\r\n                            <Popconfirm\r\n                                title={\r\n                                    <>\r\n                                        Are you sure you want to delete this Question?\r\n                                        <br />\r\n                                        Deleting this question will remove all its data and will be lost forever.\r\n                                    </>\r\n                                }\r\n                                onConfirm={() => {deleteQuestion(question.questionId);}}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"Cancel\"\r\n                                overlayInnerStyle={{\r\n                                    maxWidth: \"400px\",\r\n                                    backgroundColor: \"var(--primaryBackground)\",\r\n                                    border: \"2px solid var(--primaryText)\",\r\n                                }}\r\n                            >\r\n                                <div style={{ position: \"absolute\", top: \"2%\", right: \"2%\", fontSize: \"25px\", cursor: 'pointer' }}>\r\n                                    <RiDeleteBin5Line />\r\n                                </div>\r\n                            </Popconfirm>   \r\n\r\n                            <Tooltip title={\"Type : \" + question.type} >\r\n                                <div style={{ position: \"absolute\", top: \"2%\", left: \"2%\", fontSize: \"25px\", cursor: 'pointer' }}>\r\n                                    {question.type === \"code\" ? <RiCodeLine /> : <RiFileAddLine />}\r\n                                </div>\r\n                            </Tooltip>\r\n\r\n                            <div className=\"myRooms-cards-info\">\r\n                                <div className=\"myRooms-cards-title\">\r\n                                    <span>{question.title}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{display: \"inline-flex\", justifyContent: \"space-between\", width: \"100%\", padding: \"0px 15px\"}} >\r\n                                <div>\r\n                                    <div className=\"myRooms-cards-description\">\r\n                                        <div className=\"questions-submitted-div\" />\r\n                                        <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"120px\" }}>\r\n                                            Submitted\r\n                                        </span>\r\n                                        {question.submitted}\r\n                                    </div>\r\n                                    <div className=\"myRooms-cards-description\">\r\n                                        <div className=\"questions-remaining-div\" />\r\n                                        <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"120px\" }}>Remaining</span>\r\n                                        {enrolled - question.submitted}\r\n                                    </div>\r\n                                </div>\r\n                                <PieChart\r\n                                    style={{ width: \"70px\" }}\r\n                                    lineWidth={35}\r\n                                    paddingAngle={5}\r\n                                    data={[\r\n                                        { \r\n                                            title: \"Submitted (\" + question.submitted + \")\",\r\n                                            value: question.submitted, \r\n                                            color: \"var(--success)\" \r\n                                        },\r\n                                        { \r\n                                            title: \"Not Submitted (\" + (enrolled - question.submitted) + \")\", \r\n                                            value: enrolled === 0 ? 1 : (enrolled - question.submitted), \r\n                                            color: \"var(--error)\"\r\n                                        },\r\n                                    ]}\r\n                                />\r\n                            </div>\r\n                            <div className=\"myRooms-card-bottom-bar\" style={{margin: '15px 0px'}}>\r\n                                {renderVisibility(question)}\r\n                            </div>\r\n                            <div>\r\n                                <Link className=\"myRooms-cards-buttons\" to={\"/edit_question?qId=\" + question.questionId}>\r\n                                    Edit\r\n                                </Link>\r\n                                <Link className=\"myRooms-cards-buttons\" to={\"/submissions?qId=\" + question.questionId}>\r\n                                    Submissions\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                ))}\r\n            </Masonry>\r\n        </>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Button, Input, Space, Popconfirm } from \"antd\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { TransverseLoading } from \"react-loadingg\";\r\nimport axios from \"axios\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nexport default function RoomEnrolled({ roomInfo, setRoomInfo, enrolledTable, setEnrolledTable }) {\r\n    const getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    ref={node => {\r\n                        var searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                    style={{ marginBottom: 8, display: \"block\" }}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined />}\r\n                        size=\"small\"\r\n                        style={{ width: 90 }}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                        Reset\r\n                    </Button>\r\n                    <Button\r\n                        type=\"link\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            confirm({ closeDropdown: false });\r\n\r\n                            setSearchText(selectedKeys[0]);\r\n                            setSearchedColumn(dataIndex);\r\n                        }}\r\n                    >\r\n                        Filter\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />,\r\n        onFilter: (value, record) =>\r\n            record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : \"\",\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n            }\r\n        },\r\n        render: text =>\r\n            searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                    highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n                    searchWords={[searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : \"\"}\r\n                />\r\n            ) : (\r\n                text\r\n            ),\r\n    });\r\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n\r\n        setSearchText(selectedKeys[0]);\r\n        setSearchedColumn(dataIndex);\r\n    };\r\n    const handleReset = clearFilters => {\r\n        clearFilters();\r\n        setSearchText(\"\");\r\n    };\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [searchedColumn, setSearchedColumn] = useState(\"\");\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [tableLoading, setTableLoading] = useState(false);\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    useEffect(async () => {\r\n        await axios.get(`/room_enrolled_members/${roomInfo.roomId}`)\r\n            .then(res => {\r\n                setEnrolledTable(res.data.members);\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Some Error occurred while getting room members.\", { variant: \"error\" });\r\n            });\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    const deleteMember = async (userId, tableId) => {\r\n        setTableLoading(true);\r\n        await axios.post(\"/reject_room_member\", {\r\n            roomId: roomInfo.roomId,\r\n            userId: userId,\r\n        })\r\n            .then(res => {\r\n                setEnrolledTable(enrolledTable.filter(data => data.tableId !== tableId));\r\n                var newRoomInfo = { ...roomInfo };\r\n                newRoomInfo.enrolled -= 1;\r\n                setRoomInfo(newRoomInfo);\r\n            })\r\n            .catch(err => {\r\n                try {\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Couldn't delete user.\", { variant: \"error\" });\r\n                }\r\n            });\r\n        setTableLoading(false);\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: \"Username\",\r\n            dataIndex: \"userName\",\r\n            key: \"userName\",\r\n            ...getColumnSearchProps(\"userName\"),\r\n            // sorter: (a, b) => a.device_code.length - b.device_code.length,\r\n            // sortDirections: [\"descend\", \"ascend\"],\r\n        },\r\n        {\r\n            title: \"Name\",\r\n            dataIndex: \"name\",\r\n            key: \"name\",\r\n            ...getColumnSearchProps(\"name\"),\r\n            // sorter: (a, b) => a.device_code.length - b.device_code.length,\r\n            // sortDirections: [\"descend\", \"ascend\"],\r\n        },\r\n        {\r\n            title: \"Email\",\r\n            dataIndex: \"email\",\r\n            key: \"email\",\r\n            ...getColumnSearchProps(\"email\"),\r\n            // sorter: (a, b) => a.device_code.length - b.device_code.length,\r\n            // sortDirections: [\"descend\", \"ascend\"],\r\n        },\r\n        {\r\n            title: \"SpecialFields\",\r\n            children: roomInfo.specialFields.map((field, index) => {\r\n                return{\r\n                    title: field,\r\n                    // dataIndex: field,\r\n                    key: field,\r\n                    render: row => (row.specialFields[index])\r\n                }\r\n            }),\r\n            hidden: roomInfo.specialFields.length === 0,\r\n        },\r\n        {\r\n            title: \"Remove\",\r\n            key: \"delete\",\r\n            width: \"100px\",\r\n            render: row => (\r\n                <Popconfirm\r\n                    title={\r\n                        <>\r\n                            Are you sure you want to remove {row.name} ?\r\n                        </>\r\n                    }\r\n                    onConfirm={() => {deleteMember(row.userId, row.tableId);}}\r\n                    okText=\"Yes\"\r\n                    cancelText=\"Cancel\"\r\n                    overlayInnerStyle={{\r\n                        maxWidth: \"440px\",\r\n                        backgroundColor: \"var(--primaryBackground)\",\r\n                        border: \"2px solid var(--primaryText)\",\r\n                    }}\r\n                >\r\n                    <Button danger={true}>Remove</Button>\r\n                </Popconfirm>\r\n            ),\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    return loading ? (\r\n        <div style={{ position: \"relative\", height: \"120px\", fontSize: \"25px\" }}>\r\n            <span style={{ marginBottom: \"100px\" }}>Loading ...</span>\r\n            <span>\r\n                <TransverseLoading color=\"var(--loadingColor)\" size=\"large\" />\r\n            </span>\r\n        </div>\r\n    ) : (\r\n        <div>\r\n            <Table \r\n                loading={tableLoading} \r\n                columns={columns} \r\n                dataSource={enrolledTable} \r\n                size=\"small\" \r\n                pagination={false} \r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Button, Input, Space, Popconfirm } from \"antd\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { TransverseLoading } from \"react-loadingg\";\r\nimport axios from \"axios\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nexport default function RoomWaiting({ roomInfo, setRoomInfo, waitingTable, setWaitingTable, enrolledTable, setEnrolledTable }) {\r\n    const getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    ref={node => {\r\n                        var searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                    style={{ marginBottom: 8, display: \"block\" }}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined />}\r\n                        size=\"small\"\r\n                        style={{ width: 90 }}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                        Reset\r\n                    </Button>\r\n                    <Button\r\n                        type=\"link\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            confirm({ closeDropdown: false });\r\n\r\n                            setSearchText(selectedKeys[0]);\r\n                            setSearchedColumn(dataIndex);\r\n                        }}\r\n                    >\r\n                        Filter\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />,\r\n        onFilter: (value, record) =>\r\n            record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : \"\",\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n            }\r\n        },\r\n        render: text =>\r\n            searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                    highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n                    searchWords={[searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : \"\"}\r\n                />\r\n            ) : (\r\n                text\r\n            ),\r\n    });\r\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n\r\n        setSearchText(selectedKeys[0]);\r\n        setSearchedColumn(dataIndex);\r\n    };\r\n    const handleReset = clearFilters => {\r\n        clearFilters();\r\n        setSearchText(\"\");\r\n    };\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [searchedColumn, setSearchedColumn] = useState(\"\");\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [tableLoading, setTableLoading] = useState(false);\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    useEffect(async () => {\r\n        await axios.get(`/room_waiting_members/${roomInfo.roomId}`)\r\n            .then(res => {\r\n                setWaitingTable(res.data.members);\r\n                setLoading(false);\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Some Error occurred while getting room members.\", { variant: \"error\" });\r\n            });\r\n    }, []);\r\n\r\n    const deleteMember = async (userId, tableId) => {\r\n        // alert(userId);\r\n        setTableLoading(true);\r\n        await axios.post(\"/reject_room_member\", {\r\n                roomId: roomInfo.roomId,\r\n                userId: userId,\r\n        })\r\n            .then(res => {\r\n                setWaitingTable(waitingTable.filter(data => data.tableId !== tableId));\r\n                var newRoomInfo = { ...roomInfo };\r\n                newRoomInfo.waitingRoomCount -= 1;\r\n                setRoomInfo(newRoomInfo);\r\n            })\r\n            .catch(err => {\r\n                try {\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Couldn't delete user.\", { variant: \"error\" });\r\n                }\r\n            });\r\n        setTableLoading(false);\r\n    };\r\n\r\n    const acceptMember = async (userId, tableId) => {\r\n        // alert(userId);\r\n        setTableLoading(true);\r\n        await axios.post(\"/accept_room_member\", {\r\n            roomId: roomInfo.roomId,\r\n            userId: userId,\r\n        })\r\n            .then(res => {\r\n                setEnrolledTable([...enrolledTable, (waitingTable.filter(data => data.tableId === tableId))[0] ]);\r\n                setWaitingTable(waitingTable.filter(data => data.tableId !== tableId));\r\n                var newRoomInfo = { ...roomInfo };\r\n                newRoomInfo.enrolled += 1;\r\n                newRoomInfo.waitingRoomCount -= 1;\r\n                setRoomInfo(newRoomInfo);\r\n                // console.log(waitingTable);\r\n            })\r\n            .catch(err => {\r\n                // console.log(err);\r\n                try {\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Couldn't delete user.\", { variant: \"error\" });\r\n                }\r\n            });\r\n        setTableLoading(false);\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: \"Username\",\r\n            dataIndex: \"userName\",\r\n            key: \"userName\",\r\n            ...getColumnSearchProps(\"userName\"),\r\n            // sorter: (a, b) => a.device_code.length - b.device_code.length,\r\n            // sortDirections: [\"descend\", \"ascend\"],\r\n        },\r\n        {\r\n            title: \"Name\",\r\n            dataIndex: \"name\",\r\n            key: \"name\",\r\n            ...getColumnSearchProps(\"name\"),\r\n            // sorter: (a, b) => a.device_code.length - b.device_code.length,\r\n            // sortDirections: [\"descend\", \"ascend\"],\r\n        },\r\n        {\r\n            title: \"Email\",\r\n            dataIndex: \"email\",\r\n            key: \"email\",\r\n            ...getColumnSearchProps(\"email\"),\r\n            // sorter: (a, b) => a.device_code.length - b.device_code.length,\r\n            // sortDirections: [\"descend\", \"ascend\"],\r\n        },\r\n        {\r\n            title: \"SpecialFields\",\r\n            children: roomInfo.specialFields.map((field, index) => {\r\n                return{\r\n                    title: field,\r\n                    // dataIndex: field,\r\n                    key: field,\r\n                    // ...getColumnSearchProps(field),\r\n                    render: row => (row.specialFields[index])\r\n\r\n                }\r\n            }),\r\n            hidden: roomInfo.specialFields.length === 0,\r\n        },\r\n        {\r\n            title: \"Actions\",\r\n            key: \"actions\",\r\n            width: \"200px\",\r\n            render: row => (\r\n                <>\r\n                    <Button onClick={() => {acceptMember(row.userId, row.tableId);}} style={{marginRight: '15px'}}>\r\n                        Accept\r\n                    </Button>\r\n                    <Popconfirm\r\n                        title={\r\n                            <>\r\n                                Are you sure you want to remove {row.name} ?\r\n                            </>\r\n                        }\r\n                        onConfirm={() => {deleteMember(row.userId, row.tableId);}}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"Cancel\"\r\n                        overlayInnerStyle={{\r\n                            maxWidth: \"440px\",\r\n                            backgroundColor: \"var(--primaryBackground)\",\r\n                            border: \"2px solid var(--primaryText)\",\r\n                        }}\r\n                    >\r\n                        <Button danger={true}>Remove</Button>\r\n                    </Popconfirm>\r\n                </>\r\n            ),\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    return loading ? (\r\n        <div style={{ position: \"relative\", height: \"120px\", fontSize: \"25px\" }}>\r\n            <span style={{ marginBottom: \"100px\" }}>Loading ...</span>\r\n            <span>\r\n                <TransverseLoading color=\"var(--loadingColor)\" size=\"large\" />\r\n            </span>\r\n        </div>\r\n    ) : (\r\n        <div>\r\n            <Table \r\n                loading={tableLoading} \r\n                columns={columns} \r\n                dataSource={waitingTable} \r\n                size=\"small\" \r\n                pagination={false} \r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation, useParams } from \"react-router\";\r\nimport { CopyOutlined, PlusCircleOutlined, SettingOutlined } from \"@ant-design/icons\";\r\nimport { BsPeople, BsPatchQuestion } from \"react-icons/bs\";\r\nimport { MdOutlineEmojiPeople } from \"react-icons/md\";\r\nimport { RiDeleteBin5Line, RiCodeLine, RiFileAddLine } from \"react-icons/ri\";\r\nimport RoomSettings from \"./RoomSettings\";\r\nimport { Popconfirm, Tabs, Tooltip, Menu, Dropdown } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport SemipolarLoading from \"react-loadingg/lib/SemipolarLoading\";\r\n\r\nimport { logoutUser } from \"../../Redux/Actions/AuthActions\";\r\nimport RenderQuestions from \"./RenderQuestions\";\r\nimport RoomEnrolled from \"./RoomEnrolled\";\r\nimport RoomWaiting from \"./RoomWaiting\";\r\nimport { setBreadcrumb } from \"../../Redux/Actions/RoomsDataActions\";\r\nimport MyDivider from \"../../Components/MyDivider\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nexport default function OneRoom({getMyRoomsData}) {\r\n    document.title = \"My Room | Code Rooms\";\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [loadingMessage, setLoadingMessage] = useState(\"Getting Data ....\");\r\n    const [settingsVisible, setSettingsVisible] = useState(false);\r\n    const [questions, setQuestions] = useState([]);\r\n    const [roomInfo, setRoomInfo] = useState({});\r\n    const [enrolledTable, setEnrolledTable] = useState([]);\r\n    const [waitingTable, setWaitingTable] = useState([]);\r\n    \r\n    let { id } = useParams();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n\r\n    const showSettings = () => {\r\n        setSettingsVisible(true);\r\n    };\r\n\r\n    const getInitialData = async () => {\r\n        setLoading(true);\r\n        // setLoadingMessage(\"Refreshing data ....\")\r\n        await axios.get(\"/my_rooms/\" + id)\r\n            .then((res) => {\r\n                // console.log(res)\r\n                setRoomInfo(res.data.roomInfo);\r\n                setQuestions(res.data.questions);\r\n            })\r\n            .catch((err) => {\r\n                if (!err.response) {\r\n                    enqueueSnackbar(\"Some Error occurred while getting room data.\", { variant: \"error\" });\r\n                } else if (err.response.status === 401) {\r\n                    dispatch(logoutUser());\r\n                } else {\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                    history.replace(\"/my_rooms\");\r\n                }\r\n            });\r\n        if (queryParams.has(\"settingsOpen\")) {\r\n            setSettingsVisible(true);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getInitialData();\r\n    }, [id]);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(setBreadcrumb( [\r\n            {\r\n                \"name\": \"My Rooms\",\r\n                \"url\": \"/my_rooms\"\r\n            },\r\n            {\r\n                \"name\": roomInfo.roomName,\r\n                \"url\": \"/my_rooms/\" + roomInfo.roomId\r\n            },\r\n        ] ));\r\n    }, [roomInfo.roomId]);\r\n\r\n\r\n    const createNewQuestion = async(type) => {\r\n        setLoadingMessage(\"Setting up new question template .....\");\r\n        setLoading(true);\r\n\r\n        await axios.post(\"/create_question\", {\r\n            roomId: id,\r\n            type: type, // code or file\r\n        })\r\n            .then(res => {\r\n                history.push(\"/edit_question?qId=\" + res.data.newQuestionId);\r\n            })\r\n            .catch(err => {\r\n                try {\r\n                    if(err.response.status === 401){\r\n                        dispatch(logoutUser());\r\n                        return;\r\n                    }\r\n                    enqueueSnackbar(err.response.data.detail, {variant: \"error\"});\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some error occured while creating new question\", {variant: \"error\"});\r\n                }\r\n            });\r\n        setLoading(false);\r\n    }\r\n\r\n    const copyToClipboard = () =>{\r\n        var toCopy = window.location.origin + \"/join_room?roomId=\" + roomInfo.roomId;\r\n\r\n        var temp = document.createElement(\"textarea\");\r\n        var tempMsg = document.createTextNode(toCopy);\r\n        temp.appendChild(tempMsg);\r\n\r\n        document.body.appendChild(temp);\r\n        temp.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(temp);\r\n\r\n        var message = \"Link copied to clipboard.\";\r\n        enqueueSnackbar(message, {\r\n            variant: 'success',\r\n        })\r\n    }\r\n\r\n    const deleteRoom = async () => {\r\n        setLoadingMessage(\"Deleting room ....\");\r\n        setLoading(true);\r\n        await axios.post(\"/delete_room\", {\r\n            roomId: id,\r\n        })\r\n            .then(() => {\r\n                    enqueueSnackbar(\"Room deleted succesfully!\", { variant: \"info\" });\r\n                    getMyRoomsData()\r\n                    history.replace(\"/my_rooms\");\r\n            })\r\n            .catch((err) => {\r\n                try {\r\n                    if (err.response.status === 401) {\r\n                        dispatch(logoutUser());\r\n                        return;\r\n                    }\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some error occured while deleting this room\", { variant: \"error\" });\r\n                }\r\n            });\r\n        setLoading(false);\r\n\r\n    };\r\n\r\n   \r\n\r\n    return loading ? (\r\n        <div className=\"VerifyEmail-heading-div\">\r\n            <div>{loadingMessage}</div>\r\n            <div style={{marginTop: \"40px\", position: 'relative'}}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\"  />\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div className=\"myRooms-outer-div\">\r\n            <div className=\"myRooms-header\">\r\n                <span style={{borderBottom: '2px solid '}}>\r\n                    {roomInfo.roomName}\r\n                </span>\r\n                <div style={{ display: \"inline-flex\" }}>\r\n                    <div className=\"myRooms-createNew-button\" style={{ marginLeft: \"15px\" }} onClick={copyToClipboard}>\r\n                        <Tooltip title=\"Copy joining link\">\r\n                            <CopyOutlined />\r\n                        </Tooltip>\r\n                    </div>\r\n                    \r\n                    <Dropdown \r\n                        overlay={\r\n                            <Menu style={{background: \"var(--secondaryBackground)\"}}>\r\n                                <Menu.Item \r\n                                    icon={<RiCodeLine style={{fontSize: '20px'}} />} \r\n                                    style={{fontSize: '16px'}}\r\n                                    onClick={() => {createNewQuestion(\"code\")}}\r\n                                >\r\n                                    Code Type Question\r\n                                </Menu.Item>\r\n                                <MyDivider />\r\n                                <Menu.Item \r\n                                    icon={<RiFileAddLine style={{fontSize: '20px'}} />} \r\n                                    style={{fontSize: '16px'}}\r\n                                    onClick={() => {createNewQuestion(\"file\")}}\r\n                                >\r\n                                    File Type Question\r\n                                </Menu.Item>\r\n                            </Menu>\r\n                        } \r\n                        placement=\"bottomCenter\"\r\n                    >\r\n                        <div className=\"myRooms-createNew-button\" style={{ marginLeft: \"15px\" }} >\r\n                            <PlusCircleOutlined />\r\n                            <span style={{ marginLeft: \"5px\" }}> Create Question </span>\r\n                            {/* <DownOutlined style={{marginLeft: '5px', fontSize: '18px'}} /> */}\r\n                        </div>\r\n                    </Dropdown>\r\n\r\n                    <div className=\"myRooms-createNew-button\" style={{ marginLeft: \"15px\" }} onClick={showSettings}>\r\n                        <SettingOutlined />\r\n                        <span style={{ marginLeft: \"5px\" }}> Settings </span>\r\n                    </div>\r\n                    <Popconfirm\r\n                        title={\r\n                            <>\r\n                                Are you sure you want to delete this Room?<br /> \r\n                                Deleting this room will remove all its data and will be lost forever !\r\n                            </>\r\n                        }\r\n                        onConfirm={deleteRoom}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"Cancel\"\r\n                        overlayInnerStyle={{maxWidth: '400px', backgroundColor: 'var(--primaryBackground)', border: '2px solid var(--primaryText)'}}\r\n                    >\r\n                        <div className=\"myRooms-createNew-button\" style={{ marginLeft: \"15px\" }}>\r\n                            <RiDeleteBin5Line />\r\n                        </div>\r\n                    </Popconfirm>\r\n                    <RoomSettings \r\n                        settingsVisible={settingsVisible} \r\n                        setSettingsVisible={setSettingsVisible} \r\n                        roomInfo={roomInfo}\r\n                        setRoomInfo={setRoomInfo}    \r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* <Divider /> */}\r\n\r\n            <Tabs defaultActiveKey={queryParams.get(\"tab\") || \"questions\"} >\r\n                <TabPane\r\n                    tab={\r\n                        <div className=\"myRooms-cards-description\" style={{fontSize: '15px'}}>\r\n                            <BsPatchQuestion />\r\n                            <span style={{ margin: \"0px 6px\", display: \"inline-flex\"}}>\r\n                                Questions\r\n                            </span>\r\n                            ({questions.length})\r\n                        </div>\r\n                    }\r\n                    key=\"questions\"\r\n                >\r\n                    <RenderQuestions \r\n                        getInitialData={getInitialData}\r\n                        questions={questions} \r\n                        enrolled={roomInfo.enrolled}\r\n                    />\r\n                </TabPane>\r\n                <TabPane\r\n                    tab={\r\n                        <div className=\"myRooms-cards-description\" style={{fontSize: '15px', padding: \"0px\", margin: '0px'}}>\r\n                            <BsPeople />\r\n\r\n                            <span style={{ margin: \"0px 6px\", display: \"inline-flex\"}}>\r\n                            Members\r\n                            </span>\r\n                            ({roomInfo.enrolled})\r\n                        </div>\r\n                    }\r\n                    key=\"members\"\r\n                >\r\n                    <RoomEnrolled \r\n                        roomInfo={roomInfo} \r\n                        setRoomInfo={setRoomInfo} \r\n                        enrolledTable={enrolledTable}    \r\n                        setEnrolledTable={setEnrolledTable}    \r\n                    />\r\n                </TabPane>\r\n                {\r\n                    roomInfo.waitingRoomEnabled ? (\r\n                        <TabPane\r\n                            tab={\r\n                                <div className=\"myRooms-cards-description\" style={{fontSize: '15px'}}>\r\n                                    <MdOutlineEmojiPeople />\r\n                                    <span style={{ margin: \"0px 6px\", display: \"inline-flex\"}}>\r\n                                        Waiting Room\r\n                                    </span>\r\n                                    ({roomInfo.waitingRoomCount})\r\n                                </div>\r\n                            }\r\n                            key=\"waitingRoom\"\r\n                        >\r\n                            <RoomWaiting\r\n                                roomInfo={roomInfo} \r\n                                setRoomInfo={setRoomInfo} \r\n                                waitingTable={waitingTable}    \r\n                                setWaitingTable={setWaitingTable}    \r\n                                enrolledTable={enrolledTable}\r\n                                setEnrolledTable={setEnrolledTable}\r\n                            />\r\n                        </TabPane>\r\n                    ) : <></>\r\n                }\r\n            </Tabs>\r\n\r\n            \r\n        </div>\r\n    );\r\n}\r\n","import { Result } from \"antd\";\r\nimport React from \"react\";\r\nimport { BsPatchQuestion } from \"react-icons/bs\";\r\nimport { MdOutlineDoneAll } from \"react-icons/md\";\r\nimport Masonry from \"react-masonry-css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function RenderEnrolled() {\r\n    const breakpoints = {\r\n        default: 5,\r\n        1900: 4,\r\n        1520: 3,\r\n        1180: 2,\r\n        830: 1,\r\n    };\r\n    const roomsDataReducer = useSelector(state => state.roomsDataReducer);\r\n\r\n\r\n    return roomsDataReducer.enrolledRooms.length === 0 ? (\r\n        <Result\r\n            title=\"No Rooms enrolled.\"\r\n        />\r\n    ) : (\r\n        <div className=\"myRooms-cards-outer\">\r\n            <Masonry breakpointCols={breakpoints} className=\"my-masonry-grid\" columnClassName=\"my-masonry-grid_column\">\r\n                {roomsDataReducer.enrolledRooms.map(room => (\r\n                    <Link to={\"/enrolled_rooms/\" + room.roomId} key={room.roomId}>\r\n                        <div className=\"myRooms-cards-box\" >\r\n                            <div className=\"myRooms-cards-info\">\r\n                                <div className=\"myRooms-cards-title\">\r\n                                    {/* <AppstoreOutlined /> */}\r\n                                    <span>{room.roomName}</span>\r\n                                </div>\r\n                                <div className=\"myRooms-cards-description\">\r\n                                    <BsPatchQuestion />\r\n                                    <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"150px\" }}>\r\n                                        Questions\r\n                                    </span>\r\n                                    {room.questions}\r\n                                </div>\r\n                                <div className=\"myRooms-cards-description\">\r\n                                    <MdOutlineDoneAll />\r\n                                    <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"150px\" }}>\r\n                                        Submitted\r\n                                    </span>\r\n                                    {room.submitted}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                ))}\r\n            </Masonry>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Divider } from \"antd\";\r\nimport SemipolarLoading from \"react-loadingg/lib/SemipolarLoading\";\r\nimport RenderEnrolled from \"./RenderEnrolled\";\r\nimport { setBreadcrumb } from \"../../Redux/Actions/RoomsDataActions\";\r\n\r\nexport default function AllEnrolled({getEnrolledRoomsData}) {\r\n    document.title = \"Enrolled Rooms | Code Rooms\";\r\n\r\n    const roomsDataReducer = useSelector(state => state.roomsDataReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        getEnrolledRoomsData()\r\n        dispatch(setBreadcrumb( [\r\n            {\r\n                \"name\": \"Enrolled Rooms\",\r\n                \"url\": \"/enrolled_rooms\"\r\n            }\r\n        ] ));\r\n    }, [])\r\n\r\n\r\n    return roomsDataReducer.myRoomsLoading ? (\r\n        <div className=\"VerifyEmail-heading-div\">\r\n            <div>Getting Your Rooms Data ....</div>\r\n            <div style={{marginTop: \"40px\", position: 'relative'}}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\"  />\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div className=\"myRooms-outer-div\">\r\n\r\n            <div className=\"myRooms-header\">\r\n                <span>Enrolled Rooms</span>\r\n            </div>\r\n\r\n            <Divider />\r\n\r\n            <RenderEnrolled />\r\n        </div>\r\n    );\r\n}\r\n","import { Button, Input } from 'antd';\r\nimport axios from 'axios'\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect, useState } from 'react'\r\nimport PointSpreadLoading from 'react-loadingg/lib/PointSpreadLoading';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { logoutUser } from '../Redux/Actions/AuthActions';\r\nimport { setEnrolled } from '../Redux/Actions/RoomsDataActions';\r\n\r\nexport default function JoinRoom() {\r\n    document.title = \"Join Room | Code Rooms\";\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [specialFields, setSpecialFields] = useState([]);\r\n    const [specialInfo, setSpecialInfo] = useState([]);\r\n\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const joinRoom1 = () => {\r\n        setLoading(true);\r\n        if(!queryParams.has(\"roomId\")){\r\n            enqueueSnackbar(\"Invalid Room\", {variant: 'error'});\r\n            history.replace('/enrolled_rooms');\r\n            return;\r\n        }\r\n        axios.post(\"/join_room\", {\r\n            roomId: queryParams.get(\"roomId\"),\r\n            specialFields: specialInfo\r\n        })\r\n            .then(res => {\r\n                if(res.data.specialFields){\r\n                    setSpecialFields(res.data.specialFields);\r\n                    var data = []\r\n                    for(var i = 0; i < res.data.specialFields.length; i ++){\r\n                        data.push(\"\");\r\n                    }\r\n                    setSpecialInfo(data);\r\n                    setLoading(false);\r\n                    return;\r\n                }\r\n\r\n                if(res.data.waitingRoomEnabled){\r\n                    enqueueSnackbar(`You are now in waiting Room for ${res.data.roomName}.`, {variant: 'info'});\r\n                }\r\n                else{\r\n                    enqueueSnackbar(`Joined Room - ${res.data.roomName} successfully.`, {variant: 'success'});\r\n                }\r\n                dispatch(setEnrolled(res.data.enrolledRooms));\r\n                history.replace('/enrolled_rooms');\r\n            })\r\n            .catch(err => {\r\n                try {\r\n\r\n                    if(!err.response){\r\n                        history.replace('/enrolled_rooms');\r\n                        enqueueSnackbar(\"Some Error occurred while joining room\", {variant: 'warning'});\r\n                        return;\r\n                    }\r\n                    if(err.response.status === 401){\r\n                        enqueueSnackbar(\"Please login first.\", {variant: 'info'})\r\n                        dispatch(logoutUser());\r\n                        return;\r\n                    }\r\n\r\n                    enqueueSnackbar(err.response.data.detail, {variant: 'warning'});\r\n                    history.replace('/enrolled_rooms');\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some Error occurred while joining room\", {variant: 'warning'});\r\n                    history.replace('/enrolled_rooms');\r\n                }\r\n            })\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(async() => {\r\n        joinRoom1();\r\n    }, [])\r\n\r\n    const changeSpecialField = (e, index) => {\r\n        const newData = [...specialInfo];\r\n        newData[index] = e.target.value;\r\n        setSpecialInfo(newData);\r\n    };\r\n\r\n\r\n    return loading ? (\r\n        <div className=\"VerifyEmail-outer-div\">\r\n            <div className=\"VerifyEmail-heading-div\">\r\n                Joining room ...\r\n            </div>\r\n            <div style={{marginTop: \"20px\", position: 'relative'}}>\r\n                <PointSpreadLoading color=\"var(--loadingColor)\" />\r\n            </div>\r\n        </div>\r\n    ) : ( \r\n        specialFields.length > 0 ? (\r\n            <div className=\"VerifyEmail-outer-div\">\r\n                <div className=\"VerifyEmail-heading-div\">\r\n                    Enter details to continue ... \r\n                </div>\r\n                <div>\r\n                    {\r\n                        specialFields.map((name, index) => (\r\n                            <div>\r\n                                <div style={{ display: \"inline-flex\", margin: '10px', alignItems: 'center' }}>\r\n                                    <span style={{minWidth: '100px'}}>{name} : </span>\r\n                                    <Input value={specialInfo[index]} onChange={(e) => {changeSpecialField(e, index)}} />\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <Button htmlType=\"submit\" type=\"primary\" onClick={() => {joinRoom1()}} >\r\n                    Submit\r\n                </Button>\r\n            </div>\r\n        ) : (<></>)\r\n    )\r\n}\r\n","import { Button, Result, Statistic } from \"antd\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Masonry from \"react-masonry-css\";\r\nimport { IoMdDoneAll } from \"react-icons/io\";\r\nimport { BsPatchExclamation } from \"react-icons/bs\";\r\nimport moment from \"moment\";\r\nimport { RiCodeLine, RiFileAddLine } from \"react-icons/ri\";\r\n\r\n\r\nconst { Countdown } = Statistic;\r\n\r\nexport default function RenderQuestions({ questions }) {\r\n    const breakpoints = {\r\n        default: 5,\r\n        1900: 4,\r\n        1520: 3,\r\n        1180: 2,\r\n        830: 1,\r\n    };\r\n\r\n    const timeConditions = (question) => {\r\n        if(question.isSubmitted){\r\n            return(\r\n                <div style={{fontSize: '18px', color: \"var(--success)\"}}>\r\n                    At {moment(question.submissionTime).format(\"Do MMM hh:mm a\")}\r\n                </div>\r\n            )\r\n        }\r\n        if(moment(question.endTime).diff(moment().format(), 'seconds') < 0 ){\r\n            return(\r\n                <div style={{color: 'var(--error)', fontSize: '22px'}}>\r\n                    Due date over\r\n                </div>\r\n            )\r\n        }\r\n        if(moment(question.endTime).diff(moment().format(), 'hours') > 48){\r\n            return(\r\n                <span style={{ fontSize: \"20px\", display: \"inline-flex\", color: \"var(--privateRoom)\" }}>\r\n                    Due : {moment(question.endTime).format(\"Do MMM\")}\r\n                </span>\r\n            )\r\n        }\r\n        if(moment(question.endTime).diff(moment().format(), 'hours') > 24){\r\n            return(\r\n                <span style={{ fontSize: \"20px\", display: \"inline-flex\", color: \"var(--privateRoom)\" }}>\r\n                    Due : Tommorow\r\n                </span>\r\n            )\r\n        }\r\n        if(moment(question.endTime).diff(moment().format(), 'hours') > 10){\r\n            return(\r\n                <span style={{ fontSize: \"20px\", display: \"inline-flex\", color: \"var(--privateRoom)\" }}>\r\n                    Due : Today\r\n                </span>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div>\r\n    \r\n                    <Countdown\r\n                        valueStyle={{color: 'var(--privateRoom)', fontSize: '22px'}}\r\n                        value={question.endTime}\r\n                        onFinish={() => {\r\n                            window.location.reload();\r\n                        }}\r\n                        format=\"[Due] : H[h] : m[m] : s[s]\"\r\n                    />\r\n                </div> \r\n            )\r\n        }\r\n    }\r\n\r\n    return questions.length === 0 ? (\r\n        <Result\r\n            title=\"No Questions in this room.\"\r\n            extra={\r\n                <Button type=\"primary\" key=\"console\">\r\n                    No Questions in this room.\r\n                </Button>\r\n            }\r\n        />\r\n    ) : (\r\n        <Masonry breakpointCols={breakpoints} className=\"my-masonry-grid\" columnClassName=\"my-masonry-grid_column\">\r\n            {questions.map(question => (\r\n                <Link to={\"/question?qId=\" + question.questionId } key={\"room.roomId\"}>\r\n                    <div className=\"myRooms-cards-box\">\r\n                        <div className=\"myRooms-cards-info\">\r\n                            <div className=\"myRooms-cards-title\">\r\n                                <span>{question.title}</span>\r\n                            </div>\r\n                            <div className=\"myRooms-cards-description\">\r\n                                {\r\n                                    question._type === \"code\" ? (\r\n                                        <>\r\n                                            <RiCodeLine />\r\n                                            <span style={{ marginLeft: \"10px\", display: \"inline-flex\" }}>\r\n                                                Code Type\r\n                                            </span>\r\n                                        </>\r\n                                    ) :(\r\n                                        <>\r\n                                            <RiFileAddLine />\r\n                                            <span style={{ marginLeft: \"10px\", display: \"inline-flex\" }}>\r\n                                                File Type\r\n                                            </span>\r\n                                        </>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                            {\r\n                                question.isSubmitted ? (\r\n                                    <div className=\"myRooms-cards-description\">\r\n                                        <IoMdDoneAll style={{color: \"var(--success)\"}} />\r\n                                        <span style={{ marginLeft: \"10px\", display: \"inline-flex\", color: \"var(--success)\" }}>\r\n                                            Submitted\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                ) : (\r\n                                    <div className=\"myRooms-cards-description\">\r\n                                        <BsPatchExclamation style={{color: \"var(--privateRoom)\"}} />\r\n                                        <span style={{ marginLeft: \"10px\", display: \"inline-flex\", color: \"var(--privateRoom)\" }}>\r\n                                            Not Submitted\r\n                                        </span>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            <div className=\"myRooms-card-bottom-bar\">\r\n                                {timeConditions(question)}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n            ))}\r\n        </Masonry>\r\n    );\r\n}\r\n\r\n\r\n// () => {\r\n//     \r\n//     }","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Button, Popconfirm } from \"antd\";\r\nimport RenderQuestions from \"./RenderQuestions\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport SemipolarLoading from \"react-loadingg/lib/SemipolarLoading\";\r\nimport { logoutUser } from \"../../Redux/Actions/AuthActions\";\r\nimport { setBreadcrumb } from \"../../Redux/Actions/RoomsDataActions\";\r\nimport MyDivider from \"../../Components/MyDivider\";\r\n\r\n\r\nexport default function EnrolledRoom() {\r\n    document.title = \"Enrolled Room | Code Rooms\";\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [loadingMessage, setLoadingMessage] = useState(\"Getting Data ....\");\r\n    const [questions, setQuestions] = useState([]);\r\n    const [roomInfo, setRoomInfo] = useState([]);\r\n\r\n    let { id } = useParams();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const getRoomData = async() => {\r\n        setLoading(true);\r\n        await axios\r\n            .get(\"/enrolled_rooms/\" + id)\r\n            .then(res => {\r\n                setRoomInfo(res.data.roomInfo);\r\n                setQuestions(res.data.questions);\r\n            })\r\n            .catch(err => {\r\n                // console.log(err)\r\n                if (!err.response) {\r\n                    enqueueSnackbar(\"Some Error occurred while getting room data.\", { variant: \"error\" });\r\n                    history.replace(\"/enrolled_rooms\");\r\n                } else if (err.response.status === 401) {\r\n                    dispatch(logoutUser());\r\n                } else {\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                    history.replace(\"/enrolled_rooms\");\r\n                }\r\n            });\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getRoomData();\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        dispatch(setBreadcrumb( [\r\n            {\r\n                \"name\": \"Enrolled Rooms\",\r\n                \"url\": \"/enrolled_rooms\"\r\n            },\r\n            {\r\n                \"name\": roomInfo.roomName,\r\n                \"url\": \"/enrolled_rooms/\" + roomInfo.roomId\r\n            },\r\n        ] ));\r\n    }, [roomInfo.roomId]);\r\n\r\n    const leaveRoom = async() => {\r\n        await axios.post(\"/leave_room\", {\r\n            roomId: roomInfo.roomId,\r\n        })\r\n            .then(() => {\r\n                history.replace(\"/enrolled_rooms\")\r\n            })\r\n            .catch(err => {\r\n                // console.log(err)\r\n                if (!err.response) {\r\n                    enqueueSnackbar(\"Some Error occurred while leaving room.\", { variant: \"error\" });\r\n                    history.replace(\"/enrolled_rooms\");\r\n                } else if (err.response.status === 401) {\r\n                    dispatch(logoutUser());\r\n                } else {\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                    history.replace(\"/enrolled_rooms\");\r\n                }\r\n            })\r\n    }\r\n\r\n    return loading ? (\r\n        <div className=\"VerifyEmail-heading-div\">\r\n            <div>{loadingMessage}</div>\r\n            <div style={{ marginTop: \"40px\", position: \"relative\" }}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\" />\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div className=\"myRooms-outer-div\">\r\n            <div className=\"myRooms-header\">\r\n                <span >\r\n                    <span>{roomInfo.roomName}</span>\r\n                    <div style={{ }}>\r\n                        <span style={{fontSize: '20px'}}>Host : {roomInfo.host}</span>\r\n                    </div>\r\n                </span>\r\n                <Popconfirm\r\n                    title={\r\n                        <>\r\n                            Are you sure you want to leave the room?<br /> \r\n                            This will delete all the submissions in this room and data will be lost forever.\r\n                        </>\r\n                    }\r\n                    onConfirm={leaveRoom}\r\n                    okText=\"Yes\"\r\n                    cancelText=\"Cancel\"\r\n                    overlayInnerStyle={{maxWidth: '400px', backgroundColor: 'var(--primaryBackground)', border: '2px solid var(--primaryText)'}}\r\n                >\r\n                    <Button danger={true} type=\"primary\"  >\r\n                        Leave Room\r\n                    </Button>\r\n                </Popconfirm>\r\n            </div>\r\n\r\n            <MyDivider />\r\n\r\n            <RenderQuestions questions={questions} />\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Editor, getDefaultKeyBinding, RichUtils } from \"draft-js\";\r\nimport \"draft-js/dist/Draft.css\";\r\nimport \"./EditorCss.css\";\r\nimport { Divider } from \"antd\";\r\n\r\nclass DescriptionEditor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //   this.state = {editorState: props.data};\r\n\r\n        this.focus = () => this.refs.editor.focus();\r\n        this.onChange = editorState => {\r\n            // this.setState({editorState});\r\n            props.setState(editorState);\r\n            // console.log(this.state.editorState);\r\n        };\r\n\r\n        this.handleKeyCommand = this._handleKeyCommand.bind(this);\r\n        this.mapKeyToEditorCommand = this._mapKeyToEditorCommand.bind(this);\r\n        this.toggleBlockType = this._toggleBlockType.bind(this);\r\n        this.toggleInlineStyle = this._toggleInlineStyle.bind(this);\r\n    }\r\n\r\n    _handleKeyCommand(command, editorState) {\r\n        const newState = RichUtils.handleKeyCommand(editorState, command);\r\n        if (newState) {\r\n            this.onChange(newState);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    _mapKeyToEditorCommand(e) {\r\n        if (e.keyCode === 9 /* TAB */) {\r\n            const newEditorState = RichUtils.onTab(e, this.props.state, 4 /* maxDepth */);\r\n            if (newEditorState !== this.props.state) {\r\n                this.onChange(newEditorState);\r\n            }\r\n            return;\r\n        }\r\n        return getDefaultKeyBinding(e);\r\n    }\r\n\r\n    _toggleBlockType(blockType) {\r\n        this.onChange(RichUtils.toggleBlockType(this.props.state, blockType));\r\n    }\r\n\r\n    _toggleInlineStyle(inlineStyle) {\r\n        this.onChange(RichUtils.toggleInlineStyle(this.props.state, inlineStyle));\r\n    }\r\n\r\n    render() {\r\n        const editorState = this.props.state;\r\n\r\n        // If the user changes block type before entering any text, we can\r\n        // either style the placeholder or hide it. Let's just hide it now.\r\n        let className = \"RichEditor-editor\";\r\n        var contentState = editorState.getCurrentContent();\r\n        if (!contentState.hasText()) {\r\n            if (contentState.getBlockMap().first().getType() !== \"unstyled\") {\r\n                className += \" RichEditor-hidePlaceholder\";\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"RichEditor-root\" style={this.props.readOnly ? {padding: '4px', border: \"none\", width: '95%'} : {}}>\r\n                {this.props.readOnly ? (\r\n                    <></>\r\n                ) : (\r\n                    <>\r\n                        <div style={{display: 'inline-flex'}}>\r\n                            <span style={{marginRight: '30px'}}>\r\n                            <BlockStyleControls editorState={editorState} onToggle={this.toggleBlockType} />\r\n                            </span>\r\n                            <InlineStyleControls editorState={editorState} onToggle={this.toggleInlineStyle} />\r\n                            </div>\r\n                        <Divider style={{ margin: \"0px\" }} />\r\n                    </>\r\n                )}\r\n                <div className={className} style={{ borderTop: \"None\" }} onClick={this.focus}>\r\n                    <Editor\r\n                        blockStyleFn={getBlockStyle}\r\n                        customStyleMap={styleMap}\r\n                        editorState={editorState}\r\n                        handleKeyCommand={this.handleKeyCommand}\r\n                        keyBindingFn={this.mapKeyToEditorCommand}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Enter Question description\"\r\n                        ref=\"editor\"\r\n                        readOnly={this.props.readOnly}\r\n                        spellCheck={false}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// Custom overrides for \"code\" style.\r\nconst styleMap = {\r\n    CODE: {\r\n        backgroundColor: \"rgba(0, 0, 0, 0.05)\",\r\n        fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\r\n        fontSize: 16,\r\n        padding: 2,\r\n    },\r\n};\r\n\r\nfunction getBlockStyle(block) {\r\n    switch (block.getType()) {\r\n        case \"blockquote\":\r\n            return \"RichEditor-blockquote\";\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nclass StyleButton extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.onToggle = e => {\r\n            e.preventDefault();\r\n            this.props.onToggle(this.props.style);\r\n        };\r\n    }\r\n\r\n    render() {\r\n        let className = \"RichEditor-styleButton\";\r\n        if (this.props.active) {\r\n            className += \" RichEditor-activeButton\";\r\n        }\r\n\r\n        return (\r\n            <span className={className} onMouseDown={this.onToggle}>\r\n                {this.props.label}\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nconst BLOCK_TYPES = [\r\n    // {label: 'H1', style: 'header-one'},\r\n    // {label: 'H2', style: 'header-two'},\r\n    // {label: 'H3', style: 'header-three'},\r\n    { label: \"H4\", style: \"header-four\" },\r\n    { label: \"H5\", style: \"header-five\" },\r\n    { label: \"H6\", style: \"header-six\" },\r\n    { label: \"Blockquote\", style: \"blockquote\" },\r\n    { label: \"UL\", style: \"unordered-list-item\" },\r\n    // {label: 'OL', style: 'ordered-list-item'},\r\n    { label: \"Code Block\", style: \"code-block\" },\r\n];\r\n\r\nconst BlockStyleControls = props => {\r\n    const { editorState } = props;\r\n    const selection = editorState.getSelection();\r\n    const blockType = editorState.getCurrentContent().getBlockForKey(selection.getStartKey()).getType();\r\n\r\n    return (\r\n        <div className=\"RichEditor-controls\">\r\n            {BLOCK_TYPES.map(type => (\r\n                <StyleButton\r\n                    key={type.label}\r\n                    active={type.style === blockType}\r\n                    label={type.label}\r\n                    onToggle={props.onToggle}\r\n                    style={type.style}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nvar INLINE_STYLES = [\r\n    { label: \"Bold\", style: \"BOLD\" },\r\n    { label: \"Italic\", style: \"ITALIC\" },\r\n    { label: \"Underline\", style: \"UNDERLINE\" },\r\n    { label: \"Monospace\", style: \"CODE\" },\r\n];\r\n\r\nconst InlineStyleControls = props => {\r\n    const currentStyle = props.editorState.getCurrentInlineStyle();\r\n\r\n    return (\r\n        <div className=\"RichEditor-controls\">\r\n            {INLINE_STYLES.map(type => (\r\n                <StyleButton\r\n                    key={type.label}\r\n                    active={currentStyle.has(type.style)}\r\n                    label={type.label}\r\n                    onToggle={props.onToggle}\r\n                    style={type.style}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DescriptionEditor;\r\n","import { Button } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { convertToRaw } from \"draft-js\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { logoutUser } from \"../../Redux/Actions/AuthActions\";\r\nimport DescriptionEditor from \"../../TextEditor/MyTextEditor\";\r\n\r\nexport default function QuestionTemplate({ title, setTitle, description, setDescription, sample, setSample, _type }) {\r\n    const [loading, setLoading] = useState(false);\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const handleTitleChange = e => {\r\n        setTitle(e.target.value);\r\n    };\r\n    const handleDescChange = e => {\r\n       setDescription(e);\r\n    };\r\n\r\n    const handleSampleChange = e => {\r\n        const newSample = {...sample};\r\n        newSample[e.target.name] = e.target.value;\r\n        setSample(newSample);\r\n    };\r\n    \r\n    const saveQuestionTemplate = async() => {\r\n        setLoading(true);\r\n        await axios.post(\"/save_question_template\", {\r\n            questionId: queryParams.get(\"qId\"),\r\n            title: title,\r\n            template: {\r\n                description: convertToRaw(description.getCurrentContent()),\r\n                sample: sample\r\n            },\r\n        })\r\n            .then(res => {\r\n                enqueueSnackbar(\"Saved successfully !\", {variant: \"success\"})\r\n            })\r\n            .catch(err => {\r\n                try {\r\n                    if (err.response.status === 401) {\r\n                        dispatch(logoutUser());\r\n                        return;\r\n                    }\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                    history.replace(\"/my_rooms\");\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some error occured while saving !!\", { variant: \"error\" });\r\n                    // history.replace(\"/my_rooms\");\r\n                }\r\n        });\r\n        setLoading(false);\r\n    }\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <span style={{width: '95%', display: 'inline-flex', justifyContent: 'space-between'}}>\r\n                <span style={{fontSize: '20px'}}>Type : {_type}</span>\r\n                <Button type=\"primary\" onClick={saveQuestionTemplate} loading={loading}>\r\n                    Save\r\n                </Button>\r\n            </span>\r\n            <div className=\"outer-scroll-div\">\r\n                <input value={title} onChange={handleTitleChange} className=\"question-title\" />\r\n                \r\n                <h2 style={{ textAlign: \"left\", marginLeft: \"10px\" }}>\r\n                    Description\r\n                </h2>\r\n                <span style={{ padding: \"10px\" }}>\r\n                    <DescriptionEditor state={description} setState={handleDescChange} readOnly={false} />\r\n                </span>\r\n\r\n                {\r\n                    _type === \"code\" ? (\r\n                        <div className=\"question-sample-case-outer\">\r\n                            <h2>Sample Case</h2>\r\n                            \r\n                            <h3 className=\"question-sample-case-title\">Sample Input</h3>\r\n                            <textarea\r\n                                className=\"question-sample-case-input\"\r\n                                value={sample.input}\r\n                                name=\"input\"\r\n                                onChange={handleSampleChange}\r\n                            />\r\n                            <h3 className=\"question-sample-case-title\">Sample Output</h3>\r\n                            <textarea\r\n                                className=\"question-sample-case-input\"\r\n                                value={sample.output}\r\n                                name=\"output\"\r\n                                onChange={handleSampleChange}\r\n                            />\r\n                            <h3 className=\"question-sample-case-title\">Explanation</h3>\r\n                            <textarea\r\n                                className=\"question-sample-case-input\"\r\n                                value={sample.explanation}\r\n                                name=\"explanation\"\r\n                                onChange={handleSampleChange}\r\n                            />\r\n                        </div>\r\n                    ) : (<></>)\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n","import React from 'react'\r\nimport useWindowDimensions from '../../Components/WindowDimensions';\r\nimport DescriptionEditor from '../../TextEditor/MyTextEditor';\r\n\r\nexport default function QuestionPreview({title, description, sample}) {\r\n    const { height, width } = useWindowDimensions();\r\n\r\n    return (\r\n        <div style={{height: (height - 70) + \"px\", padding: '10px' }}>\r\n            <div className=\"outer-scroll-div\">\r\n                <div className=\"question-title\" style={{width: '90%', borderBottom: 'none', marginBottom: \"0px\"}}> \r\n                    {title} \r\n                </div>\r\n                <DescriptionEditor state={description} setState={() => {}} readOnly={true} />\r\n\r\n                <h3 className=\"question-sample-case-title\" style={{marginTop: '10px'}} hidden={sample.input.length === 0}>Sample Input</h3>\r\n                <div className=\"question-sample-case-input\" style={{whiteSpace: 'pre'}} hidden={sample.input.length === 0} >\r\n                    {sample.input}\r\n                </div>\r\n                <h3 className=\"question-sample-case-title\" hidden={sample.output.length === 0} >Sample Output</h3>\r\n                <div className=\"question-sample-case-input\" style={{whiteSpace: 'pre'}} hidden={sample.output.length === 0}>\r\n                    {sample.output}\r\n                </div>\r\n                <h3 className=\"question-sample-case-title\" hidden={sample.explanation.length === 0}>Explanation</h3>\r\n                <div className=\"question-sample-case-input\" style={{whiteSpace: 'pre'}} hidden={sample.explanation.length === 0}>\r\n                    {sample.explanation}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Button } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { logoutUser } from \"../../Redux/Actions/AuthActions\";\r\n\r\n\r\nexport default function QuestionCases({testCases, setTestCases}) {\r\n    const [loading, setLoading] = useState(false);\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    \r\n\r\n    const removeCase = (i) => {\r\n        setTestCases( testCases.filter((tcase, index) => index !== i ) );\r\n    }\r\n\r\n    const addCase = () => {\r\n        if(testCases.length >= 5){\r\n            enqueueSnackbar(\"Can add upto only 5 cases !\", {variant: \"info\"});\r\n            return;\r\n        }\r\n        setTestCases( [...testCases, {\r\n            input: \"\",\r\n            output: \"\"\r\n        }] )\r\n    }\r\n\r\n    const handleChange = (e, index, name) => {\r\n        const newCases = [...testCases];\r\n        newCases[index][name] = e.target.value;\r\n\r\n        setTestCases(newCases);\r\n    }\r\n\r\n    const saveCases = async() => {\r\n        setLoading(true);\r\n        await axios.post(\"/save_question_tcases\", {\r\n            questionId: queryParams.get(\"qId\"),\r\n            testCases: testCases,\r\n        })\r\n        .then(res => {\r\n            // console.log(res);\r\n            enqueueSnackbar(\"Saved successfully !\", {variant: \"success\"})\r\n        })\r\n        .catch(err => {\r\n            // console.log(err);\r\n            try {\r\n                if (err.response.status === 401) {\r\n                    dispatch(logoutUser());\r\n                    return;\r\n                }\r\n                enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                history.replace(\"/my_rooms\");\r\n            } catch (error) {\r\n                enqueueSnackbar(\"Some error occured while saving !!\", { variant: \"error\" });\r\n                // history.replace(\"/my_rooms\");\r\n            }\r\n        });\r\n        setLoading(false);\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <span style={{width: '95%', display: 'inline-flex', justifyContent: 'space-between', marginBottom: '30px'}}>\r\n                <span></span>\r\n                <span>\r\n                    <Button onClick={addCase} disabled={loading}>\r\n                        Add\r\n                    </Button>\r\n                    <Button style={{marginLeft: '10px'}} type=\"primary\" onClick={saveCases} loading={loading}>\r\n                        Save\r\n                    </Button>\r\n                </span>\r\n            </span>\r\n            <div className=\"outer-scroll-div\">\r\n                {\r\n                    testCases.map((tcase, index) => (\r\n                        <>\r\n                            <span style={{width: '95%', display: 'inline-flex', justifyContent: 'space-between', margin: '20px 0px 0px 0px'}}>\r\n                                <span>Case #{index + 1}</span>\r\n                                <span>\r\n                                    <Button onClick={() => {removeCase(index)}} danger={true} disabled={loading}>\r\n                                        Remove\r\n                                    </Button>\r\n                                </span>\r\n                            </span>\r\n\r\n                            <div style={{width: '100%', display: 'inline-flex'}}>\r\n                                <textarea \r\n                                    placeholder=\"Case Input\"\r\n                                    className=\"question-sample-case-input\"\r\n                                    style={{width: '100%', margin: '5px'}}\r\n                                    value={tcase.input}\r\n                                    onChange={(e) => {handleChange(e, index, \"input\")}}\r\n                                />\r\n                                <textarea \r\n                                    placeholder=\"Expected Output\"\r\n                                    className=\"question-sample-case-input\"\r\n                                    style={{width: '100%', margin: '5px'}}\r\n                                    value={tcase.output}\r\n                                    onChange={(e) => {handleChange(e, index, \"output\")}}\r\n                                />\r\n                            </div>\r\n                        </>\r\n                    ))\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { Button, DatePicker, Switch, TimePicker } from \"antd\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { logoutUser } from \"../../Redux/Actions/AuthActions\";\r\n\r\nexport default function QuestionSettings({ questionSettings, setQuestionSettings }) {\r\n    // console.log(\"dddd\", questionSettings);\r\n    const [date, setDate] = useState(moment(questionSettings.endTime));\r\n    const [loading, setLoading] = useState(false);\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const handleDateChange = e => {\r\n        // console.log(moment(e).format());\r\n        setDate(e);\r\n    };\r\n\r\n    const changeVisiblity = (e) => {\r\n        setQuestionSettings({\r\n            ...questionSettings,\r\n            isVisible: !questionSettings.isVisible\r\n        })\r\n        // console.log(e);\r\n    }\r\n\r\n    const saveSettings = async() => {\r\n        setLoading(true);\r\n        await axios.post(\"/save_question_settings\", {\r\n            questionId: queryParams.get(\"qId\"),\r\n            endTime: moment(date).format(\"YYYY-MM-DD HH:mm:ss\"),\r\n            isVisible: questionSettings.isVisible\r\n        })\r\n            .then(res => {\r\n                // console.log(res);\r\n                enqueueSnackbar(\"Saved successfully !\", {variant: \"success\"})\r\n            })\r\n            .catch(err => {\r\n                // console.log(err);\r\n                try {\r\n                    if (err.response.status === 401) {\r\n                        dispatch(logoutUser());\r\n                        return;\r\n                    }\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                    history.replace(\"/my_rooms\");\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some error occured while saving !!\", { variant: \"error\" });\r\n                }\r\n        });\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{width: '100%', fontSize: '20px', textAlign: 'left', marginLeft: '20px'}}>\r\n                <span style={{display: 'inline-flex', marginRight: '20px', minWidth: '150px'}}>\r\n                    End Time \r\n                </span>\r\n                <DatePicker\r\n                    disabledDate={current => {\r\n                        return current && current < moment(moment().format());\r\n                    }}\r\n                    allowClear={false}\r\n                    value={date}\r\n                    onChange={handleDateChange}\r\n                />\r\n                <TimePicker \r\n                    allowClear={false}\r\n                    value={date} \r\n                    onChange={handleDateChange}\r\n                />\r\n            </div>           \r\n            <div style={{width: '100%', fontSize: '20px', textAlign: 'left', marginLeft: '20px'}}>\r\n                <span style={{display: 'inline-flex', marginRight: '20px', minWidth: '150px'}}>\r\n                    Is Visible \r\n                </span>\r\n                <Switch onChange={changeVisiblity} checked={questionSettings.isVisible} />\r\n            </div>\r\n            <div style={{width: '100%', fontSize: '20px', marginTop: '20px'}}>\r\n                <Button type=\"primary\" onClick={saveSettings} loading={loading}>\r\n                    Save\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { VscSymbolArray } from \"react-icons/vsc\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { FiSettings } from \"react-icons/fi\";\r\nimport { Tabs } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport SemipolarLoading from \"react-loadingg/lib/SemipolarLoading\";\r\nimport { logoutUser } from \"../../Redux/Actions/AuthActions\";\r\nimport SplitPane, { Pane } from \"react-split-pane\";\r\nimport { convertFromRaw, EditorState } from \"draft-js\";\r\nimport QuestionTemplate from \"./QuestionTemplate\";\r\nimport QuestionPreview from \"./QuestionPreview\";\r\nimport QuestionCases from \"./QuestionCases\";\r\nimport QuestionSettings from \"./QuestionSettings\";\r\nimport moment from \"moment\";\r\nimport { setBreadcrumb } from \"../../Redux/Actions/RoomsDataActions\";\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default function EditQuestion() {\r\n    document.title = \"Edit Question | Code Rooms\";\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [title, setTitle] = useState(\"Title\");\r\n    const [description, setDescription] = useState({});\r\n    const [sample, setSample] = useState({});\r\n    \r\n    const [testCases, setTestCases] = useState([]);\r\n    const [questionSettings, setQuestionSettings] = useState({});\r\n    const [roomInfo, setRoomInfo] = useState({});\r\n\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n\r\n    \r\n    useEffect(async () => {\r\n        setLoading(true);\r\n        if (!queryParams.has(\"qId\")) {\r\n            enqueueSnackbar(\"Invalid question.\", { variant: \"warning\" });\r\n            history.replace(\"/my_rooms\");\r\n        }\r\n        await axios\r\n            .get(\"/get_question_details\", {\r\n                params: {\r\n                    questionId: queryParams.get(\"qId\"),\r\n                },\r\n            })\r\n            .then(res => {\r\n                setTitle(res.data.questionDetails.title);\r\n                setDescription(EditorState.createWithContent(convertFromRaw(res.data.questionDetails.template.description)));\r\n                setSample(res.data.questionDetails.template.sample);\r\n\r\n                setTestCases(res.data.questionDetails.testCases || []);\r\n\r\n                setQuestionSettings({\r\n                    _type: res.data.questionDetails._type,\r\n                    endTime: !res.data.questionDetails.endTime ? moment(moment().format()).add(7, 'days').endOf('day').format() : res.data.questionDetails.endTime,\r\n                    isVisible: res.data.questionDetails.isVisible,\r\n                });\r\n                \r\n                setRoomInfo({\r\n                    roomId: res.data.questionDetails.roomId,\r\n                    roomName: res.data.questionDetails.roomName,\r\n                })\r\n                \r\n            })\r\n            .catch(err => {\r\n                // console.log(err);\r\n                try {\r\n                    if (err.response.status === 401) {\r\n                        dispatch(logoutUser());\r\n                        return;\r\n                    }\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                    history.replace(\"/my_rooms\");\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some error occured while creating new question\", { variant: \"error\" });\r\n                    history.replace(\"/my_rooms\");\r\n                }\r\n            });\r\n            setLoading(false);\r\n        }, []);\r\n        \r\n\r\n        useEffect(() => {\r\n            dispatch(setBreadcrumb( [\r\n                {\r\n                    \"name\": \"My Rooms\",\r\n                    \"url\": \"/my_rooms\"\r\n                },\r\n                {\r\n                    \"name\": roomInfo.roomName,\r\n                    \"url\": \"/my_rooms/\" + roomInfo.roomId\r\n                },\r\n                {\r\n                    \"name\": \"Edit Question\",\r\n                    \"url\": \"/question?qId=/\" + queryParams.get(\"qId\")\r\n                },\r\n            ] ));\r\n        }, [roomInfo.roomId]);\r\n\r\n        \r\n    return loading ? (\r\n        <div className=\"VerifyEmail-heading-div\">\r\n            <div>Getting Question Data ....</div>\r\n            <div style={{ marginTop: \"40px\", position: \"relative\" }}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\" />\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div >\r\n            <SplitPane style={{ position: \"absolute\" }} minSize={350} maxSize={620} defaultSize={400} split=\"vertical\">\r\n                <Pane className=\"shlokOP\">\r\n                    <QuestionPreview \r\n                        title={title}\r\n                        description={description}\r\n                        sample={sample}\r\n                    />\r\n                </Pane>\r\n                    <div>\r\n                    <Tabs defaultActiveKey={queryParams.get(\"tab\") || \"edit\"} >\r\n                        <TabPane\r\n                            tab={\r\n                                <div className=\"myRooms-cards-description\" style={{fontSize: '15px'}}>\r\n                                    <FaEdit />\r\n                                    <span style={{ margin: \"0px 6px\", display: \"inline-flex\"}}>\r\n                                        Edit Question\r\n                                    </span>\r\n                                </div>\r\n                            }\r\n                            key=\"edit\"\r\n                        >\r\n                            <QuestionTemplate \r\n                                title={title}\r\n                                setTitle={setTitle}\r\n                                description={description}\r\n                                setDescription={setDescription}\r\n                                sample={sample}\r\n                                setSample={setSample}\r\n                                _type={questionSettings._type}\r\n                            />\r\n                        </TabPane>\r\n                        {\r\n                            questionSettings._type === \"code\" ? (\r\n                                <TabPane\r\n                                    tab={\r\n                                        <div className=\"myRooms-cards-description\" style={{fontSize: '15px', padding: \"0px\", margin: '0px'}}>\r\n                                            <VscSymbolArray />\r\n                                            <span style={{ margin: \"0px 6px\", display: \"inline-flex\"}}>\r\n                                            Test cases\r\n                                            </span>\r\n                                        </div>\r\n                                    }\r\n                                    key=\"cases\"\r\n                                >\r\n                                    <QuestionCases \r\n                                        testCases={testCases}\r\n                                        setTestCases={setTestCases}\r\n                                    />\r\n                                </TabPane>\r\n                            ) : (<></>)\r\n                        }\r\n                        <TabPane\r\n                            tab={\r\n                                <div className=\"myRooms-cards-description\" style={{fontSize: '15px'}}>\r\n                                    <FiSettings />\r\n                                    <span style={{ margin: \"0px 6px\", display: \"inline-flex\"}}>\r\n                                        Settings\r\n                                    </span>\r\n                                </div>\r\n                            }\r\n                            key=\"settings\"\r\n                        >\r\n                            <QuestionSettings \r\n                                questionSettings={questionSettings}\r\n                                setQuestionSettings={setQuestionSettings}\r\n                            />\r\n\r\n                        </TabPane>\r\n                    </Tabs>\r\n\r\n                    </div>\r\n            </SplitPane>\r\n        </div>\r\n    );\r\n}\r\n","import { CaretRightOutlined, SaveFilled } from \"@ant-design/icons\";\r\nimport { Button, Input, Modal, Select } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useState } from \"react\";\r\nconst { Option } = Select;\r\n\r\nexport default function EditorNavbar({savedCodes, setSavedCodes, selectedCode, setSelectedCode, loading ,setLoading, getEditorCode, input, setOutput}) {\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [saveOpen, setSaveOpen] = useState(false);\r\n    \r\n    const handleLanguageChange = value => {\r\n        const newData = { ...selectedCode };\r\n        newData.language = value;\r\n        setSelectedCode(newData);\r\n    };\r\n\r\n\r\n    const handleRun = async() => {\r\n        setLoading(true);\r\n        setOutput(\"\");\r\n        await axios.post(\"/run_code\", {\r\n                code: getEditorCode(),\r\n                language: selectedCode.language,\r\n                input: input,\r\n            })\r\n            .then(res => {\r\n                setOutput(JSON.parse( res.data).output)\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Error while running!\", {variant: \"error\"});\r\n            });\r\n        setLoading(false);\r\n    };\r\n\r\n    const handleSave = async() => {\r\n        setLoading(true);\r\n\r\n        var newSaved = savedCodes.filter(code => code.id !== selectedCode.id);\r\n        newSaved.push({\r\n            id: selectedCode.id,\r\n            name: selectedCode.name,\r\n            code: getEditorCode(),\r\n            language: selectedCode.language,\r\n        });\r\n        setSavedCodes(newSaved);\r\n        setSaveOpen(false);\r\n        \r\n        setTimeout(() => {\r\n            setLoading(false);\r\n            enqueueSnackbar(\"Code saved !\", {variant: \"success\"});\r\n        }, 500);\r\n           \r\n    };\r\n\r\n    const changeName = (e) => {\r\n        const newData = { ...selectedCode };\r\n        newData.name = e.target.value;\r\n        setSelectedCode(newData);\r\n    };\r\n\r\n    return (\r\n        <div className=\"code-editor-nav\">\r\n            <Modal\r\n                title=\"Save Code to local device\"\r\n                visible={saveOpen}\r\n                // footer={[null]}\r\n                // style={{border: '2px solid var(--primaryText)'}}\r\n                onCancel={() => {setSaveOpen(false)}}\r\n                onOk={handleSave}\r\n            >\r\n                Name &nbsp;&nbsp; : \t&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <Input value={selectedCode.name} onChange={changeName} style={{width: '200px'}} />\r\n            </Modal>\r\n            <span>\r\n                <Button\r\n                    style={{ color: \"var(--primaryText)\", backgroundColor: \"none\", width: \"auto\" }}\r\n                    onClick={handleRun}\r\n                    disabled={loading}\r\n                >\r\n                    <CaretRightOutlined />\r\n                    Run\r\n                </Button>\r\n                <Button style={{ color: \"var(--primaryText)\", backgroundColor: \"none\", width: \"auto\" }} onClick={() => {setSaveOpen(true)}}>\r\n                    <SaveFilled />\r\n                    Save\r\n                </Button>\r\n            </span>\r\n            <span>\r\n                <span style={{color: '#fff', marginRight: '10px'}}>\r\n                    Language : \r\n                </span>\r\n                <Select value={selectedCode.language} style={{ width: 120 }} onChange={handleLanguageChange}>\r\n                    <Option value=\"cpp\">CPP</Option>\r\n                    <Option value=\"c\">C</Option>\r\n                    <Option value=\"java\">Java</Option>\r\n                    <Option value=\"python\">Python</Option>\r\n                </Select>\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n","import { MdDeleteForever } from \"react-icons/md\";\r\nimport { BsFillArrowUpRightCircleFill } from \"react-icons/bs\";\r\nimport React from \"react\";\r\nimport { Button, Tooltip } from \"antd\";\r\nimport { PlusCircleFilled } from \"@ant-design/icons\";\r\n\r\nexport default function RenderSaved({ savedCodes, setSavedCodes, setSelectedCode, setLoading, setOutput, setInput }) {\r\n    const loadSavedCode = (index) => {\r\n        setLoading(true);\r\n        setInput(\"\");\r\n        setOutput(\"\");\r\n        setSelectedCode(savedCodes[index]);\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 500);\r\n    }\r\n    const handleDelete = (index) => {\r\n        setLoading(true);\r\n        setSavedCodes( [...savedCodes.filter((code, i) => i !== index)] );\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 500);\r\n    }\r\n    const handleNew = () => {\r\n        setLoading(true);\r\n        setInput(\"\");\r\n        setOutput(\"\");\r\n\r\n        setSelectedCode({\r\n            id: Math.floor(Math.random() * 100000),\r\n            name: \"\",\r\n            code: \"// code goes here\",\r\n            language: \"cpp\"\r\n        });\r\n\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 500);\r\n    }\r\n\r\n    return savedCodes.length === 0 ? (\r\n        <>\r\n            <div className=\"playground-code-title\">\r\n                No Codes Saved !\r\n            </div>\r\n            <Button type=\"primary\" style={{margin: '20px 0px', fontSize: '20px', height: '100%'}} icon={<PlusCircleFilled />} onClick={handleNew}>\r\n                New\r\n            </Button>\r\n        </>\r\n    ) : (\r\n        <>\r\n            <div className=\"playground-code-title\" >\r\n                Saved Codes ...\r\n            </div>\r\n            <Button type=\"primary\" style={{margin: '20px 0px', fontSize: '20px', height: '100%'}} icon={<PlusCircleFilled />} onClick={handleNew}>\r\n                New\r\n            </Button>\r\n            <div className=\"outer-scroll-div\" style={{height: '600px'}}>\r\n                {savedCodes.map((code, index) => (\r\n                    <div className=\"playground-saved-codes\">\r\n                        <div className=\"playground-saved-codes-inner\">\r\n                            <span style={{alignItems: 'center', marginRight: '8px'}}>{code.name}</span>\r\n                            <span style={{display: 'inline-flex', alignItems: 'center'}}>\r\n                                <span style={{display: 'inline-flex', alignItems: 'center'}} onClick={() => {loadSavedCode(index)}} >\r\n                                    <Tooltip title=\"Load saved code to editor\">\r\n                                        <BsFillArrowUpRightCircleFill style={{fontSize: '25px', marginRight: '8px'}} />\r\n                                    </Tooltip>\r\n                                </span>\r\n                                <span style={{display: 'inline-flex', alignItems: 'center'}} onClick={() => {handleDelete(index)}}>\r\n                                    <Tooltip title=\"Delete saved code\">\r\n                                        <MdDeleteForever style={{fontSize: '25px'}} />\r\n                                    </Tooltip>\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport SplitPane, { Pane } from \"react-split-pane\";\r\nimport Editor from \"@monaco-editor/react\";\r\nimport { Modal } from \"antd\";\r\nimport SemipolarLoading from \"react-loadingg/lib/SemipolarLoading\";\r\nimport EditorNavbar from \"./EditorNavbar\";\r\nimport useWindowDimensions from \"../Components/WindowDimensions\";\r\nimport RenderSaved from \"./RenderSaved\";\r\n\r\n\r\nexport default function MyEditor({ savedCodes, setSavedCodes, selectedCode, setSelectedCode }) {\r\n    const editorRef = useRef(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [input, setInput] = useState(\"\");\r\n    const [output, setOutput] = useState(\"\");\r\n\r\n    function handleEditorDidMount(editor, monaco) {\r\n        editorRef.current = editor;\r\n    }\r\n\r\n    const getEditorCode = () => {\r\n        return editorRef.current.getValue()\r\n    }\r\n\r\n    const { height, width } = useWindowDimensions();\r\n\r\n    return (\r\n        <div className=\"questionEverything-outer-div\">\r\n            <Modal\r\n                centered\r\n                visible={loading}\r\n                footer={null}\r\n                bodyStyle={{padding: '0px'}}\r\n                closable={false}\r\n            >\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\" />\r\n            </Modal>\r\n\r\n            <SplitPane style={{ position: \"absolute\" }} minSize={330} maxSize={620} defaultSize={400} split=\"vertical\">\r\n                <Pane>\r\n                    <RenderSaved \r\n                        savedCodes={savedCodes}\r\n                        setSavedCodes={setSavedCodes}\r\n                        setSelectedCode={setSelectedCode}\r\n                        setLoading={setLoading}\r\n                        setOutput={setOutput}\r\n                        setInput={setInput}\r\n                    />\r\n                </Pane>\r\n                <SplitPane minSize={height - 65 - 270} maxSize={height - 75} defaultSize={height - 65 - 170} split=\"horizontal\">\r\n                    <Pane>\r\n                        <EditorNavbar\r\n                            savedCodes={savedCodes}\r\n                            setSavedCodes={setSavedCodes}\r\n                            selectedCode={selectedCode}\r\n                            setSelectedCode={setSelectedCode}\r\n                            loading={loading}\r\n                            setLoading={setLoading}\r\n                            getEditorCode={getEditorCode}\r\n                            input={input}\r\n                            setOutput={setOutput}\r\n                        />\r\n                        <Editor\r\n                            theme=\"vs-dark\"\r\n                            language={selectedCode.language}\r\n                            value={selectedCode.code}\r\n                            onMount={handleEditorDidMount}\r\n                            width=\"100%\"\r\n                        />\r\n                    </Pane>\r\n                    <Pane style={{ height: \"100%\", width: \"100%\"}}>\r\n                        <div style={{display: 'inline-flex', width: '100%', height: '100%'}}>\r\n                            <div style={{width: '100%', background: \"var(--primaryBackground)\", padding: '6px', borderRight: '2px solid var(--primaryText)'}}>\r\n                                <div className=\"code-editor-input-title\">Input</div>\r\n                                <textarea \r\n                                    value={input} \r\n                                    onChange={(e) => {setInput(e.target.value); setOutput(\"\")}} \r\n                                    className=\"code-editor-input-textarea\"\r\n                                />\r\n                            </div>\r\n                            <div style={{width: '100%', background: \"var(--primaryBackground)\", padding: '6px'}}>\r\n                                <div className=\"code-editor-input-title\">Output </div>\r\n                                <div \r\n                                    style={{whiteSpace: 'pre', textAlign: 'left', fontSize: '17px'}}\r\n                                    className=\"outer-scroll-div\"\r\n                                >\r\n                                    {output}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Pane>\r\n                </SplitPane>\r\n            </SplitPane>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { setBreadcrumb } from '../Redux/Actions/RoomsDataActions';\r\nimport MyEditor from './MyEditor';\r\n\r\nexport default function CodePlayground() {\r\n    document.title = \"Code Playground | Code Rooms\"\r\n\r\n    const [savedCodes, setSavedCodes] = useState( localStorage.savedPlaygroundCodes ?\r\n        JSON.parse(localStorage.getItem(\"savedPlaygroundCodes\")) : [] );\r\n\r\n    const [selectedCode, setSelectedCode] = useState({\r\n        id: Math.floor(Math.random() * 100000),\r\n        name: \"\",\r\n        code: \"\",\r\n        language: \"cpp\"\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(setBreadcrumb([\r\n            {\r\n                name: \"Code Playground\",\r\n                url: \"/code\"\r\n            }\r\n        ]))\r\n        localStorage.setItem(\"savedPlaygroundCodes\", JSON.stringify(savedCodes));\r\n    }, [savedCodes])\r\n\r\n    return (\r\n        <MyEditor \r\n            savedCodes={savedCodes}\r\n            setSavedCodes={setSavedCodes}\r\n            selectedCode={selectedCode}\r\n            setSelectedCode={setSelectedCode}\r\n        />\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { CaretRightOutlined, SaveFilled, SendOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport { Select } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport moment from \"moment\";\r\nconst { Option } = Select;\r\n\r\nexport default function EditorNavbar({questionDetails, setQuestionDetails, loading ,setLoading, getEditorCode, input, setOutput}) {\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    \r\n    const handleLanguageChange = value => {\r\n        const newData = { ...questionDetails };\r\n        newData.language = value;\r\n        setQuestionDetails(newData);\r\n    };\r\n\r\n\r\n    const handleRun = async() => {\r\n        setLoading(true);\r\n        setOutput(\"\");\r\n        await axios.post(\"/run_code\", {\r\n                code: getEditorCode(),\r\n                language: questionDetails.language,\r\n                input: input,\r\n            })\r\n            .then(res => {\r\n                // console.log(JSON.parse(res.data));\r\n                setOutput(JSON.parse( res.data).output)\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Some issue while run.\", {variant: 'error'});\r\n            });\r\n        setLoading(false);\r\n    };\r\n\r\n    const handleSave = async() => {\r\n        setLoading(true);\r\n        await axios.post(\"/save_question_code\", {\r\n                questionId: queryParams.get(\"qId\"),\r\n                code: getEditorCode() ,\r\n                language: questionDetails.language,\r\n            })\r\n            .then(res => {\r\n                enqueueSnackbar(\"Saved successfully.\", {variant: 'success'});\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Some issue while saving.\", {variant: 'error'});\r\n            });\r\n        setLoading(false);\r\n           \r\n    };\r\n    const handleSubmit = async() => {\r\n        setLoading(true);\r\n        await axios.post(\"/submit_question_code\", {\r\n                questionId: queryParams.get(\"qId\"),\r\n                code: getEditorCode() ,\r\n                language: questionDetails.language,\r\n            })\r\n            .then(res => {\r\n                if(res.data.noOfCases === 0){\r\n                    enqueueSnackbar(\"Submitted successfully.\", {variant: 'success'});\r\n                }\r\n                else if(res.data.casesPassed === res.data.noOfCases){\r\n                    enqueueSnackbar(\"Submitted successfully. \" + res.data.casesPassed + \" out of \" + res.data.noOfCases + \" cases passes\", {variant: 'success'});\r\n                }\r\n                else{\r\n                    enqueueSnackbar(\"Submitted successfully. \" + res.data.casesPassed + \" out of \" + res.data.noOfCases + \" cases passes\", {variant: 'warning'});\r\n                }\r\n                setQuestionDetails({\r\n                    ...questionDetails,\r\n                    submitted: true,\r\n                    submittedAt: moment().format()\r\n                })\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Some issue while submitting.\", {variant: 'error'});\r\n            });\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"code-editor-nav\">\r\n            <span>\r\n                <Button\r\n                    style={{ color: \"var(--primaryText)\", backgroundColor: \"none\", width: \"auto\" }}\r\n                    onClick={handleRun}\r\n                    disabled={loading}\r\n                >\r\n                    <CaretRightOutlined />\r\n                    Run\r\n                </Button>\r\n                <Button style={{ color: \"var(--primaryText)\", backgroundColor: \"none\", width: \"auto\" }} onClick={handleSave}>\r\n                    <SaveFilled />\r\n                    Save\r\n                </Button>\r\n                {\r\n                    moment(questionDetails.endTime).isAfter(moment().format()) ? (\r\n                        <Button\r\n                            style={{ color: \"var(--primaryText)\", backgroundColor: \"none\", width: \"auto\" }}\r\n                            onClick={handleSubmit}\r\n                        >\r\n                            <SendOutlined />\r\n                            Submit\r\n                        </Button>\r\n                    ) : (<></>)\r\n                }\r\n            </span>\r\n            <span>\r\n                <span style={{color: '#fff', margin: '0px 10px 0px 10px'}}>\r\n                    Language : \r\n                </span>\r\n                <Select value={questionDetails.language} style={{ width: 120 }} onChange={handleLanguageChange}>\r\n                    <Option value=\"cpp\">CPP</Option>\r\n                    <Option value=\"c\">C</Option>\r\n                    <Option value=\"java\">Java</Option>\r\n                    <Option value=\"python\">Python</Option>\r\n                </Select>\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport SplitPane, { Pane } from \"react-split-pane\";\r\nimport Editor from \"@monaco-editor/react\";\r\nimport useWindowDimensions from \"../../Components/WindowDimensions\";\r\nimport EditorNavbar from \"./EditorNavbar\";\r\n\r\nexport default function CodeType({overlayLoading, setOverlayLoading, questionDetails, setQuestionDetails }) {\r\n    const editorRef = useRef(null);\r\n    const [input, setInput] = useState(\"\");\r\n    const [output, setOutput] = useState(\"\");\r\n\r\n    function handleEditorDidMount(editor, monaco) {\r\n        editorRef.current = editor;\r\n    }\r\n\r\n    const getEditorCode = () => {\r\n        return editorRef.current.getValue();\r\n    };\r\n\r\n    const { height, width } = useWindowDimensions();\r\n\r\n    return (\r\n        <SplitPane minSize={height - 65 - 270} maxSize={height - 75} defaultSize={height - 65 - 170} split=\"horizontal\">\r\n            <Pane>\r\n                <EditorNavbar\r\n                    questionDetails={questionDetails}\r\n                    setQuestionDetails={setQuestionDetails}\r\n                    loading={overlayLoading}\r\n                    setLoading={setOverlayLoading}\r\n                    getEditorCode={getEditorCode}\r\n                    input={input}\r\n                    setOutput={setOutput}\r\n                />\r\n                <Editor\r\n                    theme=\"vs-dark\"\r\n                    language={questionDetails.language}\r\n                    defaultValue={questionDetails.savedCode}\r\n                    onMount={handleEditorDidMount}\r\n                />\r\n            </Pane>\r\n            <Pane style={{ height: \"100%\", widht: \"100%\" }}>\r\n                <div style={{ display: \"inline-flex\", width: \"100%\", height: \"100%\" }}>\r\n                    <div\r\n                        style={{\r\n                            width: \"100%\",\r\n                            background: \"var(--primaryBackground)\",\r\n                            padding: \"6px\",\r\n                            borderRight: \"2px solid var(--primaryText)\",\r\n                        }}\r\n                    >\r\n                        <div className=\"code-editor-input-title\">Input</div>\r\n\r\n                        <textarea\r\n                            value={input}\r\n                            onChange={e => {\r\n                                setInput(e.target.value);\r\n                                setOutput(\"\");\r\n                            }}\r\n                            className=\"code-editor-input-textarea\"\r\n                        />\r\n                    </div>\r\n                    <div style={{ width: \"100%\", background: \"var(--primaryBackground)\", padding: \"6px\" }}>\r\n                        <div className=\"code-editor-input-title\">Output </div>\r\n                        <div\r\n                            style={{ whiteSpace: \"pre\", textAlign: \"left\", fontSize: \"17px\" }}\r\n                            className=\"outer-scroll-div\"\r\n                        >\r\n                            {output}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Pane>\r\n        </SplitPane>\r\n    )\r\n}\r\n","export const backendURL = \"http://localhost:8000\";\r\n","import { UploadOutlined } from '@ant-design/icons';\r\nimport { Button, Popconfirm, Upload } from 'antd';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect, useState } from 'react';\r\nimport FileViewer from 'react-file-viewer';\r\nimport { useLocation } from 'react-router';\r\nimport { backendURL } from '../../Constants';\r\n\r\n\r\nexport default function FileType({setOverlayLoading, questionDetails, setQuestionDetails}) {\r\n    const [src, setSrc] = useState(\"\");\r\n    const [file, setFile] = useState(null);\r\n\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    useEffect(() => {\r\n        if(!questionDetails.submitted){\r\n            enqueueSnackbar(\"File should be .pdf type and file size should not exceed 7MB\", {variant: 'warning'})\r\n        } \r\n    }, [questionDetails.submitted])\r\n\r\n\r\n    const deleteSubmission = async() => {\r\n        setOverlayLoading(true);\r\n        await axios.post(\"/delete_submitted_file\", {\r\n            questionId:  queryParams.get(\"qId\"),\r\n            submissionId: questionDetails.submissionId\r\n        })\r\n            .then(res => {\r\n                setQuestionDetails({\r\n                    ...questionDetails,\r\n                    submitted: false,\r\n                })\r\n                setFile(null);\r\n                setSrc(\"\");\r\n                enqueueSnackbar(\"Deleted Submission!\", {variant: 'info'})\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Some error occurred while deleting !\", {variant: 'error'})\r\n            })\r\n        setOverlayLoading(false);\r\n\r\n    }\r\n\r\n\r\n    const handleBeforeUpload = (e) => {\r\n        try{\r\n            setSrc(URL.createObjectURL(e))\r\n            setFile(e);\r\n            return false;\r\n        }\r\n        catch(err) {\r\n            setFile(null);\r\n            setSrc(\"\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        if(e.fileList.length === 0){\r\n            setFile(null);\r\n            setSrc(\"\");\r\n            return;\r\n        }\r\n\r\n        try{\r\n            setSrc(URL.createObjectURL(e.file))\r\n            setFile(e.file);\r\n        }\r\n        catch(err) {\r\n            setFile(null);\r\n            setSrc(\"\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    const handleSubmitFile = async() => {\r\n        setOverlayLoading(true);\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        if(formData !== null){\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'multipart/form-data'\r\n                }\r\n            }\r\n            await axios.post(\"/submit_question_file/\" + queryParams.get(\"qId\") , formData, config)\r\n                .then(res => {\r\n                    setQuestionDetails({\r\n                        ...questionDetails,\r\n                        submitted: true,\r\n                        submittedAt: moment().format(),\r\n                        submissionId: res.data.submissionId\r\n                    })\r\n                    enqueueSnackbar(\"File submitted successfully !\", {variant: 'success'})\r\n                })\r\n                .catch(err => {\r\n                    try {\r\n                        enqueueSnackbar(err.response.data.detail, {variant: 'error'});\r\n                    } catch (error) {\r\n                        enqueueSnackbar(\"Some issue while submitting.\", {variant: 'error'});    \r\n                    }\r\n                })\r\n        }\r\n        setOverlayLoading(false);\r\n    }\r\n\r\n\r\n    const downloadPDF = () => {\r\n\t\tfetch(`${backendURL}/get_submitted_file?questionId=${queryParams.get(\"qId\")}&submissionId=${questionDetails.submissionId}&token=${localStorage.getItem('JWTtoken')}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\tresponse.blob().then(blob => {\r\n\t\t\t\t\tlet url = window.URL.createObjectURL(blob);\r\n\t\t\t\t\tlet a = document.createElement('a');\r\n\t\t\t\t\ta.href = url;\r\n\t\t\t\t\ta.download = \"Submission.pdf\" ;\r\n\t\t\t\t\ta.click();\r\n\t\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\r\n    return questionDetails.submitted ? (\r\n        <>\r\n        {\r\n            moment(questionDetails.endTime).isAfter(moment().format()) ? (\r\n                <Popconfirm\r\n                    title={\r\n                        <>\r\n                            Are you sure you want to submit again?<br /> \r\n                            This will delete your previous submission.\r\n                        </>\r\n                    }\r\n                    onConfirm={deleteSubmission}\r\n                    okText=\"Yes\"\r\n                    cancelText=\"Cancel\"\r\n                    overlayInnerStyle={{maxWidth: '400px', backgroundColor: 'var(--primaryBackground)', border: '2px solid var(--primaryText)'}}\r\n                >\r\n                    <Button \r\n                        style={{marginTop: \"10px\"}}\r\n                        type=\"primary\" \r\n                        danger={true}\r\n                    >\r\n                        Change Submission\r\n                    </Button>\r\n                </Popconfirm>\r\n            ) : (<></>)\r\n        }\r\n            <Button onClick={downloadPDF} style={{marginTop: \"10px\", marginLeft: '10px'}} type=\"primary\"  >\r\n                Download PDF\r\n            </Button>\r\n            <FileViewer\r\n                fileType={\"pdf\"}\r\n                filePath={`${backendURL}/get_submitted_file?questionId=${queryParams.get(\"qId\")}&submissionId=${questionDetails.submissionId}&token=${localStorage.getItem('JWTtoken')}`}\r\n            />\r\n        </>\r\n    ) : (\r\n        <>\r\n            <div style={{height: 'auto', display: 'flex', alignItems: \"center\", justifyContent: 'space-between', margin: '10px 0px 30px 0px'}}>\r\n                <Upload\r\n                    listType=\"picture\"\r\n                    beforeUpload={handleBeforeUpload}\r\n                    maxCount={1}\r\n                    multiple={false}\r\n                    type=\"file\"\r\n                    accept=\"application/pdf\"\r\n                    onChange={handleChange}\r\n                    className=\"upload-list-inline\"\r\n                >\r\n                    <Button icon={<UploadOutlined />} style={{height: '66px'}} >Upload</Button>\r\n                </Upload>\r\n                {/* <img src={src} style={{border: '2px solid white', width: '100%'}} /> */}\r\n                <Button \r\n                    onClick={handleSubmitFile} \r\n                    type=\"primary\" \r\n                    style={{margin: '0px 30px 0px 0px', height: \"66px\"}}\r\n                    disabled={file === null}\r\n                >\r\n                    Submit\r\n                </Button>\r\n            </div>\r\n            {\r\n                file !== null ? (\r\n                    <>\r\n                    <FileViewer\r\n                        controls={true}\r\n                        fileType={\"pdf\"}\r\n                        filePath={src}\r\n                        key={src}\r\n                    />\r\n                    </>\r\n                ) : (<></>)\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n","import { Modal } from 'antd';\r\nimport axios from 'axios';\r\nimport { convertFromRaw, EditorState } from 'draft-js';\r\nimport moment from 'moment';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect, useState } from 'react'\r\nimport SemipolarLoading from 'react-loadingg/lib/SemipolarLoading';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport SplitPane, { Pane } from 'react-split-pane';\r\nimport QuestionPreview from '../../MyRooms/EditQuestion/QuestionPreview';\r\nimport { logoutUser } from '../../Redux/Actions/AuthActions';\r\nimport { setBreadcrumb } from '../../Redux/Actions/RoomsDataActions';\r\nimport CodeType from './CodeType';\r\nimport FileType from './FileType';\r\n\r\nexport default function ViewQuestion() {\r\n    document.title = \"Question | Code Rooms\";\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [overlayLoading, setOverlayLoading] = useState(false);\r\n    const [questionDetails, setQuestionDetails] = useState({});\r\n    const [roomDetails, setRoomDetails] = useState({});\r\n\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    useEffect(async () => {\r\n        setLoading(true);\r\n        if (!queryParams.has(\"qId\")) {\r\n            enqueueSnackbar(\"Invalid question.\", { variant: \"warning\" });\r\n            history.replace(\"/enrolled_rooms\");\r\n        }\r\n        await axios\r\n            .get(\"/question_for_member\", {\r\n                params: {\r\n                    questionId: queryParams.get(\"qId\"),\r\n                },\r\n            })\r\n            .then(res => {\r\n                setQuestionDetails({\r\n                    _type: res.data.details._type,\r\n                    title: res.data.details.title,\r\n                    description: EditorState.createWithContent(convertFromRaw(res.data.details.template.description)),\r\n                    sample: res.data.details.template.sample,\r\n                    endTime: res.data.details.endTime,\r\n                    savedCode: res.data.details.savedCode,\r\n                    language: res.data.details.language || \"cpp\",\r\n                    submitted: res.data.details.submitted,\r\n                    submittedAt: res.data.details.submittedAt,\r\n                    submissionId: res.data.details.submissionId,\r\n                });\r\n\r\n                setRoomDetails({\r\n                    roomId: res.data.details.roomId,\r\n                    roomName: res.data.details.roomName\r\n                })\r\n\r\n            })\r\n            .catch(err => {\r\n                try {\r\n                    if (err.response.status === 401) {\r\n                        dispatch(logoutUser());\r\n                        return;\r\n                    }\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                    history.replace(\"/enrolled_rooms\");\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some error occured while getting question details.\", { variant: \"error\" });\r\n                    history.replace(\"/enrolled_rooms\");\r\n                }\r\n            });\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    useEffect(async() => {\r\n        dispatch(setBreadcrumb( [\r\n            {\r\n                \"name\": \"Enrolled Rooms\",\r\n                \"url\": \"/enrolled_rooms\"\r\n            },\r\n            {\r\n                \"name\": roomDetails.roomName,\r\n                \"url\": \"/enrolled_rooms/\" + roomDetails.roomId\r\n            },\r\n            {\r\n                \"name\": \"Question\",\r\n                \"url\": \"/question?qId=/\" + queryParams.get(\"qId\")\r\n            },\r\n        ] ));\r\n    }, [roomDetails.roomId]);\r\n\r\n\r\n    const renderRightPane = () => {\r\n        if(questionDetails._type === \"code\"){\r\n            return (\r\n                <CodeType \r\n                    overlayLoading={overlayLoading}\r\n                    setOverlayLoading={setOverlayLoading}\r\n                    questionDetails={questionDetails}\r\n                    setQuestionDetails={setQuestionDetails}\r\n                />\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <FileType \r\n                    setOverlayLoading={setOverlayLoading} \r\n                    questionDetails={questionDetails}\r\n                    setQuestionDetails={setQuestionDetails}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    return loading ? (\r\n        <div className=\"VerifyEmail-heading-div\">\r\n            <div>Loading Question ....</div>\r\n            <div style={{ marginTop: \"40px\", position: \"relative\" }}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\" />\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div>\r\n            <Modal centered visible={overlayLoading} footer={null} bodyStyle={{ padding: \"0px\" }} closable={false}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\" />\r\n            </Modal>\r\n\r\n            <SplitPane style={{ position: \"absolute\" }} minSize={300} maxSize={620} defaultSize={400} split=\"vertical\">\r\n                <Pane>\r\n                    <div style={{ padding: \"15px\", borderBottom: \"2px solid #fff\" }}>\r\n                        <div className=\"myRooms-cards-description\" style={{fontSize: '15px'}}>\r\n                            <span style={{display: \"inline-flex\", minWidth: \"170px\" }}>End Time</span>\r\n                            {moment(questionDetails.endTime).format(\"Do MMM HH:mm a\")}\r\n                        </div>\r\n                        {\r\n                            questionDetails.submitted ? (\r\n                                <div className=\"myRooms-cards-description\" style={{fontSize: '15px'}}>\r\n                                    <span style={{ display: \"inline-flex\", minWidth: \"170px\" }}>Submitted At</span>\r\n                                    {moment(questionDetails.submittedAt).format(\"Do MMM HH:mm a\")}\r\n                                </div>\r\n                            ) : (<></>)\r\n                        }\r\n                    </div>\r\n                    <QuestionPreview \r\n                        title={questionDetails.title} \r\n                        description={questionDetails.description} \r\n                        sample={questionDetails.sample}     \r\n                    />\r\n                </Pane>\r\n                {renderRightPane()}\r\n            </SplitPane>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport SplitPane, { Pane } from \"react-split-pane\";\r\nimport Editor from \"@monaco-editor/react\";\r\nimport { CaretRightOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport useWindowDimensions from \"../../Components/WindowDimensions\";\r\nimport { Select } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useSnackbar } from \"notistack\";\r\nconst { Option } = Select;\r\n\r\nexport default function CodeType({\r\n    setOverlayLoading,\r\n    selected,\r\n    setSelected,\r\n}) {\r\n    const [language, setLanguage] = useState(selected.language || \"cpp\");\r\n    const [input, setInput] = useState(\"\");\r\n    const [output, setOutput] = useState(\"\");\r\n\r\n    const editorRef = useRef(null);\r\n    const { height, width } = useWindowDimensions();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const getUserCode = async() => {\r\n        setOverlayLoading(true);\r\n        await axios\r\n            .get(\"/get_submitted_code\", {\r\n                params: {\r\n                    submissionId: selected.submissionId,\r\n                },\r\n            })\r\n            .then(res => {\r\n                var newSelected = { ...selected };\r\n                newSelected.code = res.data.data.code;\r\n                newSelected.language = res.data.data.language;\r\n\r\n                setLanguage(res.data.data.language);\r\n                setSelected(newSelected);\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Some error occured while getting submission\", { variant: \"error\" });\r\n            });\r\n\r\n        setOverlayLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!selected.submissionId) {\r\n            return;\r\n        }\r\n        getUserCode();\r\n    }, [selected.submissionId]);\r\n\r\n\r\n\r\n    function handleEditorDidMount(editor, monaco) {\r\n        editorRef.current = editor;\r\n        // editorRef.updateOptions({ readOnly: true })\r\n    }\r\n    const handleLanguageChange = value => {\r\n        setLanguage(value);\r\n    };\r\n\r\n    const getEditorCode = () => {\r\n        return editorRef.current.getValue();\r\n    };\r\n\r\n\r\n    const handleRun = async () => {\r\n        setOverlayLoading(true);\r\n        setOutput(\"\");\r\n        await axios\r\n            .post(\"/run_code\", {\r\n                code: getEditorCode(),\r\n                language: language,\r\n                input: input,\r\n            })\r\n            .then(res => {\r\n                setOutput(JSON.parse(res.data).output);\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Some error occured while run.\", { variant: \"error\" });\r\n                // console.log(err);\r\n            });\r\n        setOverlayLoading(false);\r\n    };\r\n\r\n    return (\r\n        <SplitPane minSize={height - 65 - 270} maxSize={height - 75} defaultSize={height - 65 - 170} split=\"horizontal\">\r\n            <Pane>\r\n                <div className=\"code-editor-nav\">\r\n                    <span>\r\n                        <Button\r\n                            style={{\r\n                                color: \"var(--primaryText)\",\r\n                                backgroundColor: \"none\",\r\n                                width: \"auto\",\r\n                            }}\r\n                            onClick={handleRun}\r\n                        >\r\n                            <CaretRightOutlined />\r\n                            Run\r\n                        </Button>\r\n                    </span>\r\n                    <span>\r\n                        <span style={{color: '#fff', marginRight: '10px'}}>\r\n                            Language : \r\n                        </span>\r\n                        <Select value={language} style={{ width: 120 }} onChange={handleLanguageChange}>\r\n                            <Option value=\"cpp\">CPP</Option>\r\n                            <Option value=\"c\">C</Option>\r\n                            <Option value=\"java\">Java</Option>\r\n                            <Option value=\"python\">Python</Option>\r\n                        </Select>\r\n                    </span>\r\n                </div>\r\n                <Editor\r\n                    key={selected.submissionId}\r\n                    options={{ readOnly: true }}\r\n                    value={selected.code || \"\"}\r\n                    theme=\"vs-dark\"\r\n                    readOnly={true}\r\n                    language={language}\r\n                    // defaultValue={selected.code}\r\n                    onMount={handleEditorDidMount}\r\n                />\r\n            </Pane>\r\n            <Pane style={{ height: \"100%\", widht: \"100%\" }}>\r\n                <div style={{ display: \"inline-flex\", width: \"100%\", height: \"100%\" }}>\r\n                    <div\r\n                        style={{\r\n                            width: \"100%\",\r\n                            background: \"var(--primaryBackground)\",\r\n                            padding: \"6px\",\r\n                            borderRight: \"2px solid var(--primaryText)\",\r\n                        }}\r\n                    >\r\n                        <div className=\"code-editor-input-title\">Input</div>\r\n                        <textarea\r\n                            value={input}\r\n                            onChange={e => {\r\n                                setInput(e.target.value);\r\n                                setOutput(\"\");\r\n                            }}\r\n                            className=\"code-editor-input-textarea\"\r\n                        />\r\n                    </div>\r\n                    <div style={{ width: \"100%\", background: \"var(--primaryBackground)\", padding: \"6px\" }}>\r\n                        <div className=\"code-editor-input-title\">Output </div>\r\n                        <div\r\n                            style={{ whiteSpace: \"pre\", textAlign: \"left\", fontSize: \"17px\" }}\r\n                            className=\"outer-scroll-div\"\r\n                        >\r\n                            {output}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Pane>\r\n        </SplitPane>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Table, Button, Input, Space, Modal } from \"antd\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport moment from \"moment\";\r\n\r\nexport default function ManageSelected({ questionDetails, roomDetails, enrolled, setEnrolled, selected, setSelected }) {\r\n    const getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    ref={node => {\r\n                        var searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                    style={{ marginBottom: 8, display: \"block\" }}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined />}\r\n                        size=\"small\"\r\n                        style={{ width: 90 }}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                        Reset\r\n                    </Button>\r\n                    <Button\r\n                        type=\"link\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            confirm({ closeDropdown: false });\r\n\r\n                            setSearchText(selectedKeys[0]);\r\n                            setSearchedColumn(dataIndex);\r\n                        }}\r\n                    >\r\n                        Filter\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />,\r\n        onFilter: (value, record) =>\r\n            record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : \"\",\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n            }\r\n        },\r\n        render: text =>\r\n            searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                    highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n                    searchWords={[searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : \"\"}\r\n                />\r\n            ) : (\r\n                text\r\n            ),\r\n    });\r\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n\r\n        setSearchText(selectedKeys[0]);\r\n        setSearchedColumn(dataIndex);\r\n    };\r\n    const handleReset = clearFilters => {\r\n        clearFilters();\r\n        setSearchText(\"\");\r\n    };\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [searchedColumn, setSearchedColumn] = useState(\"\");\r\n\r\n    const [showTable, setShowTable] = useState(true);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const handleSelected = row => {\r\n        if (selected.submissionId !== row.submissionId) {\r\n            setSelected(row);\r\n        }\r\n        setShowTable(false);\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: \"Username\",\r\n            dataIndex: \"userName\",\r\n            key: \"userName\",\r\n            ...getColumnSearchProps(\"userName\"),\r\n        },\r\n        {\r\n            title: \"Name\",\r\n            dataIndex: \"name\",\r\n            key: \"name\",\r\n            ...getColumnSearchProps(\"name\"),\r\n        },\r\n        {\r\n            title: \"SpecialFields\",\r\n            children: roomDetails.specialFields.map((field, index) => {\r\n                return {\r\n                    title: field,\r\n                    // dataIndex: field,\r\n                    key: field,\r\n                    render: row => row.specialFields[index],\r\n                };\r\n            }),\r\n            hidden: roomDetails.specialFields.length === 0,\r\n        },\r\n        {\r\n            title: \"Cases Passed (\" + questionDetails.noOfTCases + \")\",\r\n            key: \"cases\",\r\n            // width: \"100px\",\r\n            render: row => (row.submissionId !== 0 ? <> {row.tCasesPassed} </> : <></>),\r\n            hidden: questionDetails.noOfTCases === 0,\r\n        },\r\n        {\r\n            title: \"Submitted At\",\r\n            key: \"submittedss\",\r\n            // width: \"100px\",\r\n            render: row => (row.submissionId !== 0 ? <> {moment(row.submittedAt).format(\"MMMM Do, h:mm a\")} </> : <></>),\r\n        },\r\n        {\r\n            title: \"Submitted\",\r\n            key: \"submitted\",\r\n            width: \"100px\",\r\n            render: row =>\r\n                row.submissionId !== 0 ? (\r\n                    <Button\r\n                        onClick={() => {\r\n                            handleSelected(row);\r\n                        }}\r\n                    >\r\n                        View Submission\r\n                    </Button>\r\n                ) : (\r\n                    <>Not submitted</>\r\n                ),\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ textAlign: \"left\", paddingLeft: \"15px\", paddingBottom: \"15px\", borderBottom: \"2px solid #fff\" }}>\r\n                <Button\r\n                    onClick={() => {\r\n                        setShowTable(true);\r\n                    }}\r\n                    style={{ margin: \"20px 0px 0px 0px\" }}\r\n                    type=\"primary\"\r\n                >\r\n                    Open Submission Table\r\n                </Button>\r\n            </div>\r\n            <div style={{ padding: \"15px\", borderBottom: \"2px solid #fff\" }}>\r\n                <div className=\"myRooms-cards-description\">\r\n                    <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"170px\" }}>Username</span>\r\n                    {selected.userName}\r\n                </div>\r\n                <div className=\"myRooms-cards-description\">\r\n                    <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"170px\" }}>Name</span>\r\n                    {selected.name}\r\n                </div>\r\n                {selected.submissionId !== 0 ? (\r\n                    <div className=\"myRooms-cards-description\">\r\n                        <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"170px\" }}>Submitted At</span>\r\n                        {moment(selected.submittedAt).format(\"MMMM Do, h:mm a\")}\r\n                    </div>\r\n                ) : (<></>)}\r\n                {roomDetails.specialFields.map((field, index) => (\r\n                    <div className=\"myRooms-cards-description\">\r\n                        <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"170px\" }}>{field}</span>\r\n                        {selected.specialFields[index]}\r\n                    </div>\r\n                ))}\r\n                {questionDetails.noOfTCases !== 0 ? (\r\n                    <div className=\"myRooms-cards-description\">\r\n                        <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"170px\" }}>\r\n                            Cases passed\r\n                        </span>\r\n                        {/* <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"120px\" }}> */}\r\n\r\n                        {selected.tCasesPassed}/{questionDetails.noOfTCases}\r\n                        {/* </span> */}\r\n                    </div>\r\n                ) : (\r\n                    <></>\r\n                )}\r\n            </div>\r\n            <Modal\r\n                title={<div style={{ width: \"1000px\" }}>Submissions</div>}\r\n                centered\r\n                visible={showTable}\r\n                footer={null}\r\n                // bodyStyle={{width: \"80vw\"}}\r\n                closable={true}\r\n                onCancel={() => {\r\n                    setShowTable(false);\r\n                }}\r\n                width=\"80vw\"\r\n            >\r\n                {/* <div style={{width: '1000px'}}>hii</div> */}\r\n                <Table columns={columns} dataSource={enrolled} size=\"small\" pagination={false} />\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","import { Button } from 'antd';\r\nimport React from 'react'\r\nimport  FileViewer  from 'react-file-viewer';\r\nimport { useLocation } from 'react-router';\r\nimport { backendURL } from '../../Constants';\r\n\r\n\r\nexport default function FileType({selected}) {\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n\r\n    const downloadPDF = () => {\r\n\t\tfetch(`${backendURL}/get_submitted_file?questionId=${queryParams.get(\"qId\")}&submissionId=${selected.submissionId}&token=${localStorage.getItem('JWTtoken')}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\tresponse.blob().then(blob => {\r\n\t\t\t\t\tlet url = window.URL.createObjectURL(blob);\r\n\t\t\t\t\tlet a = document.createElement('a');\r\n\t\t\t\t\ta.href = url;\r\n\t\t\t\t\ta.download = \"Submission.pdf\" ;\r\n\t\t\t\t\ta.click();\r\n\t\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n    return (\r\n        <>\r\n            <Button onClick={downloadPDF} style={{marginTop: \"10px\", marginLeft: '10px'}} type=\"primary\"  >\r\n                Download PDF\r\n            </Button>\r\n            <FileViewer\r\n                controls={true}\r\n                fileType={\"pdf\"}\r\n                filePath={`${backendURL}/get_submitted_file?questionId=${queryParams.get(\"qId\")}&submissionId=${selected.submissionId}&token=${localStorage.getItem('JWTtoken')}`}\r\n                key={selected.submissionId}\r\n            />\r\n        </>\r\n    )\r\n}","import { Modal } from 'antd';\r\nimport axios from 'axios';\r\nimport { convertFromRaw, EditorState } from 'draft-js';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect, useState } from 'react'\r\nimport SemipolarLoading from 'react-loadingg/lib/SemipolarLoading';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport SplitPane, { Pane } from 'react-split-pane';\r\nimport QuestionPreview from '../EditQuestion/QuestionPreview';\r\nimport { logoutUser } from '../../Redux/Actions/AuthActions';\r\nimport { setBreadcrumb } from '../../Redux/Actions/RoomsDataActions';\r\nimport CodeType from './CodeType';\r\nimport ManageSelected from './ManageSelected';\r\nimport FileType from './FileType';\r\n\r\nexport default function CheckSubmissions() {\r\n    document.title = \"Submissions | Code Rooms\";\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [overlayLoading, setOverlayLoading] = useState(false);\r\n    const [questionDetails, setQuestionDetails] = useState({});\r\n    const [roomDetails, setRoomDetails] = useState({});\r\n    const [enrolled, setEnrolled] = useState([])\r\n    const [selected, setSelected] = useState({})\r\n\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n\r\n    useEffect(async() => {\r\n        dispatch(setBreadcrumb( [\r\n            {\r\n                \"name\": \"My Rooms\",\r\n                \"url\": \"/my_rooms\"\r\n            },\r\n            {\r\n                \"name\": roomDetails.roomName,\r\n                \"url\": \"/my_rooms/\" + roomDetails.roomId\r\n            },\r\n            {\r\n                \"name\": \"Submissions\",\r\n                \"url\": \"/submissions?qId=/\" + queryParams.get(\"qId\")\r\n            },\r\n        ] ));\r\n    }, [roomDetails.roomId]);\r\n\r\n    useEffect(async () => {\r\n        setLoading(true);\r\n        if (!queryParams.has(\"qId\")) {\r\n            enqueueSnackbar(\"Invalid question.\", { variant: \"warning\" });\r\n            history.replace(\"/my_rooms\");\r\n        }\r\n        await axios\r\n            .get(\"/question_submissions\", {\r\n                params: {\r\n                    questionId: queryParams.get(\"qId\"),\r\n                },\r\n            })\r\n            .then(res => {\r\n                setQuestionDetails({\r\n                    title: res.data.questionDetails.title,\r\n                    description: EditorState.createWithContent(convertFromRaw(res.data.questionDetails.template.description)),\r\n                    sample: res.data.questionDetails.template.sample,\r\n                    endTime: res.data.questionDetails.endTime,\r\n                    noOfTCases: res.data.questionDetails.testCases,\r\n                    _type: res.data.questionDetails._type\r\n                });\r\n\r\n                setRoomDetails({\r\n                    roomId: res.data.roomDetails.roomId,\r\n                    roomName: res.data.roomDetails.roomName,\r\n                    specialFields: res.data.roomDetails.specialFields,\r\n                });\r\n\r\n                setEnrolled(res.data.enrolled);\r\n\r\n                var select = {};\r\n                for(var i = 0; i < res.data.enrolled.length; i ++){\r\n                    if(res.data.enrolled[i].submissionId !== 0){\r\n                        select = res.data.enrolled[i];\r\n                        break;\r\n                    }\r\n                }\r\n                if(i === res.data.enrolled.length){\r\n                    enqueueSnackbar(\"No submissions recorded\", { variant: \"info\" });\r\n                    history.replace(\"/my_rooms/\" + res.data.roomDetails.roomId)\r\n                }\r\n                setSelected(select);\r\n\r\n            })\r\n            .catch(err => {\r\n                // console.log(err);\r\n                try {\r\n                    if (err.response.status === 401) {\r\n                        dispatch(logoutUser());\r\n                        return;\r\n                    }\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                    history.replace(\"/my_rooms\");\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some error occured while getting submissions\", { variant: \"error\" });\r\n                    history.replace(\"/my_rooms\");\r\n                }\r\n            });\r\n            setTimeout(() => {\r\n                \r\n                setLoading(false);\r\n            }, 500);\r\n    }, []);\r\n\r\n    const renderRightPane = () => {\r\n        if(questionDetails._type === \"code\"){\r\n            return (\r\n                <CodeType \r\n                    setOverlayLoading={setOverlayLoading}\r\n                    selected={selected}\r\n                    setSelected={setSelected}\r\n                />\r\n            )\r\n        } \r\n        else{\r\n            return(\r\n                <FileType \r\n                    selected={selected}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    return loading ? (\r\n        <div className=\"VerifyEmail-heading-div\">\r\n            <div>Loading Submissions ....</div>\r\n            <div style={{ marginTop: \"40px\", position: \"relative\" }}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\" />\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div>\r\n            <Modal centered visible={overlayLoading} footer={null} bodyStyle={{ padding: \"0px\" }} closable={false}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\" />\r\n            </Modal>\r\n            <SplitPane style={{ position: \"absolute\" }} minSize={350} maxSize={620} defaultSize={400} split=\"vertical\">\r\n                    <Pane>\r\n                        <ManageSelected\r\n                            questionDetails={questionDetails}\r\n                            roomDetails={roomDetails}\r\n                            enrolled={enrolled}\r\n                            setEnrolled={setEnrolled}\r\n                            selected={selected}\r\n                            setSelected={setSelected}\r\n                        />\r\n                        <QuestionPreview\r\n                            title={questionDetails.title} \r\n                            description={questionDetails.description} \r\n                            sample={questionDetails.sample}     \r\n                        />\r\n                    </Pane>\r\n                    {renderRightPane()}\r\n            </SplitPane>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { RiUser6Line } from 'react-icons/ri';\r\nimport { FiUserCheck } from 'react-icons/fi';\r\nimport { Form, Input, Button, Tabs,Tooltip } from \"antd\";\r\nimport { AiOutlineMail } from 'react-icons/ai';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useSnackbar } from 'notistack';\r\nimport axios from 'axios';\r\nimport { loginUser } from '../Redux/Actions/AuthActions';\r\nimport { setBreadcrumb } from '../Redux/Actions/RoomsDataActions';\r\nimport {QuestionCircleOutlined} from \"@ant-design/icons\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nexport default function UserSettings() {\r\n    const [loading, setLoading] = useState(false);\r\n    const authReducer = useSelector(state => state.authReducer);\r\n    const {enqueueSnackbar} = useSnackbar();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        dispatch(setBreadcrumb([\r\n            {\r\n                name: \"Settings\",\r\n                url: \"/user_settings\"\r\n            }\r\n        ]))\r\n    }, [])\r\n\r\n    document.title = \"User Settings | Code Rooms\";\r\n\r\n    const submitUsername = async(values) => {\r\n        if(authReducer.userName === values.userName){\r\n            enqueueSnackbar(\"Username unchanged !\", {variant: 'info'});\r\n            return;\r\n        }\r\n        setLoading(true);\r\n\r\n        await axios.post(\"/auth/change_username\", {\r\n            userName: values.userName\r\n        })\r\n            .then(res => {\r\n                localStorage.setItem(\"JWTtoken\", res.data.access_token);\r\n                const decoded = jwt_decode(res.data.access_token);\r\n                const data = {\r\n                    isLogged: true,\r\n                    userId: decoded.userId,\r\n                    userName: decoded.userName,\r\n                    firstName: decoded.firstName,\r\n                    lastName: decoded.lastName,\r\n                    email: decoded.email,\r\n                };\r\n                dispatch(loginUser(data));\r\n                enqueueSnackbar(\"Username changed to \" + decoded.userName, {variant: 'success'});\r\n            })\r\n            .catch(err => {\r\n                // console.log(err);\r\n                if(!err.response){\r\n                    enqueueSnackbar(\"Some error while changing username!\", {variant: 'error'});\r\n                    setLoading(false);\r\n                    return;\r\n                }\r\n                if(err.response.status === 401){\r\n                    enqueueSnackbar(err.response.data.detail, {\r\n                        variant: \"error\",\r\n                    });\r\n                    history.replace(\"/login\");\r\n                }\r\n                else{\r\n                    enqueueSnackbar(err.response.data.detail, {\r\n                        variant: \"error\",\r\n                    });\r\n                }\r\n\r\n            })\r\n        setLoading(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <Tabs \r\n            defaultActiveKey={\"userInfo\"} \r\n            tabBarExtraContent={\r\n                <Link to=\"/change_password\" style={{marginRight: '20px'}}>\r\n                    <Button disabled={loading} danger>\r\n                        Change Password\r\n                    </Button>\r\n                </Link>\r\n            }\r\n            destroyInactiveTabPane={true}\r\n        >\r\n                <TabPane\r\n                    tab={\r\n                        <div className=\"myRooms-cards-description\" style={{fontSize: '15px'}}>\r\n                            <FiUserCheck />\r\n                            <span style={{ margin: \"0px 6px\", display: \"inline-flex\"}}>\r\n                                Details\r\n                            </span>\r\n                        </div>\r\n                    }\r\n                    key=\"userInfo\"\r\n                    style={{textAlign: \"left\"}}\r\n                    disabled={loading}\r\n                >\r\n                    <div className=\"myRooms-cards-box\" style={{padding: '5px 0px 0px 0px'}}>\r\n                        <div className=\"myRooms-cards-info\">\r\n                            <div className=\"myRooms-cards-description\">\r\n                                <RiUser6Line />\r\n                                <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"150px\" }}>\r\n                                    Name\r\n                                </span>\r\n                                {authReducer.firstName + \" \" + authReducer.lastName}\r\n                            </div>\r\n                            <div className=\"myRooms-cards-description\">\r\n                                <AiOutlineMail />\r\n                                <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"150px\" }}>\r\n                                    Email\r\n                                </span>\r\n                                {authReducer.email}\r\n                            </div>\r\n                            <div className=\"myRooms-cards-description\">\r\n                                <FiUserCheck />\r\n                                <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"150px\" }}>\r\n                                    Username\r\n                                </span>\r\n                                {authReducer.userName}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </TabPane>\r\n                <TabPane\r\n                    tab={\r\n                        <div className=\"myRooms-cards-description\" style={{fontSize: '15px', padding: \"0px\", margin: '0px'}}>\r\n                            <FiUserCheck />\r\n\r\n                            <span style={{ margin: \"0px 6px\", display: \"inline-flex\"}}>\r\n                            Change Username\r\n                            </span>\r\n                        </div>\r\n                    }\r\n                    key=\"changeUsername\"\r\n                    destroyInactiveTabPane={true}\r\n                >\r\n                    <div className=\"signup-input-left\" style={{maxWidth: '400px', marginLeft: '20px'}}>\r\n                        <Form\r\n                            name=\"basic\"\r\n                            onFinish={submitUsername}\r\n                            layout=\"vertical\"\r\n                            initialValues={{\r\n                                layout: \"vertical\",\r\n                            }}\r\n                            autoComplete=\"off\"\r\n                            className=\"signup-form\"\r\n                        >\r\n                            <Form.Item\r\n                                label={\r\n                                    <label style={{ color: \"var(--primaryText)\" }}> \r\n                                        <span style={{paddingRight:'5px'}}>Username</span>\r\n                                        <Tooltip title=\"Username must start with a capital letter, have minimum of 3 characters and should not exceed 15 characters. No special charecters except '_' allowed.\">\r\n                                            <QuestionCircleOutlined />\r\n                                        </Tooltip>\r\n                                    </label>\r\n                                }\r\n                                name=\"userName\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: \"Please input valid username to set!\",\r\n                                    },\r\n                                    {\r\n                                        pattern: new RegExp(\"^[A-Z][a-z0-9_-]{2,15}$\"),\r\n                                        message:\"Invalid username\"\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input disabled={loading} defaultValue={authReducer.userName} />\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                \r\n                                <Button\r\n                                    htmlType=\"submit\"\r\n                                    type=\"primary\"\r\n                                    loading={loading}\r\n                                >\r\n                                    {loading ? \"Submitting\" : \"Submit\"}\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>\r\n                </TabPane>\r\n            </Tabs>\r\n    )\r\n}\r\n\r\n        ","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setBreadcrumb } from \"../Redux/Actions/RoomsDataActions\";\r\nimport { Card, Avatar, Tooltip } from \"antd\";\r\nimport { BsGithub, BsLinkedin } from \"react-icons/bs\";\r\nimport { SiGmail } from \"react-icons/si\";\r\nimport { GoGlobe } from \"react-icons/go\";\r\nimport ScrollToTop from \"react-scroll-to-top\";\r\n\r\nconst { Meta } = Card;\r\n\r\nexport default function AboutUs() {\r\n    const dispatch = useDispatch();\r\n    document.title = \"About Us | Code Rooms\"\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            setBreadcrumb([\r\n                {\r\n                    name: \"About Us\",\r\n                    url: \"/about\",\r\n                },\r\n            ])\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"aboutus-outer\">\r\n            <ScrollToTop smooth style={{paddingTop: '5px' }} color=\"var(--primaryBackground)\" />\r\n            <div className=\"aboutus-inner\">\r\n                <img\r\n                    src=\"./Logo.PNG\"\r\n                    style={{ alignSelf: \"center\", width: '250px', boxShadow: \"20px 20px 2px rgba(0, 0, 0, 0.3)\", marginBottom: '15px' }}\r\n                />\r\n                <div className=\"aboutus-title\">\r\n                    <u> About Us </u>\r\n                </div>\r\n\r\n                <div className=\"aboutus-cards\">\r\n                    <Card\r\n                        style={{ width: 300 }}\r\n                        cover={<img alt=\"Shlok\" src=\"https://avatars.githubusercontent.com/u/63449205?v=4\" />}\r\n                        actions={[\r\n                            (\r\n                                <a href=\"https://github.com/Shlok-Zanwar?tab=repositories\" target=\"_blank\">\r\n                                    <BsGithub className=\"aboutus-card-icons\" key=\"github\" />\r\n                                </a>\r\n                            ),\r\n                            (\r\n                                <a href=\"https://shlok-zanwar.github.io/\" target=\"_blank\">\r\n                                    <GoGlobe className=\"aboutus-card-icons\" key=\"website\" />\r\n                                </a>\r\n                            ),\r\n                            (\r\n                                <a href=\"https://www.linkedin.com/in/shlok-zanwar-0124961ba/\" target=\"_blank\">\r\n                                    <BsLinkedin className=\"aboutus-card-icons\" key=\"linkedin\" />\r\n                                </a>\r\n                            ),\r\n                            (\r\n                                <Tooltip title=\"shlokzanwar14@gmail.com\">\r\n                                    <a href=\"mailto:shlokzanwar14@gmail.com\" target=\"_blank\">\r\n                                        <SiGmail className=\"aboutus-card-icons\" key=\"gmail\" />\r\n                                    </a>\r\n                                </Tooltip>\r\n                            ),\r\n                        ]}\r\n                    >\r\n                        <Meta\r\n                            title=\"Shlok Zanwar\"\r\n                            description={\r\n                                <span >\r\n                                    <div style={{textAlign: 'left', marginBottom: '15px'}}>\r\n                                        (TY CS B-Tech) Student at vishwakarma institute of information technology, pune.\r\n                                    </div>\r\n                                    <div style={{textAlign: 'left'}}>\r\n                                        Quick learner, Proactive \r\n                                    </div>\r\n                                    <div style={{textAlign: 'left'}}>\r\n                                        Tech enthusiast \r\n                                    </div>\r\n                                </span>\r\n                            }\r\n                        />\r\n                    </Card>\r\n                    <Card\r\n                        style={{ width: 300 }}\r\n                        cover={<img alt=\"Roshan\" src=\"https://i.ibb.co/K6cpBDW/img.jpg\" />}\r\n                        actions={[\r\n                            (\r\n                                <a href=\"https://github.com/roshanpurohit\" target=\"_blank\">\r\n                                    <BsGithub className=\"aboutus-card-icons\" key=\"github\" />\r\n                                </a>\r\n                            ),\r\n                            (\r\n                                <a href=\"https://www.linkedin.com/in/roshan-purohit-87389b1a7\" target=\"_blank\">\r\n                                    <BsLinkedin className=\"aboutus-card-icons\" key=\"linkedin\" />\r\n                                </a>\r\n                            ),\r\n                            (\r\n                                <Tooltip title=\"roshpurohit24@gmail.com\">\r\n                                    <a href=\"mailto:roshpurohit24@gmail.com\" target=\"_blank\">\r\n                                        <SiGmail className=\"aboutus-card-icons\" key=\"gmail\" />\r\n                                    </a>\r\n                                </Tooltip>\r\n                            ),\r\n                        ]}\r\n                    >\r\n                        <Meta\r\n                            title=\"Roshan Purohit\"\r\n                            description={\r\n                                <span >\r\n                                    <div style={{textAlign: 'left', marginBottom: '15px'}}>\r\n                                        (TY CS B-Tech) Student at vishwakarma institute of information technology, pune.\r\n                                    </div>\r\n                                    <div style={{textAlign: 'left'}}>\r\n                                        Ardent problem solver \r\n                                    </div>\r\n                                    <div style={{textAlign: 'left'}}>\r\n                                        Web dev enthusiast \r\n                                    </div>\r\n                                </span>\r\n                            }\r\n                        />\r\n                    </Card>\r\n                </div>\r\n\r\n                <div className=\"aboutus-content\">\r\n                    <p>\r\n                        <span style={{color: \"var(--tertiaryBackground)\"}}>\r\n                        Code rooms is a learning management system where teachers can seamlessly create rooms,assignments and\r\n                        assess assignments. Students can easily submit assigned assignments.\r\n                        </span>\r\n                        <br />\r\n                        <br />\r\n                        <u>Cool Features:</u>\r\n                        <div className=\"aboutus-list\">\r\n                            <ul>\r\n                                <li>\r\n                                    Create Rooms with features like waiting room authority and visibility on the go with one\r\n                                    click.\r\n                                </li>\r\n                                <li> \r\n                                    Questions can be made in rooms with submission info and edit options right on the card.\r\n                                    </li>\r\n                                <li>\r\n                                    Create questions on the go with side by side expected user preview on the left with all\r\n                                    editable components on right in resizable panels.\r\n                                </li>\r\n                                <li>\r\n                                    Questions can be of code or file submission type.\r\n                                </li>\r\n                                <li>\r\n                                    Code type questions have option to add testcases which will be processed on submissions.\r\n                                </li>\r\n                                <li>\r\n                                    Question settings like End time and visibility can be edited anytime.\r\n                                </li>\r\n                                <li>\r\n                                    Question due time on question cards itself.\r\n                                </li>\r\n                                <li>\r\n                                    Code type questions can be submitted with user friendly resizable code editor with options\r\n                                    like run with entered input, save current code and submit.\r\n                                </li>\r\n                                <li>\r\n                                    File type questions let you upload the file with a preview before submitting\r\n                                    </li>\r\n                                <li>\r\n                                    Submissions of any type of question can be assessed easily in every question with a code\r\n                                    editor with submitted code or a preview of the file submitted right on the screen with\r\n                                    download option.\r\n                                </li>\r\n                                <li>\r\n                                    Easy navigation throughout the application with features like breadcrumbs. \r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </p>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginUser, logoutUser } from \"./Redux/Actions/AuthActions\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Home from \"./Components/Home\";\r\nimport MyNavbar from \"./Navbar/MyNavbar\";\r\nimport AllRooms from \"./MyRooms/AllRooms/AllRooms\";\r\nimport OneRoom from \"./MyRooms/RoomByRoomId/OneRoom\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { setMyRooms, removeMyRoomsLoading, setEnrolled, removeEnrolledLoading, setEnrolledLoading, setMyRoomsLoading } from \"./Redux/Actions/RoomsDataActions\";\r\nimport AllEnrolled from \"./EnrolledRooms/AllEnrolled/AllEnrolled\";\r\nimport JoinRoom from \"./EnrolledRooms/JoinRoom\";\r\nimport EnrolledRoom from \"./EnrolledRooms/EnrolledById/EnrolledRoom\";\r\nimport EditQuestion from \"./MyRooms/EditQuestion/EditQuestion\";\r\nimport CodePlayground from \"./CodePlayground/CodePlayground\";\r\n// import ViewQuestion from \"./Questions/ViewQuestion/ViewQuestion\";\r\nimport ViewQuestion from \"./EnrolledRooms/ViewQuestion/ViewQuestion\";\r\nimport CheckSubmissions from \"./MyRooms/CheckSubmissions/CheckSubmissions\";\r\nimport UserSettings from \"./Components/UserSettings\";\r\nimport AboutUs from \"./Components/AboutUs\";\r\n\r\nexport default function AuthRouter() {\r\n    const [loading, setLoading] = useState(true);\r\n    const authReducer = useSelector(state => state.authReducer);\r\n    const dispatch = useDispatch();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const handleError = (err) => {\r\n        if(!err.response){\r\n            enqueueSnackbar(\"Some Error occurred while getting Rooms. Please refresh page\", {variant: 'error'});\r\n            return;\r\n        }\r\n        if(err.response.status === 401){\r\n            dispatch(logoutUser());\r\n        }\r\n        else{\r\n            enqueueSnackbar(\"Some Error occurred while getting Rooms. Please refresh page\", {variant: 'error'})\r\n        }\r\n    }\r\n\r\n    const getMyRoomsData = async() => {\r\n        dispatch(setMyRoomsLoading());\r\n        axios.get(\"/my_rooms\")\r\n            .then(res => {\r\n                dispatch(setMyRooms(res.data.myRooms));\r\n                dispatch(removeMyRoomsLoading());\r\n            })\r\n            .catch(err => {\r\n                handleError(err);\r\n            })\r\n    }\r\n\r\n    const getEnrolledRoomsData = async() => {\r\n        dispatch(setEnrolledLoading());\r\n        axios.get(\"/enrolled_rooms\")\r\n            .then(res => {\r\n                dispatch(setEnrolled(res.data.enrolledRooms));\r\n                dispatch(removeEnrolledLoading());\r\n            })\r\n            .catch(err => {\r\n                handleError(err);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        try {\r\n            if (localStorage.JWTtoken) {\r\n                const token = localStorage.getItem(\"JWTtoken\");\r\n                // Decode token and get user info and exp\r\n                const decoded = jwt_decode(token);\r\n                // Set user and isAuthenticated\r\n                // store.dispatch(setCurrentUser(decoded));\r\n                // Check for expired token\r\n                // console.log(decoded)\r\n                const currentTime = Date.now() / 1000; // to get in milliseconds\r\n                if (decoded.exp >= currentTime) {\r\n                    const data = {\r\n                        isLogged: true,\r\n                        userId: decoded.userId,\r\n                        userName: decoded.userName,\r\n                        firstName: decoded.firstName,\r\n                        lastName: decoded.lastName,\r\n                        email: decoded.email,\r\n                    };\r\n                    // decoded.isLogged = true;\r\n                    dispatch(loginUser(data));\r\n                    getEnrolledRoomsData();\r\n                    getMyRoomsData();\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    return loading ? (\r\n        <div>Loading</div>\r\n    ) : !authReducer.isLogged ? (\r\n        <Redirect\r\n            push\r\n            to={{\r\n                pathname: \"/login\",\r\n                state: {\r\n                    from: window.location.href,\r\n                },\r\n            }}\r\n        />\r\n    ) : (\r\n        <>\r\n            <MyNavbar />\r\n            {/* <div style={{height: (height-63) + \"px\", position: 'relative' }}> */}\r\n                <Switch>\r\n                    <Route exact path=\"/my_rooms\">\r\n                        <AllRooms getMyRoomsData={getMyRoomsData} />\r\n                    </Route>\r\n                    <Route exact path=\"/my_rooms/:id\">\r\n                        <OneRoom getMyRoomsData={getMyRoomsData} />\r\n                    </Route>\r\n                    <Route exact path=\"/join_room\">\r\n                        <JoinRoom />\r\n                    </Route>\r\n                    <Route exact path=\"/enrolled_rooms\">\r\n                        <AllEnrolled getEnrolledRoomsData={getEnrolledRoomsData} />\r\n                    </Route>\r\n                    <Route exact path=\"/enrolled_rooms/:id\">\r\n                        <EnrolledRoom />\r\n                    </Route>\r\n                    <Route exact path=\"/edit_question\">\r\n                        <EditQuestion />\r\n                    </Route>\r\n                    <Route exact path=\"/question\">\r\n                        <ViewQuestion />\r\n                    </Route>\r\n                    <Route exact path=\"/submissions\">\r\n                        <CheckSubmissions />\r\n                    </Route>\r\n                    <Route exact path=\"/code\">\r\n                        <CodePlayground />\r\n                    </Route>\r\n                    <Route exact path=\"/user_settings\">\r\n                        <UserSettings />\r\n                    </Route>\r\n                    <Route exact path=\"/about\">\r\n                        <AboutUs />\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <Home />\r\n                    </Route>\r\n                </Switch>\r\n            {/* </div> */}\r\n        </>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Typography } from 'antd';\r\nimport { PointSpreadLoading } from 'react-loadingg';\r\nimport axios from 'axios';\r\nimport { useLocation } from 'react-router';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nexport default function VerifyEmail() {\r\n    document.title = \"Verify Email | Code Rooms\"\r\n\r\n    const [countdown, setCountdown] = useState(10);\r\n    const [result, setResult] = useState(\"\");\r\n    const [statusColor, setStatusColor] = useState(\"#ff1c03\")\r\n    \r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    useEffect(async() => {\r\n        if(countdown <= 0){\r\n            window.location.href = \"/login\"\r\n        }\r\n\r\n        if(result === \"\"){\r\n            if(!queryParams.has(\"email\") || !queryParams.has(\"otp\")){\r\n                setResult(\"Invalid Credentials\");\r\n                enqueueSnackbar(\"Some Error occurred\", {\r\n                    variant: \"error\",\r\n                });\r\n            }\r\n            else{\r\n                await axios.post(\"/auth/verify_email\", {\r\n                    email: queryParams.get(\"email\"),\r\n                    otp: queryParams.get(\"otp\")\r\n                })\r\n                    .then(res => {\r\n                        enqueueSnackbar(\"Email Verified\", {\r\n                            variant: \"success\",\r\n                        });\r\n                        setResult(\"Email id \" + queryParams.get(\"email\") + \" Verified\");\r\n                        setStatusColor(\"#46ed1c\");\r\n                    })\r\n                    .catch(err => {\r\n                        try {\r\n                            setResult(err.response.data.detail);\r\n                        } catch (error) {\r\n                            setResult(\"Some Error Occured\");\r\n                        }\r\n                        enqueueSnackbar(\"Some Error occurred\", {\r\n                            variant: \"error\",\r\n                        });\r\n                    })\r\n            }\r\n        }\r\n\r\n        setTimeout(() => {\r\n            setCountdown(countdown - 1);\r\n        }, 1000);\r\n    }, [countdown])\r\n\r\n    return (\r\n        <div className=\"VerifyEmail-outer-div\">\r\n            <div className=\"VerifyEmail-heading-div\">\r\n                Verifying Details with Server ...\r\n            </div>\r\n            {\r\n                result === \"\" ? (\r\n                    <div style={{marginTop: \"20px\", position: 'relative'}}>\r\n                        <PointSpreadLoading color=\"var(--loadingColor)\" />\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"verifyEmail-status-div\">\r\n                        <div>Status : <span style={{color: statusColor}}>{result}</span></div>\r\n                        <div>Redirecting to <span><a href=\"/login\">login</a></span> page in {countdown} seconds</div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Form, Input, Button, Tooltip} from \"antd\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {QuestionCircleOutlined} from \"@ant-design/icons\";\r\n\r\nexport default function Signup() {\r\n    document.title = \"Sign Up | Code Rooms\"\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    let history = useHistory();\r\n\r\n    const onFinish = async values => {\r\n        setLoading(true);\r\n        if (values.password !== values.rePassword) {\r\n            enqueueSnackbar(\"Passwords do not match!\", {\r\n                variant: \"error\",\r\n            });\r\n            setTimeout(() => {\r\n                setLoading(false);\r\n            }, 1000);\r\n            return;\r\n        }\r\n        await axios\r\n            .post(\"/auth/signup\", {\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                email: values.email,\r\n                password: values.password,\r\n                username: values.userName,\r\n            })\r\n            .then(res => {\r\n                enqueueSnackbar(\"Verification link has been sent to \" + values.email + \". Please verify your account.\", {\r\n                    variant: \"success\",\r\n                });\r\n                setLoading(false);\r\n                history.push('/login');\r\n            })\r\n            .catch(err => {\r\n                try {\r\n                    enqueueSnackbar(err.response.data.detail, {\r\n                        variant: \"error\",\r\n                    });\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some Error occurred.\", {\r\n                        variant: \"error\",\r\n                    });\r\n                }\r\n                setLoading(false);\r\n            });\r\n    };\r\n    return (\r\n        <div className=\"signup-outer-div\">\r\n            <img\r\n                src=\"./Logo.PNG\"\r\n                style={{ alignSelf: \"center\", width: '250px', boxShadow: \"20px 20px 2px rgba(0, 0, 0, 0.3)\" }}\r\n            />\r\n            <div className=\"signup-header-div\">Sign Up</div>\r\n            <Form\r\n                name=\"basic\"\r\n                onFinish={onFinish}\r\n                // onFinishFailed={onFinishFailed}\r\n                layout=\"vertical\"\r\n                initialValues={{\r\n                    layout: \"vertical\",\r\n                }}\r\n                autoComplete=\"off\"\r\n                className=\"signup-form\"\r\n            >\r\n                <div className=\"signup-input-sameline\">\r\n                    <Form.Item\r\n                        label={<label style={{ color: \"var(--primaryText)\" }}>First Name</label>}\r\n                        name=\"firstName\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please input your First Name!\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={<label style={{ color: \"var(--primaryText)\" }}>Last Name</label>}\r\n                        name=\"lastName\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please input your Last Name!\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                </div>\r\n                <div className=\"signup-input-left\">\r\n                    <Form.Item\r\n                        label={<label style={{ color: \"var(--primaryText)\" }}>Email</label>}\r\n                        name=\"email\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please input your Email address!\",\r\n                            },\r\n                            {\r\n                                type: 'email',\r\n                                warningOnly: true,\r\n                                message:\"Input is not a valid email address!\"\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                         label={\r\n                            <label style={{ color: \"var(--primaryText)\" }}> \r\n                                <span style={{paddingRight:'5px'}}>Username</span>\r\n                                <Tooltip title=\"Username must start with a capital letter, have minimum of 3 characters and should not exceed 15 characters. No special charecters except '_' allowed.\">\r\n                                    <QuestionCircleOutlined />\r\n                                </Tooltip>\r\n                            </label>\r\n                        }\r\n                        name=\"userName\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please input username to set!\",\r\n                            },\r\n                            {\r\n                                pattern: new RegExp(\"^[A-Z][a-z0-9_-]{2,15}$\"),\r\n                                message:\"Invalid username\"\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                </div>\r\n                <div className=\"signup-input-sameline\">\r\n                    <Form.Item\r\n                        label={\r\n                            <label style={{ color: \"var(--primaryText)\" }}> \r\n                                <span style={{paddingRight:'5px'}}>Password</span>\r\n                                <Tooltip  title=\"Password must contain ATLEAST one uppercase character, one lowercase character, one numeric character, one special character and should have length of 5 to 15 characters.\">\r\n                                    <QuestionCircleOutlined />\r\n                                </Tooltip>\r\n                            </label>\r\n                        }\r\n                        name=\"password\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message:\"Please input password!\"\r\n                            },\r\n                            {\r\n                                message: \"Invalid Password!\",\r\n                                pattern: new RegExp(\"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[*.!@$%^#&:;<>(){},.?~_|]).{5,15}$\")\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={<label style={{ color: \"var(--primaryText)\" }}>Re-Enter Password</label>}\r\n                        name=\"rePassword\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please re-enter your password!\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n                </div>\r\n                <a href=\"/login\"> Already have an account? Log in. </a>\r\n                 <Form.Item\r\n                    wrapperCol={{\r\n                        offset: 8,\r\n                        span: 16,\r\n                    }}\r\n                >\r\n                    \r\n                    <Button\r\n                        htmlType=\"submit\"\r\n                        style={{\r\n                            backgroundColor: \"var(--success)\",\r\n                            width: \"auto\",\r\n                            fontSize: \"20px\",\r\n                            height: \"auto\",\r\n                            marginRight: \"130px\",\r\n                            marginTop:\"20px\"\r\n                        }}\r\n                        loading={loading}\r\n                    >\r\n                        {loading ? \"Submitting\" : \"Submit\"}\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Form, Input, Button,Tooltip } from \"antd\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\r\n\r\nexport default function ChangePassword() {\r\n    document.title = \"Reset Password | Code Rooms\"\r\n    \r\n    const [loading, setLoading] = useState(false);\r\n    const [showPasswordAndOTP, setShowPasswordAndOTP] = useState(false);\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    let history = useHistory();\r\n\r\n\r\n    const requestOTP = async(email) => {\r\n        setLoading(true);\r\n        await axios.get(\"/auth/request_change_password\", {\r\n            params: {\r\n                email: email\r\n            }\r\n        })\r\n            .then(res => {\r\n                setShowPasswordAndOTP(true);\r\n                enqueueSnackbar(\"OTP has been sent to \" + email, {\r\n                    variant: \"success\",\r\n                });\r\n            })\r\n            .catch(err => {\r\n                if(!err.response){\r\n                    enqueueSnackbar(\"Some Error occurred.\", {\r\n                        variant: \"error\",\r\n                    });\r\n                    setLoading(false);\r\n                    return;\r\n                }\r\n                if(err.response.status === 401){\r\n                    enqueueSnackbar(err.response.data.detail, {\r\n                        variant: \"error\",\r\n                    });\r\n                    history.replace(\"/login\");\r\n                }\r\n                else{\r\n                    enqueueSnackbar(err.response.data.detail, {\r\n                        variant: \"error\",\r\n                    });\r\n                }\r\n            })\r\n        setLoading(false);\r\n    }\r\n\r\n    const changePassword = async(values) => {\r\n        setLoading(true);\r\n        await axios.post(\"/auth/change_password\", {\r\n            email: values.email,\r\n            password: values.password,\r\n            otp: values.otp,\r\n        })\r\n            .then(res => {\r\n                enqueueSnackbar(\"Password changed\", {\r\n                    variant: \"success\",\r\n                });\r\n                history.replace(\"/login\");\r\n            })\r\n            .catch(err => {\r\n                if(!err.response){\r\n                    enqueueSnackbar(\"Some Error occurred.\", {\r\n                        variant: \"error\",\r\n                    });\r\n                    return;\r\n                }\r\n                enqueueSnackbar(err.response.data.detail, {\r\n                    variant: \"error\",\r\n                });\r\n            })\r\n        setLoading(false);\r\n    }\r\n     \r\n\r\n    const onFinish = async values => {\r\n        if(!values.otp){\r\n            requestOTP(values.email)\r\n        }\r\n        else{\r\n            if (values.password !== values.rePassword) {\r\n                enqueueSnackbar(\"Passwords do not match!\", {\r\n                    variant: \"error\",\r\n                });\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            changePassword(values);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"signup-outer-div\">\r\n            <img\r\n                src=\"./Logo.PNG\"\r\n                style={{ alignSelf: \"center\", width: '250px', boxShadow: \"20px 20px 2px rgba(0, 0, 0, 0.3)\" }}\r\n            />\r\n            <div className=\"signup-header-div\">Change password</div>\r\n            <Form\r\n                name=\"basic\"\r\n                layout=\"vertical\"\r\n                initialValues={{\r\n                    layout: \"vertical\",\r\n                }}\r\n                onFinish={onFinish}\r\n                autoComplete=\"off\"\r\n                className=\"signup-form\"\r\n            >\r\n                <div className=\"signup-input-left\">\r\n                    <Form.Item\r\n                        label={<label style={{ color: \"var(--primaryText)\" }}>Email</label>}\r\n                        name=\"email\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please input your Email address!\",\r\n                            },\r\n                            {\r\n                                type: 'email',\r\n                                warningOnly: true,\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input readOnly={showPasswordAndOTP} />\r\n                    </Form.Item>\r\n                </div>\r\n                {\r\n                    showPasswordAndOTP ? (\r\n                    <>\r\n                        <Form.Item\r\n                            label={<label style={{ color: \"var(--primaryText)\" }}>OTP</label>}\r\n                            name=\"otp\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Invalid OTP !\",\r\n                                },\r\n                                {\r\n                                    pattern: new RegExp(\"^[0-9]{6}$\"),\r\n                                    message:\"Invalid OTP !\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input type=\"number\" />\r\n                        </Form.Item>\r\n                        <div className=\"signup-input-sameline\">\r\n                            <Form.Item\r\n                                 label={\r\n                                    <label style={{ color: \"var(--primaryText)\" }}> \r\n                                        <span style={{paddingRight:'5px'}}>Password</span>\r\n                                        <Tooltip  title=\"Password must contain ATLEAST one uppercase character, one lowercase character, one numeric character, one special character and should have length of 5 to 15 characters.\">\r\n                                            <QuestionCircleOutlined />\r\n                                        </Tooltip>\r\n                                    </label>\r\n                                }\r\n                                name=\"password\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: \"Please input your password!\",\r\n                                    },\r\n                                    {\r\n                                        message: \"Invalid Password!\",\r\n                                        pattern: new RegExp(\"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[*.!@$%^#&:;<>(){},.?~_|]).{5,}$\")\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input.Password />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                label={<label style={{ color: \"var(--primaryText)\" }}>Re-Enter Password</label>}\r\n                                name=\"rePassword\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: \"Please re-enter your password!\",\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input.Password />\r\n                            </Form.Item>\r\n                        </div> \r\n                        <span style={{color: 'red'}}>Do not refresh this page.</span>\r\n                    </> \r\n                    ) : (<></>)\r\n                }\r\n                <Form.Item\r\n                    wrapperCol={{\r\n                        offset: 8,\r\n                        span: 16,\r\n                    }}\r\n                >\r\n                    \r\n                    <Button\r\n                        htmlType=\"submit\"\r\n                        style={{\r\n                            backgroundColor: \"var(--success)\",\r\n                            width: \"auto\",\r\n                            // fontSize: \"20px\",\r\n                            height: \"auto\",\r\n                            marginRight: \"130px\",\r\n                            marginTop:\"20px\"\r\n                        }}\r\n                        loading={loading}\r\n                    >\r\n                        {showPasswordAndOTP ? \"Change Password\" : \"Get OTP\"}\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n","import './App.css';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport Login from './Authentication/Login';\r\nimport AuthRouter from './AuthRouter';\r\nimport VerifyEmail from './Authentication/VerifyEmail';\r\nimport Signup from './Authentication/Signup';\r\nimport ChangePassword from './Authentication/ChangePassword';\r\n// import \"antd/dist/antd.css\";\r\n\r\nexport default function App() {\r\n\r\n  \treturn (\r\n\t\t<Router>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"/login\" >\r\n\t\t\t\t\t<Login />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/signup\">\r\n\t\t\t\t\t<Signup />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/verify_email\">\r\n\t\t\t\t\t<VerifyEmail />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/change_password\">\r\n\t\t\t\t\t<ChangePassword />\r\n\t\t\t\t</Route>\r\n\r\n\t\t\t\t<Route path=\"/\">\r\n\t\t\t\t\t{\r\n                        localStorage.getItem('redirectTo') ? <Redirect to={localStorage.getItem('redirectTo')} /> \r\n                        : null\r\n                        \r\n                    }\r\n\t\t\t\t\t<AuthRouter />\r\n\t\t\t\t</Route>\r\n\t\t\t\t\r\n\t\t\t</Switch>\r\n\t\t</Router>\r\n\t)\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    isLogged: false,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    var newState;\r\n    switch (action.type) {\r\n        case 'AR_SET_LOGGED':\r\n            newState = {...action.payload};\r\n            newState.isLogged = true;\r\n            return newState;\r\n        \r\n        case 'AR_LOGOUT':\r\n            newState = {};\r\n            newState.isLogged = false;\r\n            return newState;\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","const initialState = {\r\n    myRooms: [],\r\n    enrolledRooms: [],\r\n    myRoomsLoading: true,\r\n    enrolledRoomsLoading: true,\r\n    breadcrumb: [],\r\n}\r\n\r\nconst roomsDataReducer = (state = initialState, action) => {\r\n    var newState;\r\n    switch (action.type) {\r\n        case 'RDR_SET_MYROOMS_LOADING':\r\n            newState = {...state};\r\n            newState.myRoomsLoading = true;\r\n            return newState;\r\n        case 'RDR_REMOVE_MYROOMS_LOADING':\r\n            newState = {...state};\r\n            newState.myRoomsLoading = false;\r\n            return newState;\r\n\r\n        case 'RDR_SET_ENROLLED_LOADING':\r\n            newState = {...state};\r\n            newState.enrolledRoomsLoading = true;\r\n            return newState;\r\n        case 'RDR_REMOVE_ENROLLED_LOADING':\r\n            newState = {...state};\r\n            newState.enrolledRoomsLoading = false;\r\n            return newState;\r\n        \r\n        case 'RDR_SET_MYROOMS':\r\n            newState = {...state};\r\n            newState.myRooms = action.payload;\r\n            return newState;\r\n\r\n        case 'RDR_SET_ENROLLED':\r\n            newState = {...state};\r\n            newState.enrolledRooms = action.payload;\r\n            return newState;\r\n\r\n        case 'RDR_SET_BREADCRUMB':\r\n            newState = {...state};\r\n            newState.breadcrumb = action.payload;\r\n            return newState;\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default roomsDataReducer;","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./AuthReducer\";\r\nimport roomsDataReducer from \"./RoomsDataReducer\";\r\n\r\nconst ReduxCombined = combineReducers({\r\n    authReducer,\r\n    roomsDataReducer\r\n})\r\n\r\nexport default ReduxCombined;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from 'react-redux';\r\nimport ReduxCombined from './Redux/ReduxCombined';\r\nimport axios from 'axios';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport { backendURL } from './Constants';\r\n\r\n\r\naxios.defaults.baseURL = backendURL;\r\naxios.defaults.headers.common['Authorization'] = localStorage.getItem('JWTtoken');\r\n\r\nconst store = createStore(\r\n    ReduxCombined,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n  \t\t<Provider store={store}>\r\n\t\t  \t<SnackbarProvider\r\n\t\t\t\tmaxSnack={3}\r\n\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\thorizontal: 'left',\r\n\t\t\t\t}}\r\n\t\t\t\tautoHideDuration={4000}\r\n\t\t\t>\r\n\t\t\t<App />\r\n\t\t\t</SnackbarProvider>\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n\r\n\r\n//   const temp = () => {\r\n//     axios.get(\"/\")\r\n//     .then(res => {\r\n//         alert(\"LOGINNNN\");\r\n\t\t\r\n//     })\r\n//     .catch(err => {\r\n//         if(!err.response){\r\n//             // enqueueSnackbar(\"Some Error occurred while getting \" + route, {variant: 'error'});\r\n//             return;\r\n//         }\r\n//         if(err.response.status === 401){\r\n//             dispatch(logoutUser());\r\n//         }\r\n//         else{\r\n//             // enqueueSnackbar(\"Some Error occurred while getting \" + route, {variant: 'error'})\r\n//         }\r\n//     })\r\n//   }"],"sourceRoot":""}