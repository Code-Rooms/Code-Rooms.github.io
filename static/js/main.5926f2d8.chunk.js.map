{"version":3,"sources":["Authentication/Login.js","Redux/Actions/AuthActions.js","Redux/Actions/RoomsDataActions.js","Components/Home.js","Components/MyDivider.js","Navbar/NavbarDrawer.js","Navbar/MyNavbar.js","MyRooms/AllRooms/RenderRooms.js","MyRooms/AllRooms/AllRooms.js","MyRooms/RoomByRoomId/RoomSettings.js","MyRooms/RoomByRoomId/RenderQuestions.js","MyRooms/RoomByRoomId/RoomEnrolled.js","MyRooms/RoomByRoomId/RoomWaiting.js","MyRooms/RoomByRoomId/OneRoom.js","EnrolledRooms/AllEnrolled/RenderEnrolled.js","EnrolledRooms/AllEnrolled/AllEnrolled.js","EnrolledRooms/JoinRoom.js","EnrolledRooms/EnrolledById/RenderQuestions.js","EnrolledRooms/EnrolledById/EnrolledRoom.js","TextEditor/MyTextEditor.js","MyRooms/EditQuestion/QuestionTemplate.js","Components/WindowDimensions.js","MyRooms/EditQuestion/QuestionPreview.js","MyRooms/EditQuestion/QuestionCases.js","MyRooms/EditQuestion/QuestionSettings.js","MyRooms/EditQuestion/EditQuestion.js","CodePlayground/EditorNavbar.js","CodePlayground/RenderSaved.js","CodePlayground/MyEditor.js","CodePlayground/CodePlayground.js","EnrolledRooms/ViewQuestion/EditorNavbar.js","EnrolledRooms/ViewQuestion/CodeType.js","Constants.js","EnrolledRooms/ViewQuestion/FileType.js","EnrolledRooms/ViewQuestion/ViewQuestion.js","MyRooms/CheckSubmissions/CodeType.js","MyRooms/CheckSubmissions/ManageSelected.js","MyRooms/CheckSubmissions/FileType.js","MyRooms/CheckSubmissions/CheckSubmissions.js","Components/UserSettings.js","Components/AboutUs.js","AuthRouter.js","Authentication/VerifyEmail.js","Authentication/Signup.js","Authentication/ChangePassword.js","App.js","reportWebVitals.js","Redux/AuthReducer.js","Redux/RoomsDataReducer.js","Redux/ReduxCombined.js","index.js"],"names":["Login","document","title","useState","loading","setLoading","history","useHistory","enqueueSnackbar","useSnackbar","onFinish","values","a","axios","post","username","userName","password","then","res","localStorage","setItem","data","access_token","window","location","href","state","from","error","catch","err","response","detail","variant","className","src","style","alignSelf","width","boxShadow","name","labelCol","span","wrapperCol","initialValues","remember","onFinishFailed","errorInfo","errorFields","errors","autoComplete","Item","label","color","rules","required","message","Password","htmlType","backgroundColor","fontSize","height","marginTop","loginUser","details","type","payload","logoutUser","removeItem","setMyRooms","setEnrolled","setBreadcrumb","Home","due","setDue","dispatch","useDispatch","useEffect","get","status","timeConditions","question","moment","endTime","diff","format","display","valueStyle","value","reload","position","size","length","paddingTop","map","to","questionId","marginLeft","minWidth","fontWeight","roomName","_type","MyDivider","margin","SubMenu","Menu","NavbarDrawer","drawerOpen","setDrawerOpen","authReducer","useSelector","roomsDataReducer","pushLink","link","push","alignItems","MenuOutlined","onClick","marginRight","footer","background","mode","theme","selectable","icon","keyboard","placement","closable","onClose","visible","bodyStyle","padding","headerStyle","borderBottom","footerStyle","borderTop","defaultSelectedKeys","defaultOpenKeys","HomeOutlined","BookOutlined","onTitleClick","enrolledRoomsLoading","enrolledRooms","room","roomId","AppstoreOutlined","myRoomsLoading","myRooms","PlusCircleOutlined","CodeOutlined","SettingOutlined","InfoCircleFilled","LogoutOutlined","MyNavbar","breadcrumb","page","url","fontStyle","cursor","RenderRooms","createNewRoom","extra","breakpointCols","default","columnClassName","enrolled","questions","visibility","AllRooms","getMyRoomsData","loadingMessage","setLoadingMessage","queryParams","URLSearchParams","useLocation","search","has","firstName","newRoomId","RoomSettings","settingsVisible","setSettingsVisible","roomInfo","setRoomInfo","specialFields","setSpecialFields","handleSave","newData","undefined","waitingRoomEnabled","newRoomInfo","destroyOnClose","onCancel","Radius","layout","console","log","labelAlign","defaultValue","Option","defaultChecked","justifyContent","marginBottom","hidden","waitingRoomCount","field","index","onChange","e","target","changeSpecialField","readOnly","filter","i","removeField","danger","disabled","RenderQuestions","getInitialData","deleteQuestion","id","renderVisibility","isVisible","isAfter","onConfirm","okText","cancelText","overlayInnerStyle","maxWidth","border","top","right","left","submitted","lineWidth","paddingAngle","RoomEnrolled","enrolledTable","setEnrolledTable","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","ref","node","placeholder","onPressEnter","handleSearch","SearchOutlined","handleReset","closeDropdown","setSearchText","setSearchedColumn","filterIcon","filtered","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","render","text","searchedColumn","highlightStyle","searchWords","searchText","autoEscape","textToHighlight","tableLoading","setTableLoading","members","deleteMember","userId","tableId","columns","key","children","row","item","dataSource","pagination","RoomWaiting","waitingTable","setWaitingTable","acceptMember","TabPane","Tabs","OneRoom","setQuestions","useParams","replace","createNewQuestion","newQuestionId","deleteRoom","toCopy","origin","temp","createElement","tempMsg","createTextNode","appendChild","body","select","execCommand","removeChild","CopyOutlined","overlay","defaultActiveKey","tab","RenderEnrolled","AllEnrolled","getEnrolledRoomsData","JoinRoom","specialInfo","setSpecialInfo","joinRoom1","Countdown","Statistic","isSubmitted","submissionTime","EnrolledRoom","getRoomData","leaveRoom","host","DescriptionEditor","props","focus","refs","editor","editorState","setState","handleKeyCommand","_handleKeyCommand","bind","mapKeyToEditorCommand","_mapKeyToEditorCommand","toggleBlockType","_toggleBlockType","toggleInlineStyle","_toggleInlineStyle","command","newState","RichUtils","this","keyCode","getDefaultKeyBinding","newEditorState","onTab","blockType","inlineStyle","contentState","getCurrentContent","hasText","getBlockMap","first","getType","onToggle","blockStyleFn","getBlockStyle","customStyleMap","styleMap","keyBindingFn","spellCheck","React","Component","CODE","fontFamily","block","StyleButton","preventDefault","active","onMouseDown","BLOCK_TYPES","BlockStyleControls","selection","getSelection","getBlockForKey","getStartKey","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","QuestionTemplate","setTitle","description","setDescription","sample","setSample","handleSampleChange","newSample","saveQuestionTemplate","template","convertToRaw","textAlign","input","output","explanation","getWindowDimensions","innerWidth","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","QuestionPreview","whiteSpace","QuestionCases","testCases","setTestCases","handleChange","newCases","saveCases","tcase","QuestionSettings","questionSettings","setQuestionSettings","date","setDate","handleDateChange","saveSettings","disabledDate","current","allowClear","checked","EditQuestion","params","questionDetails","EditorState","createWithContent","convertFromRaw","add","endOf","minSize","maxSize","defaultSize","split","Select","EditorNavbar","savedCodes","setSavedCodes","selectedCode","setSelectedCode","getEditorCode","setOutput","saveOpen","setSaveOpen","handleRun","code","language","JSON","parse","newSaved","setTimeout","onOk","CaretRightOutlined","SaveFilled","RenderSaved","setInput","handleNew","Math","floor","random","PlusCircleFilled","loadSavedCode","handleDelete","MyEditor","editorRef","useRef","centered","getValue","onMount","monaco","borderRight","CodePlayground","savedPlaygroundCodes","getItem","stringify","setQuestionDetails","handleSubmit","noOfCases","casesPassed","submittedAt","SendOutlined","CodeType","overlayLoading","setOverlayLoading","savedCode","widht","backendURL","FileType","setSrc","file","setFile","deleteSubmission","submissionId","handleSubmitFile","formData","FormData","append","config","headers","fetch","blob","URL","createObjectURL","download","click","fileType","filePath","listType","beforeUpload","maxCount","multiple","accept","fileList","UploadOutlined","controls","ViewQuestion","roomDetails","setRoomDetails","selected","setSelected","setLanguage","getUserCode","newSelected","options","ManageSelected","showTable","setShowTable","noOfTCases","tCasesPassed","handleSelected","paddingLeft","paddingBottom","CheckSubmissions","UserSettings","submitUsername","decoded","jwt_decode","isLogged","lastName","email","tabBarExtraContent","destroyInactiveTabPane","paddingRight","QuestionCircleOutlined","pattern","RegExp","Meta","Card","AboutUs","smooth","cover","alt","actions","AuthRouter","handleError","JWTtoken","token","currentTime","Date","now","exp","exact","path","pathname","VerifyEmail","countdown","setCountdown","result","setResult","statusColor","setStatusColor","otp","Signup","rePassword","warningOnly","offset","ChangePassword","showPasswordAndOTP","setShowPasswordAndOTP","requestOTP","changePassword","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","action","ReduxCombined","combineReducers","defaults","baseURL","common","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","StrictMode","maxSnack","anchorOrigin","vertical","horizontal","autoHideDuration","getElementById"],"mappings":"oTAMe,SAASA,IACpBC,SAASC,MAAQ,qBAEjB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAUC,cACRC,EAAoBC,cAApBD,gBAEFE,EAAQ,uCAAG,WAAMC,GAAN,SAAAC,EAAA,6DACbP,GAAW,GADE,SAEPQ,IACDC,KAAK,cAAe,CACjBC,SAAUJ,EAAOK,SACjBC,SAAUN,EAAOM,WAEpBC,MAAK,SAAAC,GAEFC,aAAaC,QAAQ,WAAYF,EAAIG,KAAKC,cAC1C,IACIC,OAAOC,SAASC,KAAOpB,EAAQmB,SAASE,MAAMC,KAChD,MAAOC,GACLL,OAAOC,SAASC,KAAO,QAG9BI,OAAM,SAAAC,GACH,IACIvB,EAAgBuB,EAAIC,SAASV,KAAKW,OAAQ,CACtCC,QAAS,UAEf,MAAOL,GACLrB,EAAgB,uBAAwB,CACpC0B,QAAS,cAvBZ,OA2Bb7B,GAAW,GA3BE,2CAAH,sDA2Cd,OACI,sBAAK8B,UAAU,kBAAf,UACI,qBACIC,IAAI,aACJC,MAAO,CAAEC,UAAW,SAAUC,MAAO,QAASC,UAAW,sCAE7D,qBAAKL,UAAU,mBAAf,mBAEA,eAAC,IAAD,CACIM,KAAK,QACLC,SAAU,CACNC,KAAM,IAEVC,WAAY,CACRD,KAAM,IAEVE,cAAe,CACXC,UAAU,GAEdpC,SAAUA,EACVqC,eAjCW,SAAAC,GAEnB,IACIxC,EAAgBwC,EAAUC,YAAY,GAAGC,OAAO,GAAI,CAChDhB,QAAS,UAEf,MAAOL,GACLrB,EAAgB,uBAAwB,CACpC0B,QAAS,YA0BTiB,aAAa,MACbhB,UAAU,aAdd,UAgBI,cAAC,IAAKiB,KAAN,CACIC,MAAO,uBAAOhB,MAAO,CAAEiB,MAAO,sBAAvB,8BACPb,KAAK,WACLc,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,uCANrB,SAUI,cAAC,IAAD,MAGJ,cAAC,IAAKL,KAAN,CACIC,MAAO,uBAAOhB,MAAO,CAAEiB,MAAO,sBAAvB,sBACPb,KAAK,WACLc,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,gCANrB,SAUI,cAAC,IAAMC,SAAP,MAEJ,8BACI,mBAAGhC,KAAK,mBAAR,kCAEJ,mBAAGA,KAAK,UAAR,kDAEA,cAAC,IAAK0B,KAAN,UACI,cAAC,IAAD,CACIO,SAAS,SACTvD,QAASA,EACTiC,MAAO,CACHuB,gBAAiB,iBAEjBC,SAAU,OACVC,OAAQ,OACRC,UAAW,QARnB,4B,qBC/GPC,EAAY,SAAAC,GACrB,MAAO,CACHC,KAAM,gBACNC,QAASF,IAIJG,EAAa,WAEtB,OADAhD,aAAaiD,WAAW,YACjB,CACHH,KAAM,c,4DCEDI,EAAa,SAAChD,GACvB,MAAO,CACH4C,KAAM,kBACNC,QAAS7C,IAkBJiD,EAAc,SAACjD,GACxB,MAAO,CACH4C,KAAM,mBACNC,QAAS7C,IAKJkD,EAAgB,SAAClD,GAC1B,MAAO,CACH4C,KAAM,qBACNC,QAAS7C,IChCF,SAASmD,IACpBxE,SAASC,MAAQ,oBAEjB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAsBF,mBAAS,IAA/B,mBAAOuE,EAAP,KAAYC,EAAZ,KAEQnE,EAAoBC,cAApBD,gBACFoE,EAAWC,cAEjBC,oBAAS,sBAAC,sBAAAlE,EAAA,6DACNgE,EAASJ,EAAc,KACvBnE,GAAW,GAFL,SAGAQ,IACDkE,IAAI,kBACJ7D,MAAK,SAAAC,GACFwD,EAAOxD,EAAIG,KAAKoD,QAEnB5C,OAAM,SAAAC,GACEA,EAAIC,SAImB,MAAxBD,EAAIC,SAASgD,OACbJ,EAASR,KAET5D,EAAgB,kDAAmD,CAAE0B,QAAS,UAN9E1B,EAAgB,mDAAoD,CAAE0B,QAAS,aAVrF,OAmBN7B,GAAW,GAnBL,2CAoBP,IAEH,IAAM4E,EAAiB,SAACC,GACpB,OAAGC,IAAOD,EAASE,SAASC,KAAKF,MAASG,SAAU,WAAa,EAEzD,qBAAKjD,MAAO,CAACiB,MAAO,eAAgBO,SAAU,QAA9C,2BAKLsB,IAAOD,EAASE,SAASC,KAAKF,MAASG,SAAU,SAAW,GAEvD,uBAAMjD,MAAO,CAAEwB,SAAU,OAAQ0B,QAAS,cAAejC,MAAO,sBAAhE,mBACW6B,IAAOD,EAASE,SAASE,OAAO,aAIhDH,IAAOD,EAASE,SAASC,KAAKF,MAASG,SAAU,SAAW,GAEvD,sBAAMjD,MAAO,CAAEwB,SAAU,OAAQ0B,QAAS,cAAejC,MAAO,sBAAhE,4BAKL6B,IAAOD,EAASE,SAASC,KAAKF,MAASG,SAAU,SAAW,GAEvD,sBAAMjD,MAAO,CAAEwB,SAAU,OAAQ0B,QAAS,cAAejC,MAAO,sBAAhE,yBAOA,8BAEI,cAAC,IAAD,CACIkC,WAAY,CAAClC,MAAO,qBAAsBO,SAAU,QACpD4B,MAAOP,EAASE,QAChB1E,SAAU,WACNc,OAAOC,SAASiE,UAEpBJ,OAAO,kCAQ3B,OAAOlF,EACH,sBAAK+B,UAAU,0BAAf,UACI,yDACA,qBAAKE,MAAO,CAAC0B,UAAW,OAAQ4B,SAAU,YAA1C,SACI,cAAC,IAAD,CAAkBC,KAAK,QAAQtC,MAAM,6BAI9B,IAAfoB,EAAImB,OACA,qBAAK1D,UAAU,wBAAwBE,MAAO,CAACyD,WAAY,QAA3D,iCAEA,qCACI,qBAAK3D,UAAU,wBAAwBE,MAAO,CAACyD,WAAY,QAA3D,2BACA,qBAAKzD,MAAO,CAAEwB,SAAU,OAAQP,MAAO,QAAvC,SACKoB,EAAIqB,KAAI,SAAAb,GAAQ,OACb,cAAC,IAAD,CAAMc,GAAI,iBAAmBd,EAASe,WAAtC,SACI,sBAAK9D,UAAU,oBAAf,UACI,qBAAKA,UAAU,qBAAf,SACI,qBAAKA,UAAU,sBAAf,SACI,+BAAO+C,EAAShF,YAIxB,gCACI,sBAAKiC,UAAU,4BAAf,UACI,sBACIE,MAAO,CACH6D,WAAY,OACZX,QAAS,cACTY,SAAU,OACVC,WAAY,UALpB,kBADJ,KAWOlB,EAASmB,YAEhB,qBAAKlE,UAAU,4BAA4BE,MAAO,CAAC6D,WAAY,OAA/D,SAEuB,SAAnBhB,EAASoB,MACL,qCACI,cAAC,IAAD,IACA,sBAAMjE,MAAO,CAAE6D,WAAY,OAAQX,QAAS,eAA5C,0BAKJ,qCACI,cAAC,IAAD,IACA,sBAAMlD,MAAO,CAAE6D,WAAY,OAAQX,QAAS,eAA5C,4BAOZ,qBAAKpD,UAAU,0BAAf,SACK8C,EAAeC,YA1CuB,uB,iICtGhE,SAASqB,IACpB,OACI,cAAC,IAAD,CAASlE,MAAO,CAACmE,OAAQ,SCgBjC,IAAQC,EAAYC,IAAZD,QAEO,SAASE,IACpB,MAAoCxG,oBAAS,GAA7C,mBAAOyG,EAAP,KAAmBC,EAAnB,KAEMC,EAAcC,aAAY,SAAApF,GAAK,OAAIA,EAAMmF,eACzCE,EAAmBD,aAAY,SAAApF,GAAK,OAAIA,EAAMqF,oBAC9CpC,EAAWC,cACXvE,EAAUC,cAaV0G,EAAW,SAACC,GACdL,GAAc,GACdvG,EAAQ6G,KAAKD,IAGjB,OACI,sBAAK7E,MAAO,CAAEkD,QAAS,OAAQ6B,WAAY,UAA3C,UACI,cAACC,EAAA,EAAD,CAAchF,MAAO,CAAEwB,SAAU,OAAQP,MAAO,sBAAwBgE,QAlB7D,WACfT,GAAc,MAmBV,cAAC,IAAD,CACI3G,MACI,sBAAKmC,MAAO,CAAEE,MAAO,OAAQgD,QAAS,cAAe6B,WAAY,UAAjE,UACI,cAAC,IAAD,CAAgB/E,MAAO,CAAEwB,SAAU,OAAQ0D,YAAa,UACxD,qBAAKlF,MAAO,CAAEwB,SAAU,QAAxB,SAAmCiD,EAAY9F,cAGvDwG,OACI,eAAC,IAAD,CAAMnF,MAAO,CAAGoF,WAAY,4BAA6BC,KAAK,WAAWC,MAAM,OAAOC,YAAY,EAAlG,UACI,cAACrB,EAAD,IAEA,cAAC,IAAKnD,KAAN,CAAmByE,KAAM,cAAC,IAAD,IAAzB,wBAAe,QAKvBC,UAAU,EACVC,UAAU,OACVC,UAAU,EACVC,QApCQ,WAChBpB,GAAc,IAoCNqB,QAAStB,EAETuB,UAAW,CACPvE,gBAAiB,2BACjBwE,QAAS,OAEbC,YAAa,CACTzE,gBAAiB,2BACjBE,OAAQ,OACRwE,aAAc,gCAElBC,YAAa,CACT3E,gBAAiB,2BACjB4E,UAAW,OACXJ,QAAS,OAGbK,oBAAqB,CAAC,QACtBC,gBAAiB,CAAC,QAtCtB,SAwCI,eAAC,IAAD,CAAMrG,MAAO,CAAGoF,WAAY,4BAA6BC,KAAK,WAAWC,MAAM,OAAOC,YAAY,EAAlG,UAEI,cAAC,IAAKxE,KAAN,CAAsBjB,UAAU,qBAAqB0F,KAAM,cAACc,EAAA,EAAD,IAAiBrB,QAAS,WAAOL,EAAS,MAArG,iBAAe,QAIf,cAACV,EAAD,IAEA,cAACE,EAAD,CAASoB,KAAM,cAACe,EAAA,EAAD,IAAkB1I,MAAM,iBAA4B2I,aAAc,WAAO5B,EAAS,oBAAjG,SAEQD,EAAiB8B,qBACb,cAAC,IAAK1F,KAAN,4BAE0C,IAA1C4D,EAAiB+B,cAAclD,OAC3B,cAAC,IAAKzC,KAAN,uBAEA4D,EAAiB+B,cAAchD,KAAI,SAAAiD,GAAI,OACnC,cAAC,IAAK5F,KAAN,CAA6BkE,QAAS,WAAOL,EAAS,mBAAD,OAAoB+B,EAAKC,UAA9E,SACKD,EAAK3C,UADM2C,EAAKC,YATmB,QAkB5D,cAAC1C,EAAD,IAEA,eAACE,EAAD,CAASoB,KAAM,cAACqB,EAAA,EAAD,IAAqBhJ,MAAM,WAAsB2I,aAAc,WAAO5B,EAAS,cAA9F,UAEQD,EAAiBmC,eACb,cAAC,IAAK/F,KAAN,4BAEoC,IAApC4D,EAAiBoC,QAAQvD,OACrB,cAAC,IAAKzC,KAAN,uBAEA4D,EAAiBoC,QAAQrD,KAAI,SAAAiD,GAAI,OAC7B,cAAC,IAAK5F,KAAN,CAA6BkE,QAAS,WAAOL,EAAS,aAAD,OAAc+B,EAAKC,UAAxE,SACKD,EAAK3C,UADM2C,EAAKC,WAQrC,cAAC1C,EAAD,IAEA,cAAC,IAAKnD,KAAN,CAAWyE,KAAM,cAACwB,EAAA,EAAD,IAAwB/B,QAAS,WAAML,EAAS,iCAAjE,0BAnBqD,QAyBzD,cAACV,EAAD,IAEA,cAAC,IAAKnD,KAAN,CAAWyE,KAAM,cAACyB,EAAA,EAAD,IAA6BhC,QAAS,WAAML,EAAS,UAAtE,4BAAuC,QAIvC,cAACV,EAAD,IAEA,cAAC,IAAKnD,KAAN,CAAWyE,KAAM,cAAC0B,EAAA,EAAD,IAAoCjC,QAAS,WAAML,EAAS,mBAA7E,qBAA0C,YAK1C,cAACV,EAAD,IAEA,cAAC,IAAKnD,KAAN,CAAWyE,KAAM,cAAC2B,EAAA,EAAD,IAAkClC,QAAS,WAAML,EAAS,WAA3E,kBAA2C,SAI3C,cAACV,EAAD,IAEA,cAAC,IAAKnD,KAAN,CAAWyE,KAAM,cAAC4B,EAAA,EAAD,IAAiCnC,QA/H7C,WACjB1C,EAASR,MA8HG,mBAAyC,UAIzC,cAACmC,EAAD,QAjGA,W,uBClEL,SAASmD,KACpB,IAAM1C,EAAmBD,aAAY,SAAApF,GAAK,OAAIA,EAAMqF,oBAEpD,OACI,sBAAK7E,UAAU,mBAAf,UACI,sBAAKE,MAAO,CAAEkD,QAAS,eAAvB,UACI,cAACoB,EAAD,IACA,eAAC,IAAD,CAAYtE,MAAO,CAACkD,QAAS,OAAQ6B,WAAY,SAAUlB,WAAY,OAAQrC,SAAU,QAAzF,UACI,cAAC,IAAWT,KAAZ,CAAiB1B,KAAK,GAAtB,SACI,cAAC,IAAD,CAAMsE,GAAG,IAAT,SAEI,sBAAM3D,MAAO,CAAC6D,WAAY,OAA1B,sBAKJc,EAAiB2C,WAAW5D,KAAI,SAAA6D,GAAI,OAChC,cAAC,IAAWxG,KAAZ,CAAiB1B,KAAK,GAAtB,SACI,cAAC,IAAD,CAAMsE,GAAI4D,EAAKC,IAAf,SACI,sBAAMxH,MAAO,CAAC6D,WAAY,OAA1B,SAAmC0D,EAAKnH,oBAShE,qBAAKJ,MAAO,CAAEkD,QAAS,OAAQ6B,WAAY,UAA3C,SACI,cAAC,KAAD,CAASlH,MAAM,0BAAf,SACI,qBAAKmC,MAAO,CAAEwB,SAAU,OAAQ2C,OAAQ,WAAYsD,UAAW,SAAUC,OAAQ,WAAjF,+B,wBC7BL,SAASC,GAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,cAQ3BjD,EAAmBD,aAAY,SAAApF,GAAK,OAAIA,EAAMqF,oBA0BpD,OAA2C,IAApCA,EAAiBoC,QAAQvD,OAC5B,cAAC,KAAD,CACI3F,MAAM,oBACNgK,MACI,cAAC,IAAD,CAAQhG,KAAK,UAAwBoD,QAAS2C,EAA9C,8BAA2B,aAMnC,qBAAK9H,UAAU,sBAAf,SACI,cAAC,KAAD,CAASgI,eA5CG,CAChBC,QAAS,EACT,KAAM,EACN,KAAM,EACN,KAAM,EACN,IAAK,GAuCqCjI,UAAU,kBAAkBkI,gBAAgB,yBAAlF,SACKrD,EAAiBoC,QAAQrD,KAAI,SAAAiD,GAAI,OAC9B,cAAC,IAAD,CAAMhD,GAAI,aAAegD,EAAKC,OAA9B,SACI,sBAAK9G,UAAU,oBAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAU,sBAAf,SAEI,+BAAO6G,EAAK3C,aAEhB,sBAAKlE,UAAU,4BAAf,UACI,cAAC,IAAD,IACA,sBAAME,MAAO,CAAE6D,WAAY,OAAQX,QAAS,cAAeY,SAAU,SAArE,sBAGC6C,EAAKsB,YAEV,sBAAKnI,UAAU,4BAAf,UACI,cAAC,IAAD,IACA,sBAAME,MAAO,CAAE6D,WAAY,OAAQX,QAAS,cAAeY,SAAU,SAArE,uBAGC6C,EAAKuB,gBAGd,qBAAKpI,UAAU,0BAAf,UA3DHqI,EA4DoBxB,EAAKwB,WA3DxB,WAAfA,EAEK,qBAAKrI,UAAU,8CAAf,oBAKe,YAAfqI,EAEA,qBAAKrI,UAAU,+CAAf,qBAKe,WAAfqI,EAEA,qBAAKrI,UAAU,8CAAf,yBAFH,SAsBkD6G,EAAKC,QArC5C,IAACuB,SCLV,SAASC,GAAT,GAAqC,IAAlBC,EAAiB,EAAjBA,eAC9BzK,SAASC,MAAQ,wBAEjB,MAA4CC,mBAAS,gCAArD,mBAAOwK,EAAP,KAAuBC,EAAvB,KAEM5D,EAAmBD,aAAY,SAAApF,GAAK,OAAIA,EAAMqF,oBAC9CF,EAAcC,aAAY,SAAApF,GAAK,OAAIA,EAAMmF,eACzClC,EAAWC,cACTrE,EAAoBC,cAApBD,gBACFF,EAAUC,cACVsK,EAAc,IAAIC,gBAAgBC,cAAcC,QAYtDlG,qBAAU,WATN4F,IACA9F,EAASJ,EAAe,CACpB,CACI,KAAQ,WACR,IAAO,gBAOZqG,EAAYI,IAAI,kBACfhB,MAEL,CAACY,EAAY9F,IAAI,mBAEpB,IAAMkF,EAAa,uCAAG,sBAAArJ,EAAA,6DAClBgK,EAAkB,yCAClBhG,EN1CG,CACHV,KAAM,4BMuCY,SAGZrD,IAAMC,KAAK,eAAgB,CAC7BuF,SAAUS,EAAYoE,UAAY,YAAclE,EAAiBoC,QAAQvD,OAAS,KAEjF3E,MAAK,SAAAC,GACFyD,EAASN,EAAWnD,EAAIG,KAAK8H,UAC7B9I,EAAQ6G,KAAK,aAAehG,EAAIG,KAAK6J,UAAY,yBAEpDrJ,OAAM,SAAAC,GACCA,EAAIC,UAImB,MAAxBD,EAAIC,SAASgD,OACZJ,EAASR,KAJT5D,EAAgB,0CAA2C,CAAC0B,QAAS,aAZ/D,OAsBlB0C,ENxDG,CACHV,KAAM,+BMiCY,2CAAH,qDA2BnB,OAAO8C,EAAiBmC,eACpB,sBAAKhH,UAAU,0BAAf,UACI,8BAAMwI,IACN,qBAAKtI,MAAO,CAAC0B,UAAW,OAAQ4B,SAAU,YAA1C,SACI,cAAC,IAAD,CAAkBC,KAAK,QAAQtC,MAAM,6BAI7C,sBAAKnB,UAAU,oBAAf,UAEI,sBAAKA,UAAU,iBAAf,UACI,8CACA,sBAAKA,UAAU,2BAA2BmF,QAAS2C,EAAnD,UACI,cAACZ,EAAA,EAAD,IACA,sBAAMhH,MAAO,CAAC6D,WAAY,OAA1B,gCAIR,cAAC,IAAD,IAEA,cAAC8D,GAAD,CAAaC,cAAeA,O,wEChFzB,SAASmB,GAAT,GAAuF,IAA/DC,EAA8D,EAA9DA,gBAAiBC,EAA6C,EAA7CA,mBAAoBC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YAClF,EAA8BrL,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0CF,mBAASoL,EAASE,eAAiB,IAA7E,mBAAOA,EAAP,KAAsBC,EAAtB,KAEQlL,EAAoBC,cAApBD,gBACFoE,EAAWC,cAOX8G,EAAU,uCAAG,WAAMC,GAAN,SAAAhL,EAAA,6DACfP,GAAW,GADI,SAETQ,IAAMC,KAAK,wBAAyB,CACtCmI,OAAQsC,EAAStC,OACjB5C,cAA+BwF,IAArBD,EAAQvF,SAAyBkF,EAASlF,SAAWuF,EAAQvF,SACvEmE,gBAAmCqB,IAAvBD,EAAQpB,WAA2Be,EAASf,WAAaoB,EAAQpB,WAC7EsB,wBAAmDD,IAA/BD,EAAQE,mBAAmCP,EAASO,mBAAqBF,EAAQE,mBACrGL,cAAeA,IAEdvK,MAAK,SAAAC,GAEFyD,EAASN,EAAWnD,EAAIG,KAAK8H,UAC7B,IAAI2C,EAAW,gBAAQR,GACvBQ,EAAY1F,SAAWlF,EAAIG,KAAKiK,SAASlF,SACzC0F,EAAYvB,WAAarJ,EAAIG,KAAKiK,SAASf,WAC3CuB,EAAYD,mBAAqB3K,EAAIG,KAAKiK,SAASO,mBACnDC,EAAYzB,SAAWnJ,EAAIG,KAAKiK,SAASjB,SACzCkB,EAAYO,GACZT,GAAmB,GACnB9K,EAAgB,mBAAoB,CAAE0B,QAAS,eAElDJ,OAAM,SAAAC,GAEHvB,EAAgB,gCAAiC,CAAE0B,QAAS,aAvBrD,OA0Bf7B,GAAW,GA1BI,2CAAH,sDAiDhB,OACI,cAAC,KAAD,CACIH,MAAO,qBAAKiC,UAAU,iBAAf,sBACP+F,QAASmD,EACTW,gBAAgB,EAChBC,SAzBa,WACjBX,GAAmB,IAyBfjJ,MAAO,CAAE6J,OAAQ,QACjB1E,OAAQ,KANZ,SAQI,eAAC,IAAD,CAAM2E,OAAO,aAAazL,SA/DjB,SAAAC,GACbyL,QAAQC,IAAI1L,GACZgL,EAAWhL,IA6DP,UACI,cAAC,IAAKyC,KAAN,CAAWX,KAAK,WAAWC,SAAU,CAAEC,KAAM,GAAKC,WAAY,CAAED,KAAM,IAAMU,MAAM,YAAYiJ,WAAW,QAAzG,SACI,cAAC,IAAD,CAAOC,aAAchB,EAASlF,aAElC,cAAC,IAAKjD,KAAN,CACIR,WAAY,CAAED,KAAM,IACpBD,SAAU,CAAEC,KAAM,GAClBU,MAAM,aACNZ,KAAK,aACL6J,WAAW,QALf,SAOI,eAAC,KAAD,CAAQC,aAAchB,EAASf,WAA/B,UAEI,cAAC,KAAOgC,OAAR,CAAe/G,MAAM,UAArB,qBACA,cAAC,KAAO+G,OAAR,CAAe/G,MAAM,SAArB,yBAGR,cAAC,IAAKrC,KAAN,CAAWR,WAAY,CAAED,KAAM,GAAKU,MAAM,eAAeZ,KAAK,qBAA9D,SACI,cAAC,KAAD,CAAQgK,eAAgBlB,EAASO,uBAGrC,cAAC,IAAD,IAEA,sBACIzJ,MAAO,CACHwB,SAAU,OACV0B,QAAS,cACT6B,WAAY,SACZsF,eAAgB,gBAChBnK,MAAO,OACPoK,aAAc,QAPtB,UAUI,gCACI,sBAAMtK,MAAO,CAAEkF,YAAa,QAA5B,4BACA,cAAC,KAAD,CAASrH,MAAM,0HAAf,SACI,cAAC,IAAD,SAGR,8BACI,cAAC,IAAD,CAAQoH,QAvDX,WACb,IAAMsE,EAAO,aAAOH,GACpBG,EAAQzE,KAAK,aACbuE,EAAiBE,IAoD0BgB,OAAQrB,EAASjB,SAAW,GAAKiB,EAASsB,iBAAmB,EAAxF,sBAMPtB,EAASjB,SAAW,GAAKiB,EAASsB,iBAAmB,EAClD,yBACA,sBAAMxK,MAAO,CAACiB,MAAO,gBAArB,yEAGsB,IAAzBmI,EAAc5F,OAAe,6CAAyB,6BAEtD4F,EAAc1F,KAAI,SAAC+G,EAAOC,GAAR,OACf,qBAAK1K,MAAO,CAAEmE,OAAQ,QAAtB,SACI,sBAAKnE,MAAO,CAAEkD,QAAS,eAAvB,UACI,cAAC,IAAD,CACIE,MAAOqH,EACPE,SAAU,SAAAC,IAnFX,SAACA,EAAGF,GAC3B,IAAMnB,EAAO,aAAOH,GACpBG,EAAQmB,GAASE,EAAEC,OAAOzH,MAC1BiG,EAAiBE,GAiFWuB,CAAmBF,EAAGF,IAE1BK,SAAU7B,EAASjB,SAAW,GAAKiB,EAASsB,iBAAmB,IAEnE,cAAC,IAAD,CACIvF,QAAS,YApFjB,SAAAyF,GAChB,IAAMnB,EAAUH,EAAc4B,QAAO,SAACP,EAAOQ,GAAR,OAAcP,IAAUO,KAC7D5B,EAAiBE,GAmFW2B,CAAYR,IAEhBS,QAAQ,EACRnL,MAAO,CAAE6D,WAAY,QACrB0G,OAAQrB,EAASjB,SAAW,GAAKiB,EAASsB,iBAAmB,EANjE,4BAcZ,cAAC,IAAD,IACA,cAAC,IAAD,CAAQlJ,SAAS,SAASO,KAAK,UAAUuJ,SAAUrN,EAAnD,SACKA,EAAU,cAAgB,wB,4CCjJhC,SAASsN,GAAT,GAAkE,IAAxCC,EAAuC,EAAvCA,eAAgBpD,EAAuB,EAAvBA,UAAWD,EAAY,EAAZA,SASxD9J,EAAoBC,cAApBD,gBACFoE,EAAWC,cAEX+I,EAAc,uCAAG,WAAOC,GAAP,SAAAjN,EAAA,sEACbC,IAAMC,KAAK,mBAAoB,CACjCmF,WAAY4H,IAEX3M,MAAK,SAAAC,GACFX,EAAgB,gCAAiC,CAAE0B,QAAS,SAC5DyL,OAEH7L,OAAM,SAAAC,GACH,IACI,GAA4B,MAAxBA,EAAIC,SAASgD,OAEb,YADAJ,EAASR,KAGb5D,EAAgBuB,EAAIC,SAASV,KAAKW,OAAQ,CAAEC,QAAS,UACvD,MAAOL,GACLrB,EAAgB,8CAA+C,CAAE0B,QAAS,cAhBnE,2CAAH,sDAsBd4L,EAAmB,SAAC5I,GAEtB,OAAIA,EAAS6I,UAOT5I,IAAOA,MAASG,UAAU0I,QAAQ7I,IAAOD,EAASE,UAE9C,qBAAKjD,UAAW,+CAAhB,sBAKL+C,EAAS6I,UAEJ,qBAAK5L,UAAW,8CAAhB,qBAOA,qBAAKA,UAAW,8CAAhB,oBArBA,qBAAKA,UAAW,8CAAhB,qBA6BZ,OAA4B,IAArBoI,EAAU1E,OACb,cAAC,KAAD,CAAQ3F,MAAM,+BAEd,mCACI,cAAC,KAAD,CAASiK,eAtEG,CAChBC,QAAS,EACT,KAAM,EACN,KAAM,EACN,KAAM,EACN,IAAK,GAiEqCjI,UAAU,kBAAkBkI,gBAAgB,yBAAlF,SACKE,EAAUxE,KAAI,SAAAb,GAAQ,OACnB,mCACI,sBAAK/C,UAAU,oBAAoBE,MAAO,CAAC0H,OAAQ,QAAnD,UACI,cAAC,KAAD,CACI7J,MACI,sFAEI,uBAFJ,+EAMJ+N,UAAW,WAAOL,EAAe1I,EAASe,aAC1CiI,OAAO,MACPC,WAAW,SACXC,kBAAmB,CACfC,SAAU,QACVzK,gBAAiB,2BACjB0K,OAAQ,gCAdhB,SAiBI,qBAAKjM,MAAO,CAAEsD,SAAU,WAAY4I,IAAK,KAAMC,MAAO,KAAM3K,SAAU,OAAQkG,OAAQ,WAAtF,SACI,cAAC,IAAD,QAIR,cAAC,KAAD,CAAS7J,MAAO,UAAYgF,EAAShB,KAArC,SACI,qBAAK7B,MAAO,CAAEsD,SAAU,WAAY4I,IAAK,KAAME,KAAM,KAAM5K,SAAU,OAAQkG,OAAQ,WAArF,SACuB,SAAlB7E,EAAShB,KAAkB,cAAC,IAAD,IAAiB,cAAC,IAAD,QAIrD,qBAAK/B,UAAU,qBAAf,SACI,qBAAKA,UAAU,sBAAf,SACI,+BAAO+C,EAAShF,YAGxB,sBAAKmC,MAAO,CAACkD,QAAS,cAAemH,eAAgB,gBAAiBnK,MAAO,OAAQ6F,QAAS,YAA9F,UACI,gCACI,sBAAKjG,UAAU,4BAAf,UACI,qBAAKA,UAAU,4BACf,sBAAME,MAAO,CAAE6D,WAAY,OAAQX,QAAS,cAAeY,SAAU,SAArE,uBAGCjB,EAASwJ,aAEd,sBAAKvM,UAAU,4BAAf,UACI,qBAAKA,UAAU,4BACf,sBAAME,MAAO,CAAE6D,WAAY,OAAQX,QAAS,cAAeY,SAAU,SAArE,uBACCmE,EAAWpF,EAASwJ,gBAG7B,cAAC,YAAD,CACIrM,MAAO,CAAEE,MAAO,QAChBoM,UAAW,GACXC,aAAc,EACdtN,KAAM,CACF,CACIpB,MAAO,cAAgBgF,EAASwJ,UAAY,IAC5CjJ,MAAOP,EAASwJ,UAChBpL,MAAO,kBAEX,CACIpD,MAAO,mBAAqBoK,EAAWpF,EAASwJ,WAAa,IAC7DjJ,MAAoB,IAAb6E,EAAiB,EAAKA,EAAWpF,EAASwJ,UACjDpL,MAAO,sBAKvB,qBAAKnB,UAAU,0BAA0BE,MAAO,CAACmE,OAAQ,YAAzD,SACKsH,EAAiB5I,KAEtB,gCACI,cAAC,IAAD,CAAM/C,UAAU,wBAAwB6D,GAAI,sBAAwBd,EAASe,WAA7E,kBAGA,cAAC,IAAD,CAAM9D,UAAU,wBAAwB6D,GAAI,oBAAsBd,EAASe,WAA3E,wC,iECxJjB,SAAS4I,GAAT,GAAmF,IAA3DtD,EAA0D,EAA1DA,SAAUC,EAAgD,EAAhDA,YAAasD,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,iBACnEC,EAAuB,SAAAC,GAAS,MAAK,CACvCC,eAAgB,gBAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,QAASC,EAA3C,EAA2CA,aAA3C,OACZ,sBAAKjN,MAAO,CAAE+F,QAAS,GAAvB,UACI,cAAC,IAAD,CACImH,IAAK,SAAAC,KAGLC,YAAW,iBAAYR,GACvBxJ,MAAO2J,EAAa,GACpBpC,SAAU,SAAAC,GAAC,OAAIkC,EAAgBlC,EAAEC,OAAOzH,MAAQ,CAACwH,EAAEC,OAAOzH,OAAS,KACnEiK,aAAc,kBAAMC,EAAaP,EAAcC,EAASJ,IACxD5M,MAAO,CAAEsK,aAAc,EAAGpH,QAAS,WAEvC,eAAC,KAAD,WACI,cAAC,IAAD,CACIrB,KAAK,UACLoD,QAAS,kBAAMqI,EAAaP,EAAcC,EAASJ,IACnDpH,KAAM,cAAC+H,GAAA,EAAD,IACNhK,KAAK,QACLvD,MAAO,CAAEE,MAAO,IALpB,oBASA,cAAC,IAAD,CAAQ+E,QAAS,kBAAMuI,EAAYP,IAAe1J,KAAK,QAAQvD,MAAO,CAAEE,MAAO,IAA/E,mBAGA,cAAC,IAAD,CACI2B,KAAK,OACL0B,KAAK,QACL0B,QAAS,WACL+H,EAAQ,CAAES,eAAe,IAEzBC,EAAcX,EAAa,IAC3BY,EAAkBf,IAP1B,2BAeZgB,WAAY,SAAAC,GAAQ,OAAI,cAACN,GAAA,EAAD,CAAgBvN,MAAO,CAAEiB,MAAO4M,EAAW,eAAYrE,MAC/EsE,SAAU,SAAC1K,EAAO2K,GAAR,OACNA,EAAOnB,GAAamB,EAAOnB,GAAWoB,WAAWC,cAAcC,SAAS9K,EAAM6K,eAAiB,IACnGE,8BAA+B,SAAAtI,KAI/BuI,OAAQ,SAAAC,GAAI,OACRC,IAAmB1B,EACf,cAAC,KAAD,CACI2B,eAAgB,CAAEhN,gBAAiB,UAAWwE,QAAS,GACvDyI,YAAa,CAACC,GACdC,YAAU,EACVC,gBAAiBN,EAAOA,EAAKL,WAAa,KAG9CK,KAGNf,EAAe,SAACP,EAAcC,EAASJ,GACzCI,IAEAU,EAAcX,EAAa,IAC3BY,EAAkBf,IAEhBY,EAAc,SAAAP,GAChBA,IACAS,EAAc,KAElB,EAAoC5P,mBAAS,IAA7C,mBAAO2Q,EAAP,KAAmBf,EAAnB,KACA,EAA4C5P,mBAAS,IAArD,mBAAOwQ,EAAP,KAAuBX,EAAvB,KAEA,EAA8B7P,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwCF,oBAAS,GAAjD,mBAAO8Q,EAAP,KAAqBC,EAArB,KAEQ1Q,EAAoBC,cAApBD,gBAERsE,oBAAS,sBAAC,sBAAAlE,EAAA,sEACAC,IAAMkE,IAAN,iCAAoCwG,EAAStC,SAC9C/H,MAAK,SAAAC,GACF4N,EAAiB5N,EAAIG,KAAK6P,YAE7BrP,OAAM,SAAAC,GACHvB,EAAgB,kDAAmD,CAAE0B,QAAS,aANhF,OAQN7B,GAAW,GARL,2CASP,IAEH,IAAM+Q,EAAY,uCAAG,WAAOC,EAAQC,GAAf,SAAA1Q,EAAA,6DACjBsQ,GAAgB,GADC,SAEXrQ,IAAMC,KAAK,sBAAuB,CACpCmI,OAAQsC,EAAStC,OACjBoI,OAAQA,IAEPnQ,MAAK,SAAAC,GACF4N,EAAiBD,EAAczB,QAAO,SAAA/L,GAAI,OAAIA,EAAKgQ,UAAYA,MAC/D,IAAIvF,EAAW,gBAAQR,GACvBQ,EAAYzB,UAAY,EACxBkB,EAAYO,MAEfjK,OAAM,SAAAC,GACH,IACIvB,EAAgBuB,EAAIC,SAASV,KAAKW,OAAQ,CAAEC,QAAS,UACvD,MAAOL,GACLrB,EAAgB,wBAAyB,CAAE0B,QAAS,cAhB/C,OAmBjBgP,GAAgB,GAnBC,2CAAH,wDAsBZK,EAAU,CAAC,cAETrR,MAAO,WACP+O,UAAW,WACXuC,IAAK,YACFxC,EAAqB,aALhB,cAUR9O,MAAO,OACP+O,UAAW,OACXuC,IAAK,QACFxC,EAAqB,SAbhB,cAkBR9O,MAAO,QACP+O,UAAW,QACXuC,IAAK,SACFxC,EAAqB,UAI5B,CACI9O,MAAO,gBACPuR,SAAUlG,EAASE,cAAc1F,KAAI,SAAC+G,EAAOC,GACzC,MAAM,CACF7M,MAAO4M,EAEP0E,IAAK1E,EACL2D,OAAQ,SAAAiB,GAAG,OAAKA,EAAIjG,cAAcsB,QAG1CH,OAA0C,IAAlCrB,EAASE,cAAc5F,QAEnC,CACI3F,MAAO,SACPsR,IAAK,SACLjP,MAAO,QACPkO,OAAQ,SAAAiB,GAAG,OACP,cAAC,KAAD,CACIxR,MACI,wEACqCwR,EAAIjP,KADzC,QAIJwL,UAAW,WAAOmD,EAAaM,EAAIL,OAAQK,EAAIJ,UAC/CpD,OAAO,MACPC,WAAW,SACXC,kBAAmB,CACfC,SAAU,QACVzK,gBAAiB,2BACjB0K,OAAQ,gCAZhB,SAeI,cAAC,IAAD,CAAQd,QAAQ,EAAhB,yBAIdH,QAAO,SAAAsE,GAAI,OAAKA,EAAK/E,UAEvB,OAAOxM,EACH,sBAAKiC,MAAO,CAAEsD,SAAU,WAAY7B,OAAQ,QAASD,SAAU,QAA/D,UACI,sBAAMxB,MAAO,CAAEsK,aAAc,SAA7B,yBACA,+BACI,cAAC,qBAAD,CAAmBrJ,MAAM,sBAAsBsC,KAAK,eAI5D,8BACI,cAAC,KAAD,CACIxF,QAAS6Q,EACTM,QAASA,EACTK,WAAY9C,EACZlJ,KAAK,QACLiM,YAAY,MC7Lb,SAASC,GAAT,GAAiH,IAA1FvG,EAAyF,EAAzFA,SAAUC,EAA+E,EAA/EA,YAAauG,EAAkE,EAAlEA,aAAcC,EAAoD,EAApDA,gBAAiBlD,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,iBACjGC,EAAuB,SAAAC,GAAS,MAAK,CACvCC,eAAgB,gBAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,QAASC,EAA3C,EAA2CA,aAA3C,OACZ,sBAAKjN,MAAO,CAAE+F,QAAS,GAAvB,UACI,cAAC,IAAD,CACImH,IAAK,SAAAC,KAGLC,YAAW,iBAAYR,GACvBxJ,MAAO2J,EAAa,GACpBpC,SAAU,SAAAC,GAAC,OAAIkC,EAAgBlC,EAAEC,OAAOzH,MAAQ,CAACwH,EAAEC,OAAOzH,OAAS,KACnEiK,aAAc,kBAAMC,EAAaP,EAAcC,EAASJ,IACxD5M,MAAO,CAAEsK,aAAc,EAAGpH,QAAS,WAEvC,eAAC,KAAD,WACI,cAAC,IAAD,CACIrB,KAAK,UACLoD,QAAS,kBAAMqI,EAAaP,EAAcC,EAASJ,IACnDpH,KAAM,cAAC+H,GAAA,EAAD,IACNhK,KAAK,QACLvD,MAAO,CAAEE,MAAO,IALpB,oBASA,cAAC,IAAD,CAAQ+E,QAAS,kBAAMuI,EAAYP,IAAe1J,KAAK,QAAQvD,MAAO,CAAEE,MAAO,IAA/E,mBAGA,cAAC,IAAD,CACI2B,KAAK,OACL0B,KAAK,QACL0B,QAAS,WACL+H,EAAQ,CAAES,eAAe,IAEzBC,EAAcX,EAAa,IAC3BY,EAAkBf,IAP1B,2BAeZgB,WAAY,SAAAC,GAAQ,OAAI,cAACN,GAAA,EAAD,CAAgBvN,MAAO,CAAEiB,MAAO4M,EAAW,eAAYrE,MAC/EsE,SAAU,SAAC1K,EAAO2K,GAAR,OACNA,EAAOnB,GAAamB,EAAOnB,GAAWoB,WAAWC,cAAcC,SAAS9K,EAAM6K,eAAiB,IACnGE,8BAA+B,SAAAtI,KAI/BuI,OAAQ,SAAAC,GAAI,OACRC,IAAmB1B,EACf,cAAC,KAAD,CACI2B,eAAgB,CAAEhN,gBAAiB,UAAWwE,QAAS,GACvDyI,YAAa,CAACC,GACdC,YAAU,EACVC,gBAAiBN,EAAOA,EAAKL,WAAa,KAG9CK,KAGNf,EAAe,SAACP,EAAcC,EAASJ,GACzCI,IAEAU,EAAcX,EAAa,IAC3BY,EAAkBf,IAEhBY,EAAc,SAAAP,GAChBA,IACAS,EAAc,KAElB,EAAoC5P,mBAAS,IAA7C,mBAAO2Q,EAAP,KAAmBf,EAAnB,KACA,EAA4C5P,mBAAS,IAArD,mBAAOwQ,EAAP,KAAuBX,EAAvB,KAEA,EAA8B7P,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwCF,oBAAS,GAAjD,mBAAO8Q,EAAP,KAAqBC,EAArB,KAEQ1Q,EAAoBC,cAApBD,gBAERsE,oBAAS,sBAAC,sBAAAlE,EAAA,sEACAC,IAAMkE,IAAN,gCAAmCwG,EAAStC,SAC7C/H,MAAK,SAAAC,GACF6Q,EAAgB7Q,EAAIG,KAAK6P,SACzB9Q,GAAW,MAEdyB,OAAM,SAAAC,GACHvB,EAAgB,kDAAmD,CAAE0B,QAAS,aAPhF,2CASP,IAEH,IAAMkP,EAAY,uCAAG,WAAOC,EAAQC,GAAf,SAAA1Q,EAAA,6DAEjBsQ,GAAgB,GAFC,SAGXrQ,IAAMC,KAAK,sBAAuB,CAChCmI,OAAQsC,EAAStC,OACjBoI,OAAQA,IAEXnQ,MAAK,SAAAC,GACF6Q,EAAgBD,EAAa1E,QAAO,SAAA/L,GAAI,OAAIA,EAAKgQ,UAAYA,MAC7D,IAAIvF,EAAW,gBAAQR,GACvBQ,EAAYc,kBAAoB,EAChCrB,EAAYO,MAEfjK,OAAM,SAAAC,GACH,IACIvB,EAAgBuB,EAAIC,SAASV,KAAKW,OAAQ,CAAEC,QAAS,UACvD,MAAOL,GACLrB,EAAgB,wBAAyB,CAAE0B,QAAS,cAjB/C,OAoBjBgP,GAAgB,GApBC,2CAAH,wDAuBZe,EAAY,uCAAG,WAAOZ,EAAQC,GAAf,SAAA1Q,EAAA,6DAEjBsQ,GAAgB,GAFC,SAGXrQ,IAAMC,KAAK,sBAAuB,CACpCmI,OAAQsC,EAAStC,OACjBoI,OAAQA,IAEPnQ,MAAK,SAAAC,GACF4N,EAAiB,GAAD,oBAAKD,GAAL,CAAqBiD,EAAa1E,QAAO,SAAA/L,GAAI,OAAIA,EAAKgQ,UAAYA,KAAU,MAC5FU,EAAgBD,EAAa1E,QAAO,SAAA/L,GAAI,OAAIA,EAAKgQ,UAAYA,MAC7D,IAAIvF,EAAW,gBAAQR,GACvBQ,EAAYzB,UAAY,EACxByB,EAAYc,kBAAoB,EAChCrB,EAAYO,MAGfjK,OAAM,SAAAC,GAEH,IACIvB,EAAgBuB,EAAIC,SAASV,KAAKW,OAAQ,CAAEC,QAAS,UACvD,MAAOL,GACLrB,EAAgB,wBAAyB,CAAE0B,QAAS,cArB/C,OAwBjBgP,GAAgB,GAxBC,2CAAH,wDA2BZK,EAAU,CAAC,cAETrR,MAAO,WACP+O,UAAW,WACXuC,IAAK,YACFxC,EAAqB,aALhB,cAUR9O,MAAO,OACP+O,UAAW,OACXuC,IAAK,QACFxC,EAAqB,SAbhB,cAkBR9O,MAAO,QACP+O,UAAW,QACXuC,IAAK,SACFxC,EAAqB,UAI5B,CACI9O,MAAO,gBACPuR,SAAUlG,EAASE,cAAc1F,KAAI,SAAC+G,EAAOC,GACzC,MAAM,CACF7M,MAAO4M,EAEP0E,IAAK1E,EAEL2D,OAAQ,SAAAiB,GAAG,OAAKA,EAAIjG,cAAcsB,QAI1CH,OAA0C,IAAlCrB,EAASE,cAAc5F,QAEnC,CACI3F,MAAO,UACPsR,IAAK,UACLjP,MAAO,QACPkO,OAAQ,SAAAiB,GAAG,OACP,qCACI,cAAC,IAAD,CAAQpK,QAAS,WAAO2K,EAAaP,EAAIL,OAAQK,EAAIJ,UAAYjP,MAAO,CAACkF,YAAa,QAAtF,oBAGA,cAAC,KAAD,CACIrH,MACI,wEACqCwR,EAAIjP,KADzC,QAIJwL,UAAW,WAAOmD,EAAaM,EAAIL,OAAQK,EAAIJ,UAC/CpD,OAAO,MACPC,WAAW,SACXC,kBAAmB,CACfC,SAAU,QACVzK,gBAAiB,2BACjB0K,OAAQ,gCAZhB,SAeI,cAAC,IAAD,CAAQd,QAAQ,EAAhB,4BAKlBH,QAAO,SAAAsE,GAAI,OAAKA,EAAK/E,UAEvB,OAAOxM,EACH,sBAAKiC,MAAO,CAAEsD,SAAU,WAAY7B,OAAQ,QAASD,SAAU,QAA/D,UACI,sBAAMxB,MAAO,CAAEsK,aAAc,SAA7B,yBACA,+BACI,cAAC,qBAAD,CAAmBrJ,MAAM,sBAAsBsC,KAAK,eAI5D,8BACI,cAAC,KAAD,CACIxF,QAAS6Q,EACTM,QAASA,EACTK,WAAYG,EACZnM,KAAK,QACLiM,YAAY,MCpN5B,IAAQK,GAAYC,KAAZD,QAGO,SAASE,GAAT,GAAoC,IAAlB1H,EAAiB,EAAjBA,eAC7BzK,SAASC,MAAQ,uBAEjB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4CF,mBAAS,qBAArD,mBAAOwK,EAAP,KAAuBC,EAAvB,KACA,EAA8CzK,oBAAS,GAAvD,mBAAOkL,EAAP,KAAwBC,EAAxB,KACA,EAAkCnL,mBAAS,IAA3C,mBAAOoK,EAAP,KAAkB8H,EAAlB,KACA,EAAgClS,mBAAS,IAAzC,mBAAOoL,EAAP,KAAiBC,EAAjB,KACA,EAA0CrL,mBAAS,IAAnD,mBAAO2O,EAAP,KAAsBC,EAAtB,KACA,EAAwC5O,mBAAS,IAAjD,mBAAO4R,EAAP,KAAqBC,EAArB,KAEMnE,EAAOyE,cAAPzE,GACErN,EAAoBC,cAApBD,gBACFoE,EAAWC,cACXvE,EAAUC,cACVsK,EAAc,IAAIC,gBAAgBC,cAAcC,QAMhD2C,EAAc,uCAAG,sBAAA/M,EAAA,6DACnBP,GAAW,GADQ,SAGbQ,IAAMkE,IAAI,aAAe8I,GAC1B3M,MAAK,SAACC,GAEHqK,EAAYrK,EAAIG,KAAKiK,UACrB8G,EAAalR,EAAIG,KAAKiJ,cAEzBzI,OAAM,SAACC,GACCA,EAAIC,SAE0B,MAAxBD,EAAIC,SAASgD,OACpBJ,EAASR,MAET5D,EAAgBuB,EAAIC,SAASV,KAAKW,OAAQ,CAAEC,QAAS,UACrD5B,EAAQiS,QAAQ,cALhB/R,EAAgB,+CAAgD,CAAE0B,QAAS,aAXpE,OAmBf2I,EAAYI,IAAI,iBAChBK,GAAmB,GAEvBjL,GAAW,GAtBQ,2CAAH,qDAyBpByE,qBAAU,WACN6I,MACD,CAACE,IAGJ/I,qBAAU,WACNF,EAASJ,EAAe,CACpB,CACI,KAAQ,WACR,IAAO,aAEX,CACI,KAAQ+G,EAASlF,SACjB,IAAO,aAAekF,EAAStC,aAGxC,CAACsC,EAAStC,SAGb,IAAMuJ,GAAiB,uCAAG,WAAMtO,GAAN,SAAAtD,EAAA,6DACtBgK,EAAkB,0CAClBvK,GAAW,GAFW,SAIhBQ,IAAMC,KAAK,mBAAoB,CACjCmI,OAAQ4E,EACR3J,KAAMA,IAELhD,MAAK,SAAAC,GACFb,EAAQ6G,KAAK,sBAAwBhG,EAAIG,KAAKmR,kBAEjD3Q,OAAM,SAAAC,GACH,IACI,GAA2B,MAAxBA,EAAIC,SAASgD,OAEZ,YADAJ,EAASR,KAGb5D,EAAgBuB,EAAIC,SAASV,KAAKW,OAAQ,CAACC,QAAS,UACtD,MAAOL,GACLrB,EAAgB,iDAAkD,CAAC0B,QAAS,cAnBlE,OAsBtB7B,GAAW,GAtBW,2CAAH,sDA2CjBqS,GAAU,uCAAG,sBAAA9R,EAAA,6DACfgK,EAAkB,sBAClBvK,GAAW,GAFI,SAGTQ,IAAMC,KAAK,eAAgB,CAC7BmI,OAAQ4E,IAEP3M,MAAK,WACEV,EAAgB,4BAA6B,CAAE0B,QAAS,SACxDwI,IACApK,EAAQiS,QAAQ,gBAEvBzQ,OAAM,SAACC,GACJ,IACI,GAA4B,MAAxBA,EAAIC,SAASgD,OAEb,YADAJ,EAASR,KAGb5D,EAAgBuB,EAAIC,SAASV,KAAKW,OAAQ,CAAEC,QAAS,UACvD,MAAOL,GACLrB,EAAgB,8CAA+C,CAAE0B,QAAS,cAnBvE,OAsBf7B,GAAW,GAtBI,2CAAH,qDA4BhB,OAAOD,EACH,sBAAK+B,UAAU,0BAAf,UACI,8BAAMwI,IACN,qBAAKtI,MAAO,CAAC0B,UAAW,OAAQ4B,SAAU,YAA1C,SACI,cAAC,IAAD,CAAkBC,KAAK,QAAQtC,MAAM,6BAI7C,sBAAKnB,UAAU,oBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,sBAAME,MAAO,CAACiG,aAAc,cAA5B,SACKiD,EAASlF,WAEd,sBAAKhE,MAAO,CAAEkD,QAAS,eAAvB,UACI,qBAAKpD,UAAU,2BAA2BE,MAAO,CAAE6D,WAAY,QAAUoB,QA5DjE,WACpB,IAAIqL,EAASnR,OAAOC,SAASmR,OAAS,qBAAuBrH,EAAStC,OAElE4J,EAAO5S,SAAS6S,cAAc,YAC9BC,EAAU9S,SAAS+S,eAAeL,GACtCE,EAAKI,YAAYF,GAEjB9S,SAASiT,KAAKD,YAAYJ,GAC1BA,EAAKM,SACLlT,SAASmT,YAAY,QACrBnT,SAASiT,KAAKG,YAAYR,GAG1BrS,EADc,4BACW,CACrB0B,QAAS,aA8CD,SACI,cAAC,KAAD,CAAShC,MAAM,oBAAf,SACI,cAACoT,GAAA,EAAD,QAIR,cAAC,KAAD,CACIC,QACI,eAAC,IAAD,CAAMlR,MAAO,CAACoF,WAAY,8BAA1B,UACI,cAAC,IAAKrE,KAAN,CACIyE,KAAM,cAAC,IAAD,CAAYxF,MAAO,CAACwB,SAAU,UACpCxB,MAAO,CAACwB,SAAU,QAClByD,QAAS,WAAOkL,GAAkB,SAHtC,gCAOA,cAACjM,EAAD,IACA,cAAC,IAAKnD,KAAN,CACIyE,KAAM,cAAC,IAAD,CAAexF,MAAO,CAACwB,SAAU,UACvCxB,MAAO,CAACwB,SAAU,QAClByD,QAAS,WAAOkL,GAAkB,SAHtC,mCASRzK,UAAU,eApBd,SAsBI,sBAAK5F,UAAU,2BAA2BE,MAAO,CAAE6D,WAAY,QAA/D,UACI,cAACmD,EAAA,EAAD,IACA,sBAAMhH,MAAO,CAAE6D,WAAY,OAA3B,oCAKR,sBAAK/D,UAAU,2BAA2BE,MAAO,CAAE6D,WAAY,QAAUoB,QAxKpE,WACjBgE,GAAmB,IAuKP,UACI,cAAC/B,EAAA,EAAD,IACA,sBAAMlH,MAAO,CAAE6D,WAAY,OAA3B,2BAEJ,cAAC,KAAD,CACIhG,MACI,kFAC8C,uBAD9C,4EAKJ+N,UAAWyE,GACXxE,OAAO,MACPC,WAAW,SACXC,kBAAmB,CAACC,SAAU,QAASzK,gBAAiB,2BAA4B0K,OAAQ,gCAVhG,SAYI,qBAAKnM,UAAU,2BAA2BE,MAAO,CAAE6D,WAAY,QAA/D,SACI,cAAC,IAAD,QAGR,cAACkF,GAAD,CACIC,gBAAiBA,EACjBC,mBAAoBA,EACpBC,SAAUA,EACVC,YAAaA,UAOzB,eAAC,KAAD,CAAMgI,iBAAkB3I,EAAY9F,IAAI,QAAU,YAAlD,UACI,cAACmN,GAAD,CACIuB,IACI,sBAAKtR,UAAU,4BAA4BE,MAAO,CAACwB,SAAU,QAA7D,UACI,cAAC,IAAD,IACA,sBAAMxB,MAAO,CAAEmE,OAAQ,UAAWjB,QAAS,eAA3C,uBAFJ,IAKMgF,EAAU1E,OALhB,OAFR,SAYI,cAAC6H,GAAD,CACIC,eAAgBA,EAChBpD,UAAWA,EACXD,SAAUiB,EAASjB,YALnB,aAQR,cAAC4H,GAAD,CACIuB,IACI,sBAAKtR,UAAU,4BAA4BE,MAAO,CAACwB,SAAU,OAAQuE,QAAS,MAAO5B,OAAQ,OAA7F,UACI,cAAC,IAAD,IAEA,sBAAMnE,MAAO,CAAEmE,OAAQ,UAAWjB,QAAS,eAA3C,qBAHJ,IAMMgG,EAASjB,SANf,OAFR,SAaI,cAACuE,GAAD,CACItD,SAAUA,EACVC,YAAaA,EACbsD,cAAeA,EACfC,iBAAkBA,KANlB,WAUJxD,EAASO,mBACL,cAACoG,GAAD,CACIuB,IACI,sBAAKtR,UAAU,4BAA4BE,MAAO,CAACwB,SAAU,QAA7D,UACI,cAAC,KAAD,IACA,sBAAMxB,MAAO,CAAEmE,OAAQ,UAAWjB,QAAS,eAA3C,0BAFJ,IAKMgG,EAASsB,iBALf,OAFR,SAYI,cAACiF,GAAD,CACIvG,SAAUA,EACVC,YAAaA,EACbuG,aAAcA,EACdC,gBAAiBA,EACjBlD,cAAeA,EACfC,iBAAkBA,KARlB,eAWR,mCCrST,SAAS2E,KACpB,IAOM1M,EAAmBD,aAAY,SAAApF,GAAK,OAAIA,EAAMqF,oBAGpD,OAAiD,IAA1CA,EAAiB+B,cAAclD,OAClC,cAAC,KAAD,CACI3F,MAAM,uBAGV,qBAAKiC,UAAU,sBAAf,SACI,cAAC,KAAD,CAASgI,eAhBG,CAChBC,QAAS,EACT,KAAM,EACN,KAAM,EACN,KAAM,EACN,IAAK,GAWqCjI,UAAU,kBAAkBkI,gBAAgB,yBAAlF,SACKrD,EAAiB+B,cAAchD,KAAI,SAAAiD,GAAI,OACpC,cAAC,IAAD,CAAMhD,GAAI,mBAAqBgD,EAAKC,OAApC,SACI,qBAAK9G,UAAU,oBAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAU,sBAAf,SAEI,+BAAO6G,EAAK3C,aAEhB,sBAAKlE,UAAU,4BAAf,UACI,cAAC,IAAD,IACA,sBAAME,MAAO,CAAE6D,WAAY,OAAQX,QAAS,cAAeY,SAAU,SAArE,uBAGC6C,EAAKuB,aAEV,sBAAKpI,UAAU,4BAAf,UACI,cAAC,KAAD,IACA,sBAAME,MAAO,CAAE6D,WAAY,OAAQX,QAAS,cAAeY,SAAU,SAArE,uBAGC6C,EAAK0F,mBAnB2B1F,EAAKC,eCpB3D,SAAS0K,GAAT,GAA8C,IAAxBC,EAAuB,EAAvBA,qBACjC3T,SAASC,MAAQ,8BAEjB,IAAM8G,EAAmBD,aAAY,SAAApF,GAAK,OAAIA,EAAMqF,oBAC9CpC,EAAWC,cAajB,OAXAC,qBAAU,WACN8O,IACAhP,EAASJ,EAAe,CACpB,CACI,KAAQ,iBACR,IAAO,wBAGhB,IAGIwC,EAAiBmC,eACpB,sBAAKhH,UAAU,0BAAf,UACI,+DACA,qBAAKE,MAAO,CAAC0B,UAAW,OAAQ4B,SAAU,YAA1C,SACI,cAAC,IAAD,CAAkBC,KAAK,QAAQtC,MAAM,6BAI7C,sBAAKnB,UAAU,oBAAf,UAEI,qBAAKA,UAAU,iBAAf,SACI,oDAGJ,cAAC,IAAD,IAEA,cAACuR,GAAD,O,yBC9BG,SAASG,KACpB5T,SAASC,MAAQ,yBAEjB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0CF,mBAAS,IAAnD,mBAAOsL,EAAP,KAAsBC,EAAtB,KACA,EAAsCvL,mBAAS,IAA/C,mBAAO2T,EAAP,KAAoBC,EAApB,KAEMlJ,EAAc,IAAIC,gBAAgBC,cAAcC,QAC9CxK,EAAoBC,cAApBD,gBACFF,EAAUC,cACVqE,EAAWC,cAEXmP,EAAY,WAEd,GADA3T,GAAW,IACPwK,EAAYI,IAAI,UAGhB,OAFAzK,EAAgB,eAAgB,CAAC0B,QAAS,eAC1C5B,EAAQiS,QAAQ,mBAGpB1R,IAAMC,KAAK,aAAc,CACrBmI,OAAQ4B,EAAY9F,IAAI,UACxB0G,cAAeqI,IAEd5S,MAAK,SAAAC,GACF,GAAGA,EAAIG,KAAKmK,cAAc,CACtBC,EAAiBvK,EAAIG,KAAKmK,eAE1B,IADA,IAAInK,EAAO,GACHgM,EAAI,EAAGA,EAAInM,EAAIG,KAAKmK,cAAc5F,OAAQyH,IAC9ChM,EAAK6F,KAAK,IAId,OAFA4M,EAAezS,QACfjB,GAAW,GAIZc,EAAIG,KAAKwK,mBACRtL,EAAgB,mCAAD,OAAoCW,EAAIG,KAAK+E,SAA7C,KAA0D,CAACnE,QAAS,SAGnF1B,EAAgB,iBAAD,OAAkBW,EAAIG,KAAK+E,SAA3B,kBAAqD,CAACnE,QAAS,YAElF0C,EAASL,EAAYpD,EAAIG,KAAKyH,gBAC9BzI,EAAQiS,QAAQ,sBAEnBzQ,OAAM,SAAAC,GACH,IAEI,IAAIA,EAAIC,SAGJ,OAFA1B,EAAQiS,QAAQ,wBAChB/R,EAAgB,yCAA0C,CAAC0B,QAAS,YAGxE,GAA2B,MAAxBH,EAAIC,SAASgD,OAGZ,OAFAxE,EAAgB,sBAAuB,CAAC0B,QAAS,cACjD0C,EAASR,KAIb5D,EAAgBuB,EAAIC,SAASV,KAAKW,OAAQ,CAACC,QAAS,YACpD5B,EAAQiS,QAAQ,mBAClB,MAAO1Q,GACLrB,EAAgB,yCAA0C,CAAC0B,QAAS,YACpE5B,EAAQiS,QAAQ,uBAG5BlS,GAAW,IAGfyE,oBAAS,sBAAC,sBAAAlE,EAAA,sDACNoT,IADM,2CAEP,IASH,OAAO5T,EACH,sBAAK+B,UAAU,wBAAf,UACI,qBAAKA,UAAU,0BAAf,8BAGA,qBAAKE,MAAO,CAAC0B,UAAW,OAAQ4B,SAAU,YAA1C,SACI,cAAC,KAAD,CAAoBrC,MAAM,6BAIlCmI,EAAc5F,OAAS,EACnB,sBAAK1D,UAAU,wBAAf,UACI,qBAAKA,UAAU,0BAAf,2CAGA,8BAEQsJ,EAAc1F,KAAI,SAACtD,EAAMsK,GAAP,OACd,8BACI,sBAAK1K,MAAO,CAAEkD,QAAS,cAAeiB,OAAQ,OAAQY,WAAY,UAAlE,UACI,uBAAM/E,MAAO,CAAC8D,SAAU,SAAxB,UAAmC1D,EAAnC,SACA,cAAC,IAAD,CAAOgD,MAAOqO,EAAY/G,GAAQC,SAAU,SAACC,IA5BlD,SAACA,EAAGF,GAC3B,IAAMnB,EAAO,aAAOkI,GACpBlI,EAAQmB,GAASE,EAAEC,OAAOzH,MAC1BsO,EAAenI,GAyBiEuB,CAAmBF,EAAGF,gBAM9F,cAAC,IAAD,CAAQpJ,SAAS,SAASO,KAAK,UAAUoD,QAAS,WAAO0M,KAAzD,uBAIH,6B,wBC9GLC,GAAcC,KAAdD,UAEO,SAASvG,GAAT,GAAyC,IAAdnD,EAAa,EAAbA,UAShCtF,EAAiB,SAACC,GACpB,OAAGA,EAASiP,YAEJ,sBAAK9R,MAAO,CAACwB,SAAU,OAAQP,MAAO,kBAAtC,gBACQ6B,IAAOD,EAASkP,gBAAgB9O,OAAO,qBAIpDH,IAAOD,EAASE,SAASC,KAAKF,MAASG,SAAU,WAAa,EAEzD,qBAAKjD,MAAO,CAACiB,MAAO,eAAgBO,SAAU,QAA9C,2BAKLsB,IAAOD,EAASE,SAASC,KAAKF,MAASG,SAAU,SAAW,GAEvD,uBAAMjD,MAAO,CAAEwB,SAAU,OAAQ0B,QAAS,cAAejC,MAAO,sBAAhE,mBACW6B,IAAOD,EAASE,SAASE,OAAO,aAIhDH,IAAOD,EAASE,SAASC,KAAKF,MAASG,SAAU,SAAW,GAEvD,sBAAMjD,MAAO,CAAEwB,SAAU,OAAQ0B,QAAS,cAAejC,MAAO,sBAAhE,4BAKL6B,IAAOD,EAASE,SAASC,KAAKF,MAASG,SAAU,SAAW,GAEvD,sBAAMjD,MAAO,CAAEwB,SAAU,OAAQ0B,QAAS,cAAejC,MAAO,sBAAhE,yBAOA,8BAEI,cAAC,GAAD,CACIkC,WAAY,CAAClC,MAAO,qBAAsBO,SAAU,QACpD4B,MAAOP,EAASE,QAChB1E,SAAU,WACNc,OAAOC,SAASiE,UAEpBJ,OAAO,kCAO3B,OAA4B,IAArBiF,EAAU1E,OACb,cAAC,KAAD,CACI3F,MAAM,6BACNgK,MACI,cAAC,IAAD,CAAQhG,KAAK,UAAb,uCAA2B,aAMnC,cAAC,KAAD,CAASiG,eAvEO,CAChBC,QAAS,EACT,KAAM,EACN,KAAM,EACN,KAAM,EACN,IAAK,GAkEiCjI,UAAU,kBAAkBkI,gBAAgB,yBAAlF,SACKE,EAAUxE,KAAI,SAAAb,GAAQ,OACnB,cAAC,IAAD,CAAMc,GAAI,iBAAmBd,EAASe,WAAtC,SACI,qBAAK9D,UAAU,oBAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,+BAAO+C,EAAShF,UAEpB,qBAAKiC,UAAU,4BAAf,SAE2B,SAAnB+C,EAASoB,MACL,qCACI,cAAC,IAAD,IACA,sBAAMjE,MAAO,CAAE6D,WAAY,OAAQX,QAAS,eAA5C,0BAKJ,qCACI,cAAC,IAAD,IACA,sBAAMlD,MAAO,CAAE6D,WAAY,OAAQX,QAAS,eAA5C,4BAQZL,EAASiP,YACL,sBAAKhS,UAAU,4BAAf,UACI,cAAC,KAAD,CAAaE,MAAO,CAACiB,MAAO,oBAC5B,sBAAMjB,MAAO,CAAE6D,WAAY,OAAQX,QAAS,cAAejC,MAAO,kBAAlE,0BAMJ,sBAAKnB,UAAU,4BAAf,UACI,cAAC,IAAD,CAAoBE,MAAO,CAACiB,MAAO,wBACnC,sBAAMjB,MAAO,CAAE6D,WAAY,OAAQX,QAAS,cAAejC,MAAO,sBAAlE,8BAMZ,qBAAKnB,UAAU,0BAAf,SACK8C,EAAeC,WA5CwB,oBCzEzD,SAASmP,KACpBpU,SAASC,MAAQ,6BAEjB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4CF,mBAAS,qBAArD,mBAAOwK,EAAP,KACA,GADA,KACkCxK,mBAAS,KAA3C,mBAAOoK,EAAP,KAAkB8H,EAAlB,KACA,EAAgClS,mBAAS,IAAzC,mBAAOoL,EAAP,KAAiBC,EAAjB,KAEMqC,EAAOyE,cAAPzE,GACErN,EAAoBC,cAApBD,gBACFoE,EAAWC,cACXvE,EAAUC,cAEV+T,EAAW,uCAAG,sBAAA1T,EAAA,6DAChBP,GAAW,GADK,SAEVQ,IACDkE,IAAI,mBAAqB8I,GACzB3M,MAAK,SAAAC,GACFqK,EAAYrK,EAAIG,KAAKiK,UACrB8G,EAAalR,EAAIG,KAAKiJ,cAEzBzI,OAAM,SAAAC,GAEEA,EAAIC,SAG0B,MAAxBD,EAAIC,SAASgD,OACpBJ,EAASR,MAET5D,EAAgBuB,EAAIC,SAASV,KAAKW,OAAQ,CAAEC,QAAS,UACrD5B,EAAQiS,QAAQ,qBANhB/R,EAAgB,+CAAgD,CAAE0B,QAAS,UAC3E5B,EAAQiS,QAAQ,uBAZZ,OAoBhBlS,GAAW,GApBK,2CAAH,qDAuBjByE,qBAAU,WACNwP,MACD,CAACzG,IAEJ/I,qBAAU,WACNF,EAASJ,EAAe,CACpB,CACI,KAAQ,iBACR,IAAO,mBAEX,CACI,KAAQ+G,EAASlF,SACjB,IAAO,mBAAqBkF,EAAStC,aAG9C,CAACsC,EAAStC,SAEb,IAAMsL,EAAS,uCAAG,sBAAA3T,EAAA,sEACRC,IAAMC,KAAK,cAAe,CAC5BmI,OAAQsC,EAAStC,SAEhB/H,MAAK,WACFZ,EAAQiS,QAAQ,sBAEnBzQ,OAAM,SAAAC,GAEEA,EAAIC,SAG0B,MAAxBD,EAAIC,SAASgD,OACpBJ,EAASR,MAET5D,EAAgBuB,EAAIC,SAASV,KAAKW,OAAQ,CAAEC,QAAS,UACrD5B,EAAQiS,QAAQ,qBANhB/R,EAAgB,0CAA2C,CAAE0B,QAAS,UACtE5B,EAAQiS,QAAQ,uBAXd,2CAAH,qDAqBf,OAAOnS,EACH,sBAAK+B,UAAU,0BAAf,UACI,8BAAMwI,IACN,qBAAKtI,MAAO,CAAE0B,UAAW,OAAQ4B,SAAU,YAA3C,SACI,cAAC,IAAD,CAAkBC,KAAK,QAAQtC,MAAM,6BAI7C,sBAAKnB,UAAU,oBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,iCACI,+BAAOoJ,EAASlF,WAChB,qBAAKhE,MAAO,GAAZ,SACI,uBAAMA,MAAO,CAACwB,SAAU,QAAxB,oBAAyC0H,EAASiJ,aAG1D,cAAC,KAAD,CACItU,MACI,gFAC4C,uBAD5C,sFAKJ+N,UAAWsG,EACXrG,OAAO,MACPC,WAAW,SACXC,kBAAmB,CAACC,SAAU,QAASzK,gBAAiB,2BAA4B0K,OAAQ,gCAVhG,SAYI,cAAC,IAAD,CAAQd,QAAQ,EAAMtJ,KAAK,UAA3B,6BAMR,cAACqC,EAAD,IAEA,cAAC,GAAD,CAAiBgE,UAAWA,O,4FCrHlCkK,I,kEACF,WAAYC,GAAQ,IAAD,+BACf,cAAMA,IAGDC,MAAQ,kBAAM,EAAKC,KAAKC,OAAOF,SACpC,EAAK3H,SAAW,SAAA8H,GAEZJ,EAAMK,SAASD,IAInB,EAAKE,iBAAmB,EAAKC,kBAAkBC,KAAvB,iBACxB,EAAKC,sBAAwB,EAAKC,uBAAuBF,KAA5B,iBAC7B,EAAKG,gBAAkB,EAAKC,iBAAiBJ,KAAtB,iBACvB,EAAKK,kBAAoB,EAAKC,mBAAmBN,KAAxB,iBAdV,E,sDAiBnB,SAAkBO,EAASX,GACvB,IAAMY,EAAWC,aAAUX,iBAAiBF,EAAaW,GACzD,QAAIC,IACAE,KAAK5I,SAAS0I,IACP,K,oCAKf,SAAuBzI,GACnB,GAAkB,IAAdA,EAAE4I,QAON,OAAOC,gCAAqB7I,GANxB,IAAM8I,EAAiBJ,aAAUK,MAAM/I,EAAG2I,KAAKlB,MAAM/S,MAAO,GACxDoU,IAAmBH,KAAKlB,MAAM/S,OAC9BiU,KAAK5I,SAAS+I,K,8BAO1B,SAAiBE,GACbL,KAAK5I,SAAS2I,aAAUN,gBAAgBO,KAAKlB,MAAM/S,MAAOsU,M,gCAG9D,SAAmBC,GACfN,KAAK5I,SAAS2I,aAAUJ,kBAAkBK,KAAKlB,MAAM/S,MAAOuU,M,oBAGhE,WACI,IAAMpB,EAAcc,KAAKlB,MAAM/S,MAI3BQ,EAAY,oBACZgU,EAAerB,EAAYsB,oBAO/B,OANKD,EAAaE,WACuC,aAAjDF,EAAaG,cAAcC,QAAQC,YACnCrU,GAAa,+BAKjB,sBAAKA,UAAU,kBAAkBE,MAAOuT,KAAKlB,MAAMtH,SAAW,CAAChF,QAAS,MAAOkG,OAAQ,OAAQ/L,MAAO,OAAS,GAA/G,UACKqT,KAAKlB,MAAMtH,SACR,6BAEA,qCACI,sBAAK/K,MAAO,CAACkD,QAAS,eAAtB,UACI,sBAAMlD,MAAO,CAACkF,YAAa,QAA3B,SACA,cAAC,GAAD,CAAoBuN,YAAaA,EAAa2B,SAAUb,KAAKP,oBAE7D,cAAC,GAAD,CAAqBP,YAAaA,EAAa2B,SAAUb,KAAKL,uBAElE,cAAC,IAAD,CAASlT,MAAO,CAAEmE,OAAQ,YAGlC,qBAAKrE,UAAWA,EAAWE,MAAO,CAAEmG,UAAW,QAAUlB,QAASsO,KAAKjB,MAAvE,SACI,cAAC,UAAD,CACI+B,aAAcC,GACdC,eAAgBC,GAChB/B,YAAaA,EACbE,iBAAkBY,KAAKZ,iBACvB8B,aAAclB,KAAKT,sBACnBnI,SAAU4I,KAAK5I,SACfyC,YAAY,6BACZF,IAAI,SACJnC,SAAUwI,KAAKlB,MAAMtH,SACrB2J,YAAY,a,GArFJC,IAAMC,YA8FhCJ,GAAW,CACbK,KAAM,CACFtT,gBAAiB,sBACjBuT,WAAY,gDACZtT,SAAU,GACVuE,QAAS,IAIjB,SAASuO,GAAcS,GACnB,MACS,eADDA,EAAMZ,UAEC,wBAEA,K,IAIba,G,oDACF,aAAe,IAAD,+BACV,gBACKZ,SAAW,SAAAxJ,GACZA,EAAEqK,iBACF,EAAK5C,MAAM+B,SAAS,EAAK/B,MAAMrS,QAJzB,E,2CAQd,WACI,IAAIF,EAAY,yBAKhB,OAJIyT,KAAKlB,MAAM6C,SACXpV,GAAa,4BAIb,sBAAMA,UAAWA,EAAWqV,YAAa5B,KAAKa,SAA9C,SACKb,KAAKlB,MAAMrR,Y,GAjBF2T,IAAMC,WAuB1BQ,GAAc,CAIhB,CAAEpU,MAAO,KAAMhB,MAAO,eACtB,CAAEgB,MAAO,KAAMhB,MAAO,eACtB,CAAEgB,MAAO,KAAMhB,MAAO,cACtB,CAAEgB,MAAO,aAAchB,MAAO,cAC9B,CAAEgB,MAAO,KAAMhB,MAAO,uBAEtB,CAAEgB,MAAO,aAAchB,MAAO,eAG5BqV,GAAqB,SAAAhD,GACvB,IAAQI,EAAgBJ,EAAhBI,YACF6C,EAAY7C,EAAY8C,eACxB3B,EAAYnB,EAAYsB,oBAAoByB,eAAeF,EAAUG,eAAetB,UAE1F,OACI,qBAAKrU,UAAU,sBAAf,SACKsV,GAAY1R,KAAI,SAAA7B,GAAI,OACjB,cAAC,GAAD,CAEIqT,OAAQrT,EAAK7B,QAAU4T,EACvB5S,MAAOa,EAAKb,MACZoT,SAAU/B,EAAM+B,SAChBpU,MAAO6B,EAAK7B,OAJP6B,EAAKb,aAW1B0U,GAAgB,CAChB,CAAE1U,MAAO,OAAQhB,MAAO,QACxB,CAAEgB,MAAO,SAAUhB,MAAO,UAC1B,CAAEgB,MAAO,YAAahB,MAAO,aAC7B,CAAEgB,MAAO,YAAahB,MAAO,SAG3B2V,GAAsB,SAAAtD,GACxB,IAAMuD,EAAevD,EAAMI,YAAYoD,wBAEvC,OACI,qBAAK/V,UAAU,sBAAf,SACK4V,GAAchS,KAAI,SAAA7B,GAAI,OACnB,cAAC,GAAD,CAEIqT,OAAQU,EAAahN,IAAI/G,EAAK7B,OAC9BgB,MAAOa,EAAKb,MACZoT,SAAU/B,EAAM+B,SAChBpU,MAAO6B,EAAK7B,OAJP6B,EAAKb,aAWfoR,MC7LA,SAAS0D,GAAT,GAAuG,IAA3EjY,EAA0E,EAA1EA,MAAOkY,EAAmE,EAAnEA,SAAUC,EAAyD,EAAzDA,YAAaC,EAA4C,EAA5CA,eAAgBC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,UAAWlS,EAAS,EAATA,MACxG,EAA8BnG,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMwK,EAAc,IAAIC,gBAAgBC,cAAcC,QAC9CxK,EAAoBC,cAApBD,gBACFoE,EAAWC,cACXvE,EAAUC,cASVkY,EAAqB,SAAAxL,GACvB,IAAMyL,EAAS,gBAAOH,GACtBG,EAAUzL,EAAEC,OAAOzK,MAAQwK,EAAEC,OAAOzH,MACpC+S,EAAUE,IAGRC,EAAoB,uCAAG,sBAAA/X,EAAA,6DACzBP,GAAW,GADc,SAEnBQ,IAAMC,KAAK,0BAA2B,CACxCmF,WAAY4E,EAAY9F,IAAI,OAC5B7E,MAAOA,EACP0Y,SAAU,CACNP,YAAaQ,wBAAaR,EAAYjC,qBACtCmC,OAAQA,KAGXrX,MAAK,SAAAC,GACFX,EAAgB,uBAAwB,CAAC0B,QAAS,eAErDJ,OAAM,SAAAC,GACH,IACI,GAA4B,MAAxBA,EAAIC,SAASgD,OAEb,YADAJ,EAASR,KAGb5D,EAAgBuB,EAAIC,SAASV,KAAKW,OAAQ,CAAEC,QAAS,UACrD5B,EAAQiS,QAAQ,aAClB,MAAO1Q,GACLrB,EAAgB,qCAAsC,CAAE0B,QAAS,cAtBpD,OA0BzB7B,GAAW,GA1Bc,2CAAH,qDA8B1B,OACI,qCACI,uBAAMgC,MAAO,CAACE,MAAO,MAAOgD,QAAS,cAAemH,eAAgB,iBAApE,UACI,uBAAMrK,MAAO,CAACwB,SAAU,QAAxB,oBAAyCyC,KACzC,cAAC,IAAD,CAAQpC,KAAK,UAAUoD,QAASqR,EAAsBvY,QAASA,EAA/D,qBAIJ,sBAAK+B,UAAU,mBAAf,UACI,uBAAOsD,MAAOvF,EAAO8M,SApDP,SAAAC,GACtBmL,EAASnL,EAAEC,OAAOzH,QAmDwCtD,UAAU,mBAE5D,oBAAIE,MAAO,CAAEyW,UAAW,OAAQ5S,WAAY,QAA5C,yBAGA,sBAAM7D,MAAO,CAAE+F,QAAS,QAAxB,SACI,cAAC,GAAD,CAAmBzG,MAAO0W,EAAatD,SAvD9B,SAAA9H,GACtBqL,EAAerL,IAsDiEG,UAAU,MAInE,SAAV9G,EACI,sBAAKnE,UAAU,6BAAf,UACI,6CAEA,oBAAIA,UAAU,6BAAd,0BACA,0BACIA,UAAU,6BACVsD,MAAO8S,EAAOQ,MACdtW,KAAK,QACLuK,SAAUyL,IAEd,oBAAItW,UAAU,6BAAd,2BACA,0BACIA,UAAU,6BACVsD,MAAO8S,EAAOS,OACdvW,KAAK,SACLuK,SAAUyL,IAEd,oBAAItW,UAAU,6BAAd,yBACA,0BACIA,UAAU,6BACVsD,MAAO8S,EAAOU,YACdxW,KAAK,cACLuK,SAAUyL,OAGjB,mCCvGzB,SAASS,KACP,MAAmD1X,OACnD,MAAO,CACLe,MAFF,EAAQ4W,WAGNrV,OAHF,EAA2BsV,aAOd,SAASC,KACtB,MAAgDlZ,mBAAS+Y,MAAzD,mBAAOI,EAAP,KAAyBC,EAAzB,KAWA,OATAzU,qBAAU,WACR,SAAS0U,IACPD,EAAoBL,MAItB,OADA1X,OAAOiY,iBAAiB,SAAUD,GAC3B,kBAAMhY,OAAOkY,oBAAoB,SAAUF,MACjD,IAEIF,EClBM,SAASK,GAAT,GAAwD,IAA9BzZ,EAA6B,EAA7BA,MAAOmY,EAAsB,EAAtBA,YAAaE,EAAS,EAATA,OACzD,EAA0Bc,KAAlBvV,EAAR,EAAQA,OAAR,EAAgBvB,MAEhB,OACI,qBAAKF,MAAO,CAACyB,OAASA,EAAS,GAAM,KAAMsE,QAAS,QAApD,SACI,sBAAKjG,UAAU,mBAAf,UACI,qBAAKA,UAAU,iBAAiBE,MAAO,CAACE,MAAO,MAAO+F,aAAc,OAAQqE,aAAc,OAA1F,SACKzM,IAEL,cAAC,GAAD,CAAmByB,MAAO0W,EAAatD,SAAU,aAAU3H,UAAU,IAErE,oBAAIjL,UAAU,6BAA6BE,MAAO,CAAC0B,UAAW,QAAS6I,OAAgC,IAAxB2L,EAAOQ,MAAMlT,OAA5F,0BACA,qBAAK1D,UAAU,6BAA6BE,MAAO,CAACuX,WAAY,OAAQhN,OAAgC,IAAxB2L,EAAOQ,MAAMlT,OAA7F,SACK0S,EAAOQ,QAEZ,oBAAI5W,UAAU,6BAA6ByK,OAAiC,IAAzB2L,EAAOS,OAAOnT,OAAjE,2BACA,qBAAK1D,UAAU,6BAA6BE,MAAO,CAACuX,WAAY,OAAQhN,OAAiC,IAAzB2L,EAAOS,OAAOnT,OAA9F,SACK0S,EAAOS,SAEZ,oBAAI7W,UAAU,6BAA6ByK,OAAsC,IAA9B2L,EAAOU,YAAYpT,OAAtE,yBACA,qBAAK1D,UAAU,6BAA6BE,MAAO,CAACuX,WAAY,OAAQhN,OAAsC,IAA9B2L,EAAOU,YAAYpT,OAAnG,SACK0S,EAAOU,mBChBb,SAASY,GAAT,GAAmD,IAA3BC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,aAC9C,EAA8B5Z,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMwK,EAAc,IAAIC,gBAAgBC,cAAcC,QAC9CxK,EAAoBC,cAApBD,gBACFoE,EAAWC,cACXvE,EAAUC,cAkBVyZ,EAAe,SAAC/M,EAAGF,EAAOtK,GAC5B,IAAMwX,EAAQ,aAAOH,GACrBG,EAASlN,GAAOtK,GAAQwK,EAAEC,OAAOzH,MAEjCsU,EAAaE,IAGXC,EAAS,uCAAG,sBAAAtZ,EAAA,6DACdP,GAAW,GADG,SAERQ,IAAMC,KAAK,wBAAyB,CACtCmF,WAAY4E,EAAY9F,IAAI,OAC5B+U,UAAWA,IAEd5Y,MAAK,SAAAC,GAEFX,EAAgB,uBAAwB,CAAC0B,QAAS,eAErDJ,OAAM,SAAAC,GAEH,IACI,GAA4B,MAAxBA,EAAIC,SAASgD,OAEb,YADAJ,EAASR,KAGb5D,EAAgBuB,EAAIC,SAASV,KAAKW,OAAQ,CAAEC,QAAS,UACrD5B,EAAQiS,QAAQ,aAClB,MAAO1Q,GACLrB,EAAgB,qCAAsC,CAAE0B,QAAS,cApB3D,OAwBd7B,GAAW,GAxBG,2CAAH,qDA6Bf,OACI,qCACI,uBAAMgC,MAAO,CAACE,MAAO,MAAOgD,QAAS,cAAemH,eAAgB,gBAAiBC,aAAc,QAAnG,UACI,yBACA,iCACI,cAAC,IAAD,CAAQrF,QApDR,WACTwS,EAAUjU,QAAU,EACnBrF,EAAgB,8BAA+B,CAAC0B,QAAS,SAG7D6X,EAAa,GAAD,oBAAMD,GAAN,CAAiB,CACzBf,MAAO,GACPC,OAAQ,QA6C0BvL,SAAUrN,EAApC,iBAGA,cAAC,IAAD,CAAQiC,MAAO,CAAC6D,WAAY,QAAShC,KAAK,UAAUoD,QAAS4S,EAAW9Z,QAASA,EAAjF,wBAKR,qBAAK+B,UAAU,mBAAf,SAEQ2X,EAAU/T,KAAI,SAACoU,EAAOpN,GAAR,OACV,qCACI,uBAAM1K,MAAO,CAACE,MAAO,MAAOgD,QAAS,cAAemH,eAAgB,gBAAiBlG,OAAQ,oBAA7F,UACI,0CAAauG,EAAQ,KACrB,+BACI,cAAC,IAAD,CAAQzF,QAAS,WAvE9B,IAACgG,IAuE+CP,EAtE/DgN,EAAcD,EAAUzM,QAAO,SAAC8M,EAAOpN,GAAR,OAAkBA,IAAUO,OAsEaE,QAAQ,EAAMC,SAAUrN,EAApE,yBAMR,sBAAKiC,MAAO,CAACE,MAAO,OAAQgD,QAAS,eAArC,UACI,0BACIkK,YAAY,aACZtN,UAAU,6BACVE,MAAO,CAACE,MAAO,OAAQiE,OAAQ,OAC/Bf,MAAO0U,EAAMpB,MACb/L,SAAU,SAACC,GAAO+M,EAAa/M,EAAGF,EAAO,YAE7C,0BACI0C,YAAY,kBACZtN,UAAU,6BACVE,MAAO,CAACE,MAAO,OAAQiE,OAAQ,OAC/Bf,MAAO0U,EAAMnB,OACbhM,SAAU,SAACC,GAAO+M,EAAa/M,EAAGF,EAAO,2B,wBClG9D,SAASqN,GAAT,GAAsE,IAA1CC,EAAyC,EAAzCA,iBAAkBC,EAAuB,EAAvBA,oBAEzD,EAAwBna,mBAASgF,IAAOkV,EAAiBjV,UAAzD,mBAAOmV,EAAP,KAAaC,EAAb,KACA,EAA8Bra,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMwK,EAAc,IAAIC,gBAAgBC,cAAcC,QAC9CxK,EAAoBC,cAApBD,gBACFoE,EAAWC,cACXvE,EAAUC,cAEVka,EAAmB,SAAAxN,GAErBuN,EAAQvN,IAWNyN,EAAY,uCAAG,sBAAA9Z,EAAA,6DACjBP,GAAW,GADM,SAEXQ,IAAMC,KAAK,0BAA2B,CACxCmF,WAAY4E,EAAY9F,IAAI,OAC5BK,QAASD,IAAOoV,GAAMjV,OAAO,uBAC7ByI,UAAWsM,EAAiBtM,YAE3B7M,MAAK,SAAAC,GAEFX,EAAgB,uBAAwB,CAAC0B,QAAS,eAErDJ,OAAM,SAAAC,GAEH,IACI,GAA4B,MAAxBA,EAAIC,SAASgD,OAEb,YADAJ,EAASR,KAGb5D,EAAgBuB,EAAIC,SAASV,KAAKW,OAAQ,CAAEC,QAAS,UACrD5B,EAAQiS,QAAQ,aAClB,MAAO1Q,GACLrB,EAAgB,qCAAsC,CAAE0B,QAAS,cArB5D,OAwBjB7B,GAAW,GAxBM,2CAAH,qDA2BlB,OACI,gCACI,sBAAKgC,MAAO,CAACE,MAAO,OAAQsB,SAAU,OAAQiV,UAAW,OAAQ5S,WAAY,QAA7E,UACI,sBAAM7D,MAAO,CAACkD,QAAS,cAAegC,YAAa,OAAQpB,SAAU,SAArE,sBAGA,cAAC,KAAD,CACIwU,aAAc,SAAAC,GACV,OAAOA,GAAWA,EAAUzV,IAAOA,MAASG,WAEhDuV,YAAY,EACZpV,MAAO8U,EACPvN,SAAUyN,IAEd,cAAC,KAAD,CACII,YAAY,EACZpV,MAAO8U,EACPvN,SAAUyN,OAGlB,sBAAKpY,MAAO,CAACE,MAAO,OAAQsB,SAAU,OAAQiV,UAAW,OAAQ5S,WAAY,QAA7E,UACI,sBAAM7D,MAAO,CAACkD,QAAS,cAAegC,YAAa,OAAQpB,SAAU,SAArE,wBAGA,cAAC,KAAD,CAAQ6G,SA3DI,SAACC,GACrBqN,EAAoB,6BACbD,GADY,IAEftM,WAAYsM,EAAiBtM,cAwDU+M,QAAST,EAAiBtM,eAEjE,qBAAK1L,MAAO,CAACE,MAAO,OAAQsB,SAAU,OAAQE,UAAW,QAAzD,SACI,cAAC,IAAD,CAAQG,KAAK,UAAUoD,QAASoT,EAActa,QAASA,EAAvD,uBChEhB,IAAQ8R,GAAYC,KAAZD,QAEO,SAAS6I,KACpB9a,SAASC,MAAQ,6BAEjB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,EAA0BF,mBAAS,SAAnC,mBAAOD,EAAP,KAAckY,EAAd,KACA,EAAsCjY,mBAAS,IAA/C,mBAAOkY,EAAP,KAAoBC,EAApB,KACA,EAA4BnY,mBAAS,IAArC,mBAAOoY,EAAP,KAAeC,EAAf,KAEA,EAAkCrY,mBAAS,IAA3C,mBAAO2Z,EAAP,KAAkBC,EAAlB,KACA,EAAgD5Z,mBAAS,IAAzD,mBAAOka,EAAP,KAAyBC,EAAzB,KACA,EAAgCna,mBAAS,IAAzC,mBAAOoL,EAAP,KAAiBC,EAAjB,KAEMX,EAAc,IAAIC,gBAAgBC,cAAcC,QAC9CxK,EAAoBC,cAApBD,gBACFoE,EAAWC,cACXvE,EAAUC,cAuEhB,OAnEAuE,oBAAS,sBAAC,sBAAAlE,EAAA,6DACNP,GAAW,GACNwK,EAAYI,IAAI,SACjBzK,EAAgB,oBAAqB,CAAE0B,QAAS,YAChD5B,EAAQiS,QAAQ,cAJd,SAMA1R,IACDkE,IAAI,wBAAyB,CAC1BiW,OAAQ,CACJ/U,WAAY4E,EAAY9F,IAAI,UAGnC7D,MAAK,SAAAC,GACFiX,EAASjX,EAAIG,KAAK2Z,gBAAgB/a,OAClCoY,EAAe4C,eAAYC,kBAAkBC,0BAAeja,EAAIG,KAAK2Z,gBAAgBrC,SAASP,eAC9FG,EAAUrX,EAAIG,KAAK2Z,gBAAgBrC,SAASL,QAE5CwB,EAAa5Y,EAAIG,KAAK2Z,gBAAgBnB,WAAa,IAEnDQ,EAAoB,CAChBhU,MAAOnF,EAAIG,KAAK2Z,gBAAgB3U,MAChClB,QAAUjE,EAAIG,KAAK2Z,gBAAgB7V,QAA2EjE,EAAIG,KAAK2Z,gBAAgB7V,QAA1FD,IAAOA,MAASG,UAAU+V,IAAI,EAAG,QAAQC,MAAM,OAAOhW,SACnGyI,UAAW5M,EAAIG,KAAK2Z,gBAAgBlN,YAGxCvC,EAAY,CACRvC,OAAQ9H,EAAIG,KAAK2Z,gBAAgBhS,OACjC5C,SAAUlF,EAAIG,KAAK2Z,gBAAgB5U,cAI1CvE,OAAM,SAAAC,GAEH,IACI,GAA4B,MAAxBA,EAAIC,SAASgD,OAEb,YADAJ,EAASR,KAGb5D,EAAgBuB,EAAIC,SAASV,KAAKW,OAAQ,CAAEC,QAAS,UACrD5B,EAAQiS,QAAQ,aAClB,MAAO1Q,GACLrB,EAAgB,iDAAkD,CAAE0B,QAAS,UAC7E5B,EAAQiS,QAAQ,iBA1CtB,OA6CFlS,GAAW,GA7CT,2CA8CH,IAGHyE,qBAAU,WACNF,EAASJ,EAAe,CACpB,CACI,KAAQ,WACR,IAAO,aAEX,CACI,KAAQ+G,EAASlF,SACjB,IAAO,aAAekF,EAAStC,QAEnC,CACI,KAAQ,gBACR,IAAO,kBAAoB4B,EAAY9F,IAAI,aAGpD,CAACwG,EAAStC,SAGV7I,EACH,sBAAK+B,UAAU,0BAAf,UACI,6DACA,qBAAKE,MAAO,CAAE0B,UAAW,OAAQ4B,SAAU,YAA3C,SACI,cAAC,IAAD,CAAkBC,KAAK,QAAQtC,MAAM,6BAI7C,8BACI,eAAC,KAAD,CAAWjB,MAAO,CAAEsD,SAAU,YAAc4V,QAAS,IAAKC,QAAS,IAAKC,YAAa,IAAKC,MAAM,WAAhG,UACI,cAAC,KAAD,CAAMvZ,UAAU,UAAhB,SACI,cAACwX,GAAD,CACIzZ,MAAOA,EACPmY,YAAaA,EACbE,OAAQA,MAGZ,8BACA,eAAC,KAAD,CAAM/E,iBAAkB3I,EAAY9F,IAAI,QAAU,OAAlD,UACI,cAAC,GAAD,CACI0O,IACI,sBAAKtR,UAAU,4BAA4BE,MAAO,CAACwB,SAAU,QAA7D,UACI,cAAC,KAAD,IACA,sBAAMxB,MAAO,CAAEmE,OAAQ,UAAWjB,QAAS,eAA3C,8BAJZ,SAWI,cAAC4S,GAAD,CACIjY,MAAOA,EACPkY,SAAUA,EACVC,YAAaA,EACbC,eAAgBA,EAChBC,OAAQA,EACRC,UAAWA,EACXlS,MAAO+T,EAAiB/T,SATxB,QAauB,SAA3B+T,EAAiB/T,MACb,cAAC,GAAD,CACImN,IACI,sBAAKtR,UAAU,4BAA4BE,MAAO,CAACwB,SAAU,OAAQuE,QAAS,MAAO5B,OAAQ,OAA7F,UACI,cAAC,IAAD,IACA,sBAAMnE,MAAO,CAAEmE,OAAQ,UAAWjB,QAAS,eAA3C,2BAJZ,SAWI,cAACsU,GAAD,CACIC,UAAWA,EACXC,aAAcA,KAJd,SAOP,6BAET,cAAC,GAAD,CACItG,IACI,sBAAKtR,UAAU,4BAA4BE,MAAO,CAACwB,SAAU,QAA7D,UACI,cAAC,KAAD,IACA,sBAAMxB,MAAO,CAAEmE,OAAQ,UAAWjB,QAAS,eAA3C,yBAJZ,SAWI,cAAC6U,GAAD,CACIC,iBAAkBA,EAClBC,oBAAqBA,KAJrB,sB,kCC9KxB9N,GAAWmP,KAAXnP,OAEO,SAASoP,GAAT,GAAyI,IAAlHC,EAAiH,EAAjHA,WAAYC,EAAqG,EAArGA,cAAeC,EAAsF,EAAtFA,aAAcC,EAAwE,EAAxEA,gBAAiB5b,EAAuD,EAAvDA,QAASC,EAA8C,EAA9CA,WAAY4b,EAAkC,EAAlCA,cAAelD,EAAmB,EAAnBA,MAAOmD,EAAY,EAAZA,UAC/H1b,EAAoBC,cAApBD,gBACR,EAAgCL,oBAAS,GAAzC,mBAAOgc,EAAP,KAAiBC,EAAjB,KASMC,EAAS,uCAAG,sBAAAzb,EAAA,6DACdP,GAAW,GACX6b,EAAU,IAFI,SAGRrb,IAAMC,KAAK,YAAa,CACtBwb,KAAML,IACNM,SAAUR,EAAaQ,SACvBxD,MAAOA,IAEV7X,MAAK,SAAAC,GACF+a,EAAUM,KAAKC,MAAOtb,EAAIG,MAAM0X,WAEnClX,OAAM,SAAAC,GACHvB,EAAgB,uBAAwB,CAAC0B,QAAS,aAZ5C,OAcd7B,GAAW,GAdG,2CAAH,qDAiBTsL,EAAU,uCAAG,4BAAA/K,EAAA,sDACfP,GAAW,IAEPqc,EAAWb,EAAWxO,QAAO,SAAAiP,GAAI,OAAIA,EAAKzO,KAAOkO,EAAalO,OACzD1G,KAAK,CACV0G,GAAIkO,EAAalO,GACjBpL,KAAMsZ,EAAatZ,KACnB6Z,KAAML,IACNM,SAAUR,EAAaQ,WAE3BT,EAAcY,GACdN,GAAY,GAEZO,YAAW,WACPtc,GAAW,GACXG,EAAgB,eAAgB,CAAC0B,QAAS,cAC3C,KAhBY,2CAAH,qDA0BhB,OACI,sBAAKC,UAAU,kBAAf,UACI,eAAC,KAAD,CACIjC,MAAM,4BACNgI,QAASiU,EAGTlQ,SAAU,WAAOmQ,GAAY,IAC7BQ,KAAMjR,EANV,8CASI,cAAC,IAAD,CAAOlG,MAAOsW,EAAatZ,KAAMuK,SAjB1B,SAACC,GAChB,IAAMrB,EAAO,gBAAQmQ,GACrBnQ,EAAQnJ,KAAOwK,EAAEC,OAAOzH,MACxBuW,EAAgBpQ,IAc+CvJ,MAAO,CAACE,MAAO,cAE1E,iCACI,eAAC,IAAD,CACIF,MAAO,CAAEiB,MAAO,qBAAsBM,gBAAiB,OAAQrB,MAAO,QACtE+E,QAAS+U,EACT5O,SAAUrN,EAHd,UAKI,cAACyc,GAAA,EAAD,IALJ,SAQA,eAAC,IAAD,CAAQxa,MAAO,CAAEiB,MAAO,qBAAsBM,gBAAiB,OAAQrB,MAAO,QAAU+E,QAAS,WAAO8U,GAAY,IAApH,UACI,cAACU,GAAA,EAAD,IADJ,aAKJ,iCACI,sBAAMza,MAAO,CAACiB,MAAO,OAAQiE,YAAa,QAA1C,wBAGA,eAAC,KAAD,CAAQ9B,MAAOsW,EAAaQ,SAAUla,MAAO,CAAEE,MAAO,KAAOyK,SAjF5C,SAAAvH,GACzB,IAAMmG,EAAO,gBAAQmQ,GACrBnQ,EAAQ2Q,SAAW9W,EACnBuW,EAAgBpQ,IA8ER,UACI,cAACY,GAAD,CAAQ/G,MAAM,MAAd,iBACA,cAAC+G,GAAD,CAAQ/G,MAAM,IAAd,eACA,cAAC+G,GAAD,CAAQ/G,MAAM,OAAd,kBACA,cAAC+G,GAAD,CAAQ/G,MAAM,SAAd,6B,cC1FL,SAASsX,GAAT,GAAuG,IAAhFlB,EAA+E,EAA/EA,WAAYC,EAAmE,EAAnEA,cAAeE,EAAoD,EAApDA,gBAAiB3b,EAAmC,EAAnCA,WAAY6b,EAAuB,EAAvBA,UAAWc,EAAY,EAAZA,SAiB/FC,EAAY,WACd5c,GAAW,GACX2c,EAAS,IACTd,EAAU,IAEVF,EAAgB,CACZnO,GAAIqP,KAAKC,MAAsB,IAAhBD,KAAKE,UACpB3a,KAAM,GACN6Z,KAAM,oBACNC,SAAU,QAGdI,YAAW,WACPtc,GAAW,KACZ,MAGP,OAA6B,IAAtBwb,EAAWhW,OACd,qCACI,qBAAK1D,UAAU,wBAAf,8BAGA,cAAC,IAAD,CAAQ+B,KAAK,UAAU7B,MAAO,CAACmE,OAAQ,WAAY3C,SAAU,OAAQC,OAAQ,QAAS+D,KAAM,cAACwV,GAAA,EAAD,IAAsB/V,QAAS2V,EAA3H,oBAKJ,qCACI,qBAAK9a,UAAU,wBAAf,6BAGA,cAAC,IAAD,CAAQ+B,KAAK,UAAU7B,MAAO,CAACmE,OAAQ,WAAY3C,SAAU,OAAQC,OAAQ,QAAS+D,KAAM,cAACwV,GAAA,EAAD,IAAsB/V,QAAS2V,EAA3H,iBAGA,qBAAK9a,UAAU,mBAAmBE,MAAO,CAACyB,OAAQ,SAAlD,SACK+X,EAAW9V,KAAI,SAACuW,EAAMvP,GAAP,OACZ,qBAAK5K,UAAU,yBAAf,SACI,sBAAKA,UAAU,+BAAf,UACI,sBAAME,MAAO,CAAC+E,WAAY,SAAUG,YAAa,OAAjD,SAA0D+U,EAAK7Z,OAC/D,uBAAMJ,MAAO,CAACkD,QAAS,cAAe6B,WAAY,UAAlD,UACI,sBAAM/E,MAAO,CAACkD,QAAS,cAAe6B,WAAY,UAAWE,QAAS,YAxD5E,SAACyF,GACnB1M,GAAW,GACX2c,EAAS,IACTd,EAAU,IACVF,EAAgBH,EAAW9O,IAC3B4P,YAAW,WACPtc,GAAW,KACZ,KAiDkGid,CAAcvQ,IAA3F,SACI,cAAC,KAAD,CAAS7M,MAAM,4BAAf,SACI,cAAC,IAAD,CAA8BmC,MAAO,CAACwB,SAAU,OAAQ0D,YAAa,aAG7E,sBAAMlF,MAAO,CAACkD,QAAS,cAAe6B,WAAY,UAAWE,QAAS,YApD7E,SAACyF,GAClB1M,GAAW,GACXyb,EAAc,aAAKD,EAAWxO,QAAO,SAACiP,EAAMhP,GAAP,OAAaA,IAAMP,OACxD4P,YAAW,WACPtc,GAAW,KACZ,KA+CkGkd,CAAaxQ,IAA1F,SACI,cAAC,KAAD,CAAS7M,MAAM,oBAAf,SACI,cAAC,KAAD,CAAiBmC,MAAO,CAACwB,SAAU,8BC5D5D,SAAS2Z,GAAT,GAAiF,IAA7D3B,EAA4D,EAA5DA,WAAYC,EAAgD,EAAhDA,cAAeC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,gBAClEyB,EAAYC,iBAAO,MACzB,EAA8Bvd,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAS,IAAnC,mBAAO4Y,EAAP,KAAciE,EAAd,KACA,EAA4B7c,mBAAS,IAArC,mBAAO6Y,EAAP,KAAekD,EAAf,KAMA,IAIA,EAA0B7C,KAAlBvV,EAAR,EAAQA,OAAR,EAAgBvB,MAEhB,OACI,sBAAKJ,UAAU,+BAAf,UACI,cAAC,KAAD,CACIwb,UAAQ,EACRzV,QAAS9H,EACToH,OAAQ,KACRW,UAAW,CAACC,QAAS,OACrBJ,UAAU,EALd,SAOI,cAAC,IAAD,CAAkBpC,KAAK,QAAQtC,MAAM,0BAGzC,eAAC,KAAD,CAAWjB,MAAO,CAAEsD,SAAU,YAAc4V,QAAS,IAAKC,QAAS,IAAKC,YAAa,IAAKC,MAAM,WAAhG,UACI,cAAC,KAAD,UACI,cAACqB,GAAD,CACIlB,WAAYA,EACZC,cAAeA,EACfE,gBAAiBA,EACjB3b,WAAYA,EACZ6b,UAAWA,EACXc,SAAUA,MAGlB,eAAC,KAAD,CAAWzB,QAASzX,EAAS,GAAK,IAAK0X,QAAS1X,EAAS,GAAI2X,YAAa3X,EAAS,GAAK,IAAK4X,MAAM,aAAnG,UACI,eAAC,KAAD,WACI,cAACE,GAAD,CACIC,WAAYA,EACZC,cAAeA,EACfC,aAAcA,EACdC,gBAAiBA,EACjB5b,QAASA,EACTC,WAAYA,EACZ4b,cAtCF,WAClB,OAAOwB,EAAU7C,QAAQgD,YAsCL7E,MAAOA,EACPmD,UAAWA,IAEf,cAAC,KAAD,CACIvU,MAAM,UACN4U,SAAUR,EAAaQ,SACvB9W,MAAOsW,EAAaO,KACpBuB,QAlDxB,SAA8BhJ,EAAQiJ,GAClCL,EAAU7C,QAAU/F,GAkDAtS,MAAM,YAGd,cAAC,KAAD,CAAMF,MAAO,CAAEyB,OAAQ,OAAQvB,MAAO,QAAtC,SACI,sBAAKF,MAAO,CAACkD,QAAS,cAAehD,MAAO,OAAQuB,OAAQ,QAA5D,UACI,sBAAKzB,MAAO,CAACE,MAAO,OAAQkF,WAAY,2BAA4BW,QAAS,MAAO2V,YAAa,gCAAjG,UACI,qBAAK5b,UAAU,0BAAf,mBACA,0BACIsD,MAAOsT,EACP/L,SAAU,SAACC,GAAO+P,EAAS/P,EAAEC,OAAOzH,OAAQyW,EAAU,KACtD/Z,UAAU,kCAGlB,sBAAKE,MAAO,CAACE,MAAO,OAAQkF,WAAY,2BAA4BW,QAAS,OAA7E,UACI,qBAAKjG,UAAU,0BAAf,qBACA,qBACIE,MAAO,CAACuX,WAAY,MAAOd,UAAW,OAAQjV,SAAU,QACxD1B,UAAU,mBAFd,SAIK6W,qBCjFtB,SAASgF,KACpB/d,SAASC,MAAQ,+BAEjB,MAAoCC,mBAAUiB,aAAa6c,qBACvDzB,KAAKC,MAAMrb,aAAa8c,QAAQ,yBAA2B,IAD/D,mBAAOrC,EAAP,KAAmBC,EAAnB,KAGA,EAAwC3b,mBAAS,CAC7C0N,GAAIqP,KAAKC,MAAsB,IAAhBD,KAAKE,UACpB3a,KAAM,GACN6Z,KAAM,GACNC,SAAU,QAJd,mBAAOR,EAAP,KAAqBC,EAArB,KAOMpX,EAAWC,cAYjB,OAVAC,qBAAU,WACNF,EAASJ,EAAc,CACnB,CACI/B,KAAM,kBACNoH,IAAK,YAGbzI,aAAaC,QAAQ,uBAAwBmb,KAAK2B,UAAUtC,MAC7D,CAACA,IAGA,cAAC2B,GAAD,CACI3B,WAAYA,EACZC,cAAeA,EACfC,aAAcA,EACdC,gBAAiBA,I,cC3BrBxP,GAAWmP,KAAXnP,OAEO,SAASoP,GAAT,GAAoH,IAA7FX,EAA4F,EAA5FA,gBAAiBmD,EAA2E,EAA3EA,mBAAoBhe,EAAuD,EAAvDA,QAASC,EAA8C,EAA9CA,WAAY4b,EAAkC,EAAlCA,cAAelD,EAAmB,EAAnBA,MAAOmD,EAAY,EAAZA,UAC5GrR,EAAc,IAAIC,gBAAgBC,cAAcC,QAC9CxK,EAAoBC,cAApBD,gBASF6b,EAAS,uCAAG,sBAAAzb,EAAA,6DACdP,GAAW,GACX6b,EAAU,IAFI,SAGRrb,IAAMC,KAAK,YAAa,CACtBwb,KAAML,IACNM,SAAUtB,EAAgBsB,SAC1BxD,MAAOA,IAEV7X,MAAK,SAAAC,GAEF+a,EAAUM,KAAKC,MAAOtb,EAAIG,MAAM0X,WAEnClX,OAAM,SAAAC,GACHvB,EAAgB,wBAAyB,CAAC0B,QAAS,aAb7C,OAed7B,GAAW,GAfG,2CAAH,qDAkBTsL,EAAU,uCAAG,sBAAA/K,EAAA,6DACfP,GAAW,GADI,SAETQ,IAAMC,KAAK,sBAAuB,CAChCmF,WAAY4E,EAAY9F,IAAI,OAC5BuX,KAAML,IACNM,SAAUtB,EAAgBsB,WAE7Brb,MAAK,SAAAC,GACFX,EAAgB,sBAAuB,CAAC0B,QAAS,eAEpDJ,OAAM,SAAAC,GACHvB,EAAgB,2BAA4B,CAAC0B,QAAS,aAX/C,OAaf7B,GAAW,GAbI,2CAAH,qDAgBVge,EAAY,uCAAG,sBAAAzd,EAAA,6DACjBP,GAAW,GADM,SAEXQ,IAAMC,KAAK,wBAAyB,CAClCmF,WAAY4E,EAAY9F,IAAI,OAC5BuX,KAAML,IACNM,SAAUtB,EAAgBsB,WAE7Brb,MAAK,SAAAC,GACwB,IAAvBA,EAAIG,KAAKgd,UACR9d,EAAgB,0BAA2B,CAAC0B,QAAS,YAEjDf,EAAIG,KAAKid,cAAgBpd,EAAIG,KAAKgd,UACtC9d,EAAgB,2BAA6BW,EAAIG,KAAKid,YAAc,WAAapd,EAAIG,KAAKgd,UAAY,gBAAiB,CAACpc,QAAS,YAGjI1B,EAAgB,2BAA6BW,EAAIG,KAAKid,YAAc,WAAapd,EAAIG,KAAKgd,UAAY,gBAAiB,CAACpc,QAAS,YAErIkc,EAAmB,6BACZnD,GADW,IAEdvM,WAAW,EACX8P,YAAarZ,MAASG,eAG7BxD,OAAM,SAAAC,GACHvB,EAAgB,+BAAgC,CAAC0B,QAAS,aAxBjD,OA0BjB7B,GAAW,GA1BM,2CAAH,qDA6BlB,OACI,sBAAK8B,UAAU,kBAAf,UACI,iCACI,eAAC,IAAD,CACIE,MAAO,CAAEiB,MAAO,qBAAsBM,gBAAiB,OAAQrB,MAAO,QACtE+E,QAAS+U,EACT5O,SAAUrN,EAHd,UAKI,cAACyc,GAAA,EAAD,IALJ,SAQA,eAAC,IAAD,CAAQxa,MAAO,CAAEiB,MAAO,qBAAsBM,gBAAiB,OAAQrB,MAAO,QAAU+E,QAASqE,EAAjG,UACI,cAACmR,GAAA,EAAD,IADJ,UAKI3X,IAAO8V,EAAgB7V,SAAS4I,QAAQ7I,MAASG,UAC7C,eAAC,IAAD,CACIjD,MAAO,CAAEiB,MAAO,qBAAsBM,gBAAiB,OAAQrB,MAAO,QACtE+E,QAAS+W,EAFb,UAII,cAACI,GAAA,EAAD,IAJJ,YAOC,gCAGb,iCACI,sBAAMpc,MAAO,CAACiB,MAAO,OAAQkD,OAAQ,qBAArC,wBAGA,eAAC,KAAD,CAAQf,MAAOwV,EAAgBsB,SAAUla,MAAO,CAAEE,MAAO,KAAOyK,SArG/C,SAAAvH,GACzB,IAAMmG,EAAO,gBAAQqP,GACrBrP,EAAQ2Q,SAAW9W,EACnB2Y,EAAmBxS,IAkGX,UACI,cAAC,GAAD,CAAQnG,MAAM,MAAd,iBACA,cAAC,GAAD,CAAQA,MAAM,IAAd,eACA,cAAC,GAAD,CAAQA,MAAM,OAAd,kBACA,cAAC,GAAD,CAAQA,MAAM,SAAd,6BCjHL,SAASiZ,GAAT,GAA8F,IAA3EC,EAA0E,EAA1EA,eAAgBC,EAA0D,EAA1DA,kBAAmB3D,EAAuC,EAAvCA,gBAAiBmD,EAAsB,EAAtBA,mBAC5EX,EAAYC,iBAAO,MACzB,EAA0Bvd,mBAAS,IAAnC,mBAAO4Y,EAAP,KAAciE,EAAd,KACA,EAA4B7c,mBAAS,IAArC,mBAAO6Y,EAAP,KAAekD,EAAf,KAMA,IAIA,EAA0B7C,KAAlBvV,EAAR,EAAQA,OAAR,EAAgBvB,MAEhB,OACI,eAAC,KAAD,CAAWgZ,QAASzX,EAAS,GAAK,IAAK0X,QAAS1X,EAAS,GAAI2X,YAAa3X,EAAS,GAAK,IAAK4X,MAAM,aAAnG,UACI,eAAC,KAAD,WACI,cAAC,GAAD,CACIT,gBAAiBA,EACjBmD,mBAAoBA,EACpBhe,QAASue,EACTte,WAAYue,EACZ3C,cAdM,WAClB,OAAOwB,EAAU7C,QAAQgD,YAcb7E,MAAOA,EACPmD,UAAWA,IAEf,cAAC,KAAD,CACIvU,MAAM,UACN4U,SAAUtB,EAAgBsB,SAC1BhQ,aAAc0O,EAAgB4D,UAC9BhB,QA1BhB,SAA8BhJ,EAAQiJ,GAClCL,EAAU7C,QAAU/F,QA4BhB,cAAC,KAAD,CAAMxS,MAAO,CAAEyB,OAAQ,OAAQgb,MAAO,QAAtC,SACI,sBAAKzc,MAAO,CAAEkD,QAAS,cAAehD,MAAO,OAAQuB,OAAQ,QAA7D,UACI,sBACIzB,MAAO,CACHE,MAAO,OACPkF,WAAY,2BACZW,QAAS,MACT2V,YAAa,gCALrB,UAQI,qBAAK5b,UAAU,0BAAf,mBAEA,0BACIsD,MAAOsT,EACP/L,SAAU,SAAAC,GACN+P,EAAS/P,EAAEC,OAAOzH,OAClByW,EAAU,KAEd/Z,UAAU,kCAGlB,sBAAKE,MAAO,CAAEE,MAAO,OAAQkF,WAAY,2BAA4BW,QAAS,OAA9E,UACI,qBAAKjG,UAAU,0BAAf,qBACA,qBACIE,MAAO,CAAEuX,WAAY,MAAOd,UAAW,OAAQjV,SAAU,QACzD1B,UAAU,mBAFd,SAIK6W,e,6CCnEhB+F,GAAa,wBCWX,SAASC,GAAT,GAA6E,IAA1DJ,EAAyD,EAAzDA,kBAAmB3D,EAAsC,EAAtCA,gBAAiBmD,EAAqB,EAArBA,mBAClE,EAAsBje,mBAAS,IAA/B,mBAAOiC,EAAP,KAAY6c,EAAZ,KACA,EAAwB9e,mBAAS,MAAjC,mBAAO+e,EAAP,KAAaC,EAAb,KAEMtU,EAAc,IAAIC,gBAAgBC,cAAcC,QAC9CxK,EAAoBC,cAApBD,gBAERsE,qBAAU,WACFmW,EAAgBvM,WAChBlO,EAAgB,+DAAgE,CAAC0B,QAAS,cAE/F,CAAC+Y,EAAgBvM,YAGpB,IAAM0Q,EAAgB,uCAAG,sBAAAxe,EAAA,6DACrBge,GAAkB,GADG,SAEf/d,IAAMC,KAAK,yBAA0B,CACvCmF,WAAa4E,EAAY9F,IAAI,OAC7Bsa,aAAcpE,EAAgBoE,eAE7Bne,MAAK,SAAAC,GACFid,EAAmB,6BACZnD,GADW,IAEdvM,WAAW,KAEfyQ,EAAQ,MACRF,EAAO,IACPze,EAAgB,sBAAuB,CAAC0B,QAAS,YAEpDJ,OAAM,SAAAC,GACHvB,EAAgB,uCAAwC,CAAC0B,QAAS,aAhBrD,OAkBrB0c,GAAkB,GAlBG,2CAAH,qDAsDhBU,EAAgB,uCAAG,8BAAA1e,EAAA,yDACrBge,GAAkB,IACZW,EAAW,IAAIC,UACZC,OAAO,OAAQP,GAER,OAAbK,EALkB,uBAMXG,EAAS,CACXC,QAAS,CACL,eAAgB,wBARP,SAWX9e,IAAMC,KAAK,yBAA2B+J,EAAY9F,IAAI,OAASwa,EAAUG,GAC1Exe,MAAK,SAAAC,GACFid,EAAmB,6BACZnD,GADW,IAEdvM,WAAW,EACX8P,YAAarZ,MAASG,SACtB+Z,aAAcle,EAAIG,KAAK+d,gBAE3B7e,EAAgB,gCAAiC,CAAC0B,QAAS,eAE9DJ,OAAM,SAAAC,GACH,IACIvB,EAAgBuB,EAAIC,SAASV,KAAKW,OAAQ,CAACC,QAAS,UACtD,MAAOL,GACLrB,EAAgB,+BAAgC,CAAC0B,QAAS,cAzBrD,OA6BrB0c,GAAkB,GA7BG,2CAAH,qDA+CtB,OAAO3D,EAAgBvM,UACnB,qCAEIvJ,IAAO8V,EAAgB7V,SAAS4I,QAAQ7I,MAASG,UAC7C,cAAC,KAAD,CACIpF,MACI,8EAC0C,uBAD1C,gDAKJ+N,UAAWmR,EACXlR,OAAO,MACPC,WAAW,SACXC,kBAAmB,CAACC,SAAU,QAASzK,gBAAiB,2BAA4B0K,OAAQ,gCAVhG,SAYI,cAAC,IAAD,CACIjM,MAAO,CAAC0B,UAAW,QACnBG,KAAK,UACLsJ,QAAQ,EAHZ,iCAQH,6BAEL,cAAC,IAAD,CAAQlG,QAxCI,WACtBsY,MAAM,GAAD,OAAIb,GAAJ,0CAAgDlU,EAAY9F,IAAI,OAAhE,yBAAuFkW,EAAgBoE,aAAvG,kBAA6Hje,aAAa8c,QAAQ,cACrJhd,MAAK,SAAAc,GACLA,EAAS6d,OAAO3e,MAAK,SAAA2e,GACpB,IAAIhW,EAAMrI,OAAOse,IAAIC,gBAAgBF,GACjCjf,EAAIX,SAAS6S,cAAc,KAC/BlS,EAAEc,KAAOmI,EACTjJ,EAAEof,SAAW,iBACbpf,EAAEqf,eAgCmC5d,MAAO,CAAC0B,UAAW,OAAQmC,WAAY,QAAShC,KAAK,UAAnF,0BAGA,cAAC,KAAD,CACIgc,SAAU,MACVC,SAAQ,UAAKpB,GAAL,0CAAiDlU,EAAY9F,IAAI,OAAjE,yBAAwFkW,EAAgBoE,aAAxG,kBAA8Hje,aAAa8c,QAAQ,kBAInK,qCACI,sBAAK7b,MAAO,CAACyB,OAAQ,OAAQyB,QAAS,OAAQ6B,WAAY,SAAUsF,eAAgB,gBAAiBlG,OAAQ,qBAA7G,UACI,cAAC,KAAD,CACI4Z,SAAS,UACTC,aArHW,SAACpT,GACxB,IAGI,OAFAgS,EAAOa,IAAIC,gBAAgB9S,IAC3BkS,EAAQlS,IACD,EAEX,MAAMlL,GAGF,OAFAod,EAAQ,MACRF,EAAO,KACA,IA6GCqB,SAAU,EACVC,UAAU,EACVrc,KAAK,OACLsc,OAAO,kBACPxT,SA7GK,SAACC,GAClB,GAAyB,IAAtBA,EAAEwT,SAAS5a,OAGV,OAFAsZ,EAAQ,WACRF,EAAO,IAIX,IACIA,EAAOa,IAAIC,gBAAgB9S,EAAEiS,OAC7BC,EAAQlS,EAAEiS,MAEd,MAAMnd,GAGF,OAFAod,EAAQ,WACRF,EAAO,MAiGC9c,UAAU,qBARd,SAUI,cAAC,IAAD,CAAQ0F,KAAM,cAAC6Y,GAAA,EAAD,IAAoBre,MAAO,CAACyB,OAAQ,QAAlD,sBAGJ,cAAC,IAAD,CACIwD,QAASgY,EACTpb,KAAK,UACL7B,MAAO,CAACmE,OAAQ,mBAAoB1C,OAAQ,QAC5C2J,SAAmB,OAATyR,EAJd,uBAUS,OAATA,EACI,mCACA,cAAC,KAAD,CACIyB,UAAU,EACVT,SAAU,MACVC,SAAU/d,GACLA,KAGR,gCCnLN,SAASwe,KACpB3gB,SAASC,MAAQ,wBAEjB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4CF,oBAAS,GAArD,mBAAOwe,EAAP,KAAuBC,EAAvB,KACA,EAA8Cze,mBAAS,IAAvD,mBAAO8a,EAAP,KAAwBmD,EAAxB,KACA,EAAsCje,mBAAS,IAA/C,mBAAO0gB,EAAP,KAAoBC,EAApB,KAEMjW,EAAc,IAAIC,gBAAgBC,cAAcC,QAC9CxK,EAAoBC,cAApBD,gBACFoE,EAAWC,cACXvE,EAAUC,cAEhBuE,oBAAS,sBAAC,sBAAAlE,EAAA,6DACNP,GAAW,GACNwK,EAAYI,IAAI,SACjBzK,EAAgB,oBAAqB,CAAE0B,QAAS,YAChD5B,EAAQiS,QAAQ,oBAJd,SAMA1R,IACDkE,IAAI,uBAAwB,CACzBiW,OAAQ,CACJ/U,WAAY4E,EAAY9F,IAAI,UAGnC7D,MAAK,SAAAC,GACFid,EAAmB,CACf9X,MAAOnF,EAAIG,KAAK2C,QAAQqC,MACxBpG,MAAOiB,EAAIG,KAAK2C,QAAQ/D,MACxBmY,YAAa6C,eAAYC,kBAAkBC,0BAAeja,EAAIG,KAAK2C,QAAQ2U,SAASP,cACpFE,OAAQpX,EAAIG,KAAK2C,QAAQ2U,SAASL,OAClCnT,QAASjE,EAAIG,KAAK2C,QAAQmB,QAC1ByZ,UAAW1d,EAAIG,KAAK2C,QAAQ4a,UAC5BtC,SAAUpb,EAAIG,KAAK2C,QAAQsY,UAAY,MACvC7N,UAAWvN,EAAIG,KAAK2C,QAAQyK,UAC5B8P,YAAard,EAAIG,KAAK2C,QAAQua,YAC9Ba,aAAcle,EAAIG,KAAK2C,QAAQob,eAGnCyB,EAAe,CACX7X,OAAQ9H,EAAIG,KAAK2C,QAAQgF,OACzB5C,SAAUlF,EAAIG,KAAK2C,QAAQoC,cAIlCvE,OAAM,SAAAC,GACH,IACI,GAA4B,MAAxBA,EAAIC,SAASgD,OAEb,YADAJ,EAASR,KAGb5D,EAAgBuB,EAAIC,SAASV,KAAKW,OAAQ,CAAEC,QAAS,UACrD5B,EAAQiS,QAAQ,mBAClB,MAAO1Q,GACLrB,EAAgB,qDAAsD,CAAE0B,QAAS,UACjF5B,EAAQiS,QAAQ,uBA1CtB,OA6CNlS,GAAW,GA7CL,2CA8CP,IAEHyE,oBAAS,sBAAC,sBAAAlE,EAAA,sDACNgE,EAASJ,EAAe,CACpB,CACI,KAAQ,iBACR,IAAO,mBAEX,CACI,KAAQqc,EAAYxa,SACpB,IAAO,mBAAqBwa,EAAY5X,QAE5C,CACI,KAAQ,WACR,IAAO,kBAAoB4B,EAAY9F,IAAI,WAZ7C,2CAeP,CAAC8b,EAAY5X,SA0BhB,OAAO7I,EACH,sBAAK+B,UAAU,0BAAf,UACI,wDACA,qBAAKE,MAAO,CAAE0B,UAAW,OAAQ4B,SAAU,YAA3C,SACI,cAAC,IAAD,CAAkBC,KAAK,QAAQtC,MAAM,6BAI7C,gCACI,cAAC,KAAD,CAAOqa,UAAQ,EAACzV,QAASyW,EAAgBnX,OAAQ,KAAMW,UAAW,CAAEC,QAAS,OAASJ,UAAU,EAAhG,SACI,cAAC,IAAD,CAAkBpC,KAAK,QAAQtC,MAAM,0BAGzC,eAAC,KAAD,CAAWjB,MAAO,CAAEsD,SAAU,YAAc4V,QAAS,IAAKC,QAAS,IAAKC,YAAa,IAAKC,MAAM,WAAhG,UACI,eAAC,KAAD,WACI,sBAAKrZ,MAAO,CAAE+F,QAAS,OAAQE,aAAc,kBAA7C,UACI,sBAAKnG,UAAU,4BAA4BE,MAAO,CAACwB,SAAU,QAA7D,UACI,sBAAMxB,MAAO,CAACkD,QAAS,cAAeY,SAAU,SAAhD,sBACChB,IAAO8V,EAAgB7V,SAASE,OAAO,qBAGxC2V,EAAgBvM,UACZ,sBAAKvM,UAAU,4BAA4BE,MAAO,CAACwB,SAAU,QAA7D,UACI,sBAAMxB,MAAO,CAAEkD,QAAS,cAAeY,SAAU,SAAjD,0BACChB,IAAO8V,EAAgBuD,aAAalZ,OAAO,qBAE/C,gCAGb,cAACqU,GAAD,CACIzZ,MAAO+a,EAAgB/a,MACvBmY,YAAa4C,EAAgB5C,YAC7BE,OAAQ0C,EAAgB1C,YAtDX,SAA1B0C,EAAgB3U,MAEX,cAACoY,GAAD,CACIC,eAAgBA,EAChBC,kBAAmBA,EACnB3D,gBAAiBA,EACjBmD,mBAAoBA,IAMxB,cAACY,GAAD,CACIJ,kBAAmBA,EACnB3D,gBAAiBA,EACjBmD,mBAAoBA,UCtGxC,IAAQ5R,GAAWmP,KAAXnP,OAEO,SAASkS,GAAT,GAIX,IAHAE,EAGD,EAHCA,kBACAmC,EAED,EAFCA,SACAC,EACD,EADCA,YAEA,EAAgC7gB,mBAAS4gB,EAASxE,UAAY,OAA9D,mBAAOA,EAAP,KAAiB0E,EAAjB,KACA,EAA0B9gB,mBAAS,IAAnC,mBAAO4Y,EAAP,KAAciE,EAAd,KACA,EAA4B7c,mBAAS,IAArC,mBAAO6Y,EAAP,KAAekD,EAAf,KAEMuB,EAAYC,iBAAO,MACzB,EAA0BrE,KAAlBvV,EAAR,EAAQA,OACAtD,GADR,EAAgB+B,MACY9B,cAApBD,iBAEF0gB,EAAW,uCAAG,sBAAAtgB,EAAA,6DAChBge,GAAkB,GADF,SAEV/d,IACDkE,IAAI,sBAAuB,CACxBiW,OAAQ,CACJqE,aAAc0B,EAAS1B,gBAG9Bne,MAAK,SAAAC,GACF,IAAIggB,EAAW,gBAAQJ,GACvBI,EAAY7E,KAAOnb,EAAIG,KAAKA,KAAKgb,KACjC6E,EAAY5E,SAAWpb,EAAIG,KAAKA,KAAKib,SAErC0E,EAAY9f,EAAIG,KAAKA,KAAKib,UAC1ByE,EAAYG,MAEfrf,OAAM,SAAAC,GACHvB,EAAgB,8CAA+C,CAAE0B,QAAS,aAjBlE,OAoBhB0c,GAAkB,GApBF,2CAAH,qDAuBjB9Z,qBAAU,WACDic,EAAS1B,cAGd6B,MACD,CAACH,EAAS1B,eAQb,IASMhD,EAAS,uCAAG,sBAAAzb,EAAA,6DACdge,GAAkB,GAClB1C,EAAU,IAFI,SAGRrb,IACDC,KAAK,YAAa,CACfwb,KATDmB,EAAU7C,QAAQgD,WAUjBrB,SAAUA,EACVxD,MAAOA,IAEV7X,MAAK,SAAAC,GACF+a,EAAUM,KAAKC,MAAMtb,EAAIG,MAAM0X,WAElClX,OAAM,SAAAC,GACHvB,EAAgB,gCAAiC,CAAE0B,QAAS,aAbtD,OAgBd0c,GAAkB,GAhBJ,2CAAH,qDAmBf,OACI,eAAC,KAAD,CAAWrD,QAASzX,EAAS,GAAK,IAAK0X,QAAS1X,EAAS,GAAI2X,YAAa3X,EAAS,GAAK,IAAK4X,MAAM,aAAnG,UACI,eAAC,KAAD,WACI,sBAAKvZ,UAAU,kBAAf,UACI,+BACI,eAAC,IAAD,CACIE,MAAO,CACHiB,MAAO,qBACPM,gBAAiB,OACjBrB,MAAO,QAEX+E,QAAS+U,EANb,UAQI,cAACQ,GAAA,EAAD,IARJ,WAYJ,iCACI,sBAAMxa,MAAO,CAACiB,MAAO,OAAQiE,YAAa,QAA1C,wBAGA,eAAC,KAAD,CAAQ9B,MAAO8W,EAAUla,MAAO,CAAEE,MAAO,KAAOyK,SAjDvC,SAAAvH,GACzBwb,EAAYxb,IAgDI,UACI,cAAC,GAAD,CAAQA,MAAM,MAAd,iBACA,cAAC,GAAD,CAAQA,MAAM,IAAd,eACA,cAAC,GAAD,CAAQA,MAAM,OAAd,kBACA,cAAC,GAAD,CAAQA,MAAM,SAAd,6BAIZ,cAAC,KAAD,CAEI2b,QAAS,CAAEhU,UAAU,GACrB3H,MAAOsb,EAASzE,MAAQ,GACxB3U,MAAM,UACNyF,UAAU,EACVmP,SAAUA,EAEVsB,QArEhB,SAA8BhJ,EAAQiJ,GAClCL,EAAU7C,QAAU/F,IA6DHkM,EAAS1B,iBAUtB,cAAC,KAAD,CAAMhd,MAAO,CAAEyB,OAAQ,OAAQgb,MAAO,QAAtC,SACI,sBAAKzc,MAAO,CAAEkD,QAAS,cAAehD,MAAO,OAAQuB,OAAQ,QAA7D,UACI,sBACIzB,MAAO,CACHE,MAAO,OACPkF,WAAY,2BACZW,QAAS,MACT2V,YAAa,gCALrB,UAQI,qBAAK5b,UAAU,0BAAf,mBACA,0BACIsD,MAAOsT,EACP/L,SAAU,SAAAC,GACN+P,EAAS/P,EAAEC,OAAOzH,OAClByW,EAAU,KAEd/Z,UAAU,kCAGlB,sBAAKE,MAAO,CAAEE,MAAO,OAAQkF,WAAY,2BAA4BW,QAAS,OAA9E,UACI,qBAAKjG,UAAU,0BAAf,qBACA,qBACIE,MAAO,CAAEuX,WAAY,MAAOd,UAAW,OAAQjV,SAAU,QACzD1B,UAAU,mBAFd,SAIK6W,eCnJd,SAASqI,GAAT,GAAyG,IAA/EpG,EAA8E,EAA9EA,gBAAiB4F,EAA6D,EAA7DA,YAAavW,EAAgD,EAAhDA,SAAuByW,GAAyB,EAAtCxc,YAAsC,EAAzBwc,UAAUC,EAAe,EAAfA,YAC9FhS,EAAuB,SAAAC,GAAS,MAAK,CACvCC,eAAgB,gBAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,QAASC,EAA3C,EAA2CA,aAA3C,OACZ,sBAAKjN,MAAO,CAAE+F,QAAS,GAAvB,UACI,cAAC,IAAD,CACImH,IAAK,SAAAC,KAGLC,YAAW,iBAAYR,GACvBxJ,MAAO2J,EAAa,GACpBpC,SAAU,SAAAC,GAAC,OAAIkC,EAAgBlC,EAAEC,OAAOzH,MAAQ,CAACwH,EAAEC,OAAOzH,OAAS,KACnEiK,aAAc,kBAAMC,EAAaP,EAAcC,EAASJ,IACxD5M,MAAO,CAAEsK,aAAc,EAAGpH,QAAS,WAEvC,eAAC,KAAD,WACI,cAAC,IAAD,CACIrB,KAAK,UACLoD,QAAS,kBAAMqI,EAAaP,EAAcC,EAASJ,IACnDpH,KAAM,cAAC+H,GAAA,EAAD,IACNhK,KAAK,QACLvD,MAAO,CAAEE,MAAO,IALpB,oBASA,cAAC,IAAD,CAAQ+E,QAAS,kBAAMuI,EAAYP,IAAe1J,KAAK,QAAQvD,MAAO,CAAEE,MAAO,IAA/E,mBAGA,cAAC,IAAD,CACI2B,KAAK,OACL0B,KAAK,QACL0B,QAAS,WACL+H,EAAQ,CAAES,eAAe,IAEzBC,EAAcX,EAAa,IAC3BY,EAAkBf,IAP1B,2BAeZgB,WAAY,SAAAC,GAAQ,OAAI,cAACN,GAAA,EAAD,CAAgBvN,MAAO,CAAEiB,MAAO4M,EAAW,eAAYrE,MAC/EsE,SAAU,SAAC1K,EAAO2K,GAAR,OACNA,EAAOnB,GAAamB,EAAOnB,GAAWoB,WAAWC,cAAcC,SAAS9K,EAAM6K,eAAiB,IACnGE,8BAA+B,SAAAtI,KAI/BuI,OAAQ,SAAAC,GAAI,OACRC,IAAmB1B,EACf,cAAC,KAAD,CACI2B,eAAgB,CAAEhN,gBAAiB,UAAWwE,QAAS,GACvDyI,YAAa,CAACC,GACdC,YAAU,EACVC,gBAAiBN,EAAOA,EAAKL,WAAa,KAG9CK,KAGNf,EAAe,SAACP,EAAcC,EAASJ,GACzCI,IAEAU,EAAcX,EAAa,IAC3BY,EAAkBf,IAEhBY,EAAc,SAAAP,GAChBA,IACAS,EAAc,KAElB,EAAoC5P,mBAAS,IAA7C,mBAAO2Q,EAAP,KAAmBf,EAAnB,KACA,EAA4C5P,mBAAS,IAArD,mBAAOwQ,EAAP,KAAuBX,EAAvB,KAEA,EAAkC7P,oBAAS,GAA3C,mBAAOmhB,EAAP,KAAkBC,EAAlB,KAUMhQ,GATsB9Q,cAApBD,gBASQ,CAAC,cAETN,MAAO,WACP+O,UAAW,WACXuC,IAAK,YACFxC,EAAqB,aALhB,cAQR9O,MAAO,OACP+O,UAAW,OACXuC,IAAK,QACFxC,EAAqB,SAE5B,CACI9O,MAAO,gBACPuR,SAAUoP,EAAYpV,cAAc1F,KAAI,SAAC+G,EAAOC,GAC5C,MAAO,CACH7M,MAAO4M,EAEP0E,IAAK1E,EACL2D,OAAQ,SAAAiB,GAAG,OAAIA,EAAIjG,cAAcsB,QAGzCH,OAA6C,IAArCiU,EAAYpV,cAAc5F,QAEtC,CACI3F,MAAO,iBAAmB+a,EAAgBuG,WAAa,IACvDhQ,IAAK,QAELf,OAAQ,SAAAiB,GAAG,OAA0B,IAArBA,EAAI2N,aAAqB,yCAAI3N,EAAI+P,aAAR,OAA4B,8BACrE7U,OAAuC,IAA/BqO,EAAgBuG,YAE5B,CACIthB,MAAO,eACPsR,IAAK,cAELf,OAAQ,SAAAiB,GAAG,OAA0B,IAArBA,EAAI2N,aAAqB,yCAAIla,IAAOuM,EAAI8M,aAAalZ,OAAO,mBAAnC,OAA6D,+BAE1G,CACIpF,MAAO,YACPsR,IAAK,YACLjP,MAAO,QACPkO,OAAQ,SAAAiB,GAAG,OACc,IAArBA,EAAI2N,aACA,cAAC,IAAD,CACI/X,QAAS,YApDN,SAAAoK,GACfqP,EAAS1B,eAAiB3N,EAAI2N,cAC9B2B,EAAYtP,GAEhB6P,GAAa,GAiDOG,CAAehQ,IAFvB,6BAQA,wDAGdrE,QAAO,SAAAsE,GAAI,OAAKA,EAAK/E,WAEvB,OACI,gCACI,qBAAKvK,MAAO,CAAEyW,UAAW,OAAQ6I,YAAa,OAAQC,cAAe,OAAQtZ,aAAc,kBAA3F,SACI,cAAC,IAAD,CACIhB,QAAS,WACLia,GAAa,IAEjBlf,MAAO,CAAEmE,OAAQ,oBACjBtC,KAAK,UALT,qCAUJ,sBAAK7B,MAAO,CAAE+F,QAAS,OAAQE,aAAc,kBAA7C,UACI,sBAAKnG,UAAU,4BAAf,UACI,sBAAME,MAAO,CAAE6D,WAAY,OAAQX,QAAS,cAAeY,SAAU,SAArE,sBACC4a,EAAS/f,YAEd,sBAAKmB,UAAU,4BAAf,UACI,sBAAME,MAAO,CAAE6D,WAAY,OAAQX,QAAS,cAAeY,SAAU,SAArE,kBACC4a,EAASte,QAEa,IAA1Bse,EAAS1B,aACN,sBAAKld,UAAU,4BAAf,UACI,sBAAME,MAAO,CAAE6D,WAAY,OAAQX,QAAS,cAAeY,SAAU,SAArE,0BACChB,IAAO4b,EAASvC,aAAalZ,OAAO,sBAExC,6BACJub,EAAYpV,cAAc1F,KAAI,SAAC+G,EAAOC,GAAR,OAC3B,sBAAK5K,UAAU,4BAAf,UACI,sBAAME,MAAO,CAAE6D,WAAY,OAAQX,QAAS,cAAeY,SAAU,SAArE,SAAiF2G,IAChFiU,EAAStV,cAAcsB,SAGA,IAA/BkO,EAAgBuG,WACb,sBAAKrf,UAAU,4BAAf,UACI,sBAAME,MAAO,CAAE6D,WAAY,OAAQX,QAAS,cAAeY,SAAU,SAArE,0BAKC4a,EAASU,aANd,IAM6BxG,EAAgBuG,cAI7C,gCAGR,cAAC,KAAD,CACIthB,MAAO,qBAAKmC,MAAO,CAAEE,MAAO,UAArB,yBACPob,UAAQ,EACRzV,QAASoZ,EACT9Z,OAAQ,KAERQ,UAAU,EACViE,SAAU,WACNsV,GAAa,IAEjBhf,MAAM,OAVV,SAaI,cAAC,KAAD,CAAOgP,QAASA,EAASK,WAAYtH,EAAU1E,KAAK,QAAQiM,YAAY,SC1MzE,SAASmN,GAAT,GAA+B,IAAZ+B,EAAW,EAAXA,SACxBlW,EAAc,IAAIC,gBAAgBC,cAAcC,QAetD,OACI,qCACI,cAAC,IAAD,CAAQ1D,QAfI,WACtBsY,MAAM,GAAD,OAAIb,GAAJ,0CAAgDlU,EAAY9F,IAAI,OAAhE,yBAAuFgc,EAAS1B,aAAhG,kBAAsHje,aAAa8c,QAAQ,cAC9Ihd,MAAK,SAAAc,GACLA,EAAS6d,OAAO3e,MAAK,SAAA2e,GACpB,IAAIhW,EAAMrI,OAAOse,IAAIC,gBAAgBF,GACjCjf,EAAIX,SAAS6S,cAAc,KAC/BlS,EAAEc,KAAOmI,EACTjJ,EAAEof,SAAW,iBACbpf,EAAEqf,eAOmC5d,MAAO,CAAC0B,UAAW,OAAQmC,WAAY,QAAShC,KAAK,UAAnF,0BAGA,cAAC,KAAD,CACIyc,UAAU,EACVT,SAAU,MACVC,SAAQ,UAAKpB,GAAL,0CAAiDlU,EAAY9F,IAAI,OAAjE,yBAAwFgc,EAAS1B,aAAjG,kBAAuHje,aAAa8c,QAAQ,cAC/I6C,EAAS1B,iBChBf,SAASwC,KACpB5hB,SAASC,MAAQ,2BAEjB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4CF,oBAAS,GAArD,mBAAOwe,EAAP,KAAuBC,EAAvB,KACA,EAA8Cze,mBAAS,IAAvD,mBAAO8a,EAAP,KAAwBmD,EAAxB,KACA,EAAsCje,mBAAS,IAA/C,mBAAO0gB,EAAP,KAAoBC,EAApB,KACA,EAAgC3gB,mBAAS,IAAzC,mBAAOmK,EAAP,KAAiB/F,EAAjB,KACA,EAAgCpE,mBAAS,IAAzC,mBAAO4gB,EAAP,KAAiBC,EAAjB,KAEMnW,EAAc,IAAIC,gBAAgBC,cAAcC,QAC9CxK,EAAoBC,cAApBD,gBACFoE,EAAWC,cACXvE,EAAUC,cAGhBuE,oBAAS,sBAAC,sBAAAlE,EAAA,sDACNgE,EAASJ,EAAe,CACpB,CACI,KAAQ,WACR,IAAO,aAEX,CACI,KAAQqc,EAAYxa,SACpB,IAAO,aAAewa,EAAY5X,QAEtC,CACI,KAAQ,cACR,IAAO,qBAAuB4B,EAAY9F,IAAI,WAZhD,2CAeP,CAAC8b,EAAY5X,SAEhBnE,oBAAS,sBAAC,sBAAAlE,EAAA,6DACNP,GAAW,GACNwK,EAAYI,IAAI,SACjBzK,EAAgB,oBAAqB,CAAE0B,QAAS,YAChD5B,EAAQiS,QAAQ,cAJd,SAMA1R,IACDkE,IAAI,wBAAyB,CAC1BiW,OAAQ,CACJ/U,WAAY4E,EAAY9F,IAAI,UAGnC7D,MAAK,SAAAC,GACFid,EAAmB,CACfle,MAAOiB,EAAIG,KAAK2Z,gBAAgB/a,MAChCmY,YAAa6C,eAAYC,kBAAkBC,0BAAeja,EAAIG,KAAK2Z,gBAAgBrC,SAASP,cAC5FE,OAAQpX,EAAIG,KAAK2Z,gBAAgBrC,SAASL,OAC1CnT,QAASjE,EAAIG,KAAK2Z,gBAAgB7V,QAClCoc,WAAYrgB,EAAIG,KAAK2Z,gBAAgBnB,UACrCxT,MAAOnF,EAAIG,KAAK2Z,gBAAgB3U,QAGpCwa,EAAe,CACX7X,OAAQ9H,EAAIG,KAAKuf,YAAY5X,OAC7B5C,SAAUlF,EAAIG,KAAKuf,YAAYxa,SAC/BoF,cAAetK,EAAIG,KAAKuf,YAAYpV,gBAGxClH,EAAYpD,EAAIG,KAAKgJ,UAGrB,IADA,IAAI6I,EAAS,GACL7F,EAAI,EAAGA,EAAInM,EAAIG,KAAKgJ,SAASzE,OAAQyH,IACzC,GAAyC,IAAtCnM,EAAIG,KAAKgJ,SAASgD,GAAG+R,aAAmB,CACvClM,EAAShS,EAAIG,KAAKgJ,SAASgD,GAC3B,MAGLA,IAAMnM,EAAIG,KAAKgJ,SAASzE,SACvBrF,EAAgB,0BAA2B,CAAE0B,QAAS,SACtD5B,EAAQiS,QAAQ,aAAepR,EAAIG,KAAKuf,YAAY5X,SAExD+X,EAAY7N,MAGfrR,OAAM,SAAAC,GAEH,IACI,GAA4B,MAAxBA,EAAIC,SAASgD,OAEb,YADAJ,EAASR,KAGb5D,EAAgBuB,EAAIC,SAASV,KAAKW,OAAQ,CAAEC,QAAS,UACrD5B,EAAQiS,QAAQ,aAClB,MAAO1Q,GACLrB,EAAgB,+CAAgD,CAAE0B,QAAS,UAC3E5B,EAAQiS,QAAQ,iBAvDtB,OA0DFoK,YAAW,WAEPtc,GAAW,KACZ,KA7DD,2CA8DP,IAsBH,OAAOD,EACH,sBAAK+B,UAAU,0BAAf,UACI,2DACA,qBAAKE,MAAO,CAAE0B,UAAW,OAAQ4B,SAAU,YAA3C,SACI,cAAC,IAAD,CAAkBC,KAAK,QAAQtC,MAAM,6BAI7C,gCACI,cAAC,KAAD,CAAOqa,UAAQ,EAACzV,QAASyW,EAAgBnX,OAAQ,KAAMW,UAAW,CAAEC,QAAS,OAASJ,UAAU,EAAhG,SACI,cAAC,IAAD,CAAkBpC,KAAK,QAAQtC,MAAM,0BAEzC,eAAC,KAAD,CAAWjB,MAAO,CAAEsD,SAAU,YAAc4V,QAAS,IAAKC,QAAS,IAAKC,YAAa,IAAKC,MAAM,WAAhG,UACQ,eAAC,KAAD,WACI,cAAC2F,GAAD,CACIpG,gBAAiBA,EACjB4F,YAAaA,EACbvW,SAAUA,EACV/F,YAAaA,EACbwc,SAAUA,EACVC,YAAaA,IAEjB,cAACrH,GAAD,CACIzZ,MAAO+a,EAAgB/a,MACvBmY,YAAa4C,EAAgB5C,YAC7BE,OAAQ0C,EAAgB1C,YA5Cf,SAA1B0C,EAAgB3U,MAEX,cAAC,GAAD,CACIsY,kBAAmBA,EACnBmC,SAAUA,EACVC,YAAaA,IAMjB,cAAC,GAAD,CACID,SAAUA,U,wBChHtB7O,GAAYC,KAAZD,QAGO,SAAS4P,KACpB,MAA8B3hB,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMyG,EAAcC,aAAY,SAAApF,GAAK,OAAIA,EAAMmF,eACxCtG,EAAmBC,cAAnBD,gBACDoE,EAAWC,cACXvE,EAAUC,cAEhBuE,qBAAU,WACNF,EAASJ,EAAc,CACnB,CACI/B,KAAM,WACNoH,IAAK,uBAGd,IAEH5J,SAASC,MAAQ,6BAEjB,IAAM6hB,EAAc,uCAAG,WAAMphB,GAAN,SAAAC,EAAA,yDAChBkG,EAAY9F,WAAaL,EAAOK,SADhB,uBAEfR,EAAgB,uBAAwB,CAAC0B,QAAS,SAFnC,iCAKnB7B,GAAW,GALQ,SAObQ,IAAMC,KAAK,wBAAyB,CACtCE,SAAUL,EAAOK,WAEhBE,MAAK,SAAAC,GACFC,aAAaC,QAAQ,WAAYF,EAAIG,KAAKC,cAC1C,IAAMygB,EAAUC,YAAW9gB,EAAIG,KAAKC,cAC9BD,EAAO,CACT4gB,UAAU,EACV7Q,OAAQ2Q,EAAQ3Q,OAChBrQ,SAAUghB,EAAQhhB,SAClBkK,UAAW8W,EAAQ9W,UACnBiX,SAAUH,EAAQG,SAClBC,MAAOJ,EAAQI,OAEnBxd,EAASZ,EAAU1C,IACnBd,EAAgB,uBAAyBwhB,EAAQhhB,SAAU,CAACkB,QAAS,eAExEJ,OAAM,SAAAC,GAEH,IAAIA,EAAIC,SAGJ,OAFAxB,EAAgB,sCAAuC,CAAC0B,QAAS,eACjE7B,GAAW,GAGY,MAAxB0B,EAAIC,SAASgD,QACZxE,EAAgBuB,EAAIC,SAASV,KAAKW,OAAQ,CACtCC,QAAS,UAEb5B,EAAQiS,QAAQ,WAGhB/R,EAAgBuB,EAAIC,SAASV,KAAKW,OAAQ,CACtCC,QAAS,aAvCN,OA4CnB7B,GAAW,GA5CQ,2CAAH,sDAgDpB,OACI,eAAC,KAAD,CACImT,iBAAkB,WAClB6O,mBACI,cAAC,IAAD,CAAMrc,GAAG,mBAAmB3D,MAAO,CAACkF,YAAa,QAAjD,SACI,cAAC,IAAD,CAAQkG,SAAUrN,EAASoN,QAAM,EAAjC,+BAKR8U,wBAAwB,EAT5B,UAWQ,cAAC,GAAD,CACI7O,IACI,sBAAKtR,UAAU,4BAA4BE,MAAO,CAACwB,SAAU,QAA7D,UACI,cAAC,KAAD,IACA,sBAAMxB,MAAO,CAAEmE,OAAQ,UAAWjB,QAAS,eAA3C,wBAMRlD,MAAO,CAACyW,UAAW,QACnBrL,SAAUrN,EAXd,SAaI,qBAAK+B,UAAU,oBAAoBE,MAAO,CAAC+F,QAAS,mBAApD,SACI,sBAAKjG,UAAU,qBAAf,UACI,sBAAKA,UAAU,4BAAf,UACI,cAAC,IAAD,IACA,sBAAME,MAAO,CAAE6D,WAAY,OAAQX,QAAS,cAAeY,SAAU,SAArE,kBAGCW,EAAYoE,UAAY,IAAMpE,EAAYqb,YAE/C,sBAAKhgB,UAAU,4BAAf,UACI,cAAC,KAAD,IACA,sBAAME,MAAO,CAAE6D,WAAY,OAAQX,QAAS,cAAeY,SAAU,SAArE,mBAGCW,EAAYsb,SAEjB,sBAAKjgB,UAAU,4BAAf,UACI,cAAC,KAAD,IACA,sBAAME,MAAO,CAAE6D,WAAY,OAAQX,QAAS,cAAeY,SAAU,SAArE,sBAGCW,EAAY9F,kBAzBrB,YA8BR,cAAC,GAAD,CACIyS,IACI,sBAAKtR,UAAU,4BAA4BE,MAAO,CAACwB,SAAU,OAAQuE,QAAS,MAAO5B,OAAQ,OAA7F,UACI,cAAC,KAAD,IAEA,sBAAMnE,MAAO,CAAEmE,OAAQ,UAAWjB,QAAS,eAA3C,gCAMR+c,wBAAwB,EAX5B,SAaI,qBAAKngB,UAAU,oBAAoBE,MAAO,CAACgM,SAAU,QAASnI,WAAY,QAA1E,SACI,eAAC,IAAD,CACIzD,KAAK,QACL/B,SAAUqhB,EACV5V,OAAO,WACPtJ,cAAe,CACXsJ,OAAQ,YAEZhJ,aAAa,MACbhB,UAAU,cARd,UAUI,cAAC,IAAKiB,KAAN,CACIC,MACI,wBAAOhB,MAAO,CAAEiB,MAAO,sBAAvB,UACI,sBAAMjB,MAAO,CAACkgB,aAAa,OAA3B,sBACA,cAAC,KAAD,CAASriB,MAAM,yJAAf,SACI,cAACsiB,GAAA,EAAD,SAIZ/f,KAAK,WACLc,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,uCAEb,CACIgf,QAAS,IAAIC,OAAO,2BACpBjf,QAAQ,qBAjBpB,SAqBI,cAAC,IAAD,CAAOgK,SAAUrN,EAASmM,aAAczF,EAAY9F,aAExD,cAAC,IAAKoC,KAAN,UAEI,cAAC,IAAD,CACIO,SAAS,SACTO,KAAK,UACL9D,QAASA,EAHb,SAKKA,EAAU,aAAe,mBA5CtC,qB,uDCvIhBuiB,GAASC,KAATD,KAEO,SAASE,KACpB,IAAMje,EAAWC,cAcjB,OAbA5E,SAASC,MAAQ,wBAEjB4E,qBAAU,WACNF,EACIJ,EAAc,CACV,CACI/B,KAAM,WACNoH,IAAK,eAIlB,IAGC,sBAAK1H,UAAU,gBAAf,UACI,cAAC,KAAD,CAAa2gB,QAAM,EAACzgB,MAAO,CAACyD,WAAY,OAASxC,MAAM,6BACvD,sBAAKnB,UAAU,gBAAf,UACI,qBACIC,IAAI,aACJC,MAAO,CAAEC,UAAW,SAAUC,MAAO,QAASC,UAAW,mCAAoCmK,aAAc,UAE/G,qBAAKxK,UAAU,gBAAf,SACI,6CAGJ,sBAAKA,UAAU,gBAAf,UACI,cAAC,KAAD,CACIE,MAAO,CAAEE,MAAO,KAChBwgB,MAAO,qBAAKC,IAAI,QAAQ5gB,IAAI,yDAC5B6gB,QAAS,CAED,mBAAGvhB,KAAK,mDAAmDwL,OAAO,SAAlE,SACI,cAAC,IAAD,CAAU/K,UAAU,sBAAyB,YAIjD,mBAAGT,KAAK,kCAAkCwL,OAAO,SAAjD,SACI,cAAC,KAAD,CAAS/K,UAAU,sBAAyB,aAIhD,mBAAGT,KAAK,sDAAsDwL,OAAO,SAArE,SACI,cAAC,IAAD,CAAY/K,UAAU,sBAAyB,cAInD,cAAC,KAAD,CAASjC,MAAM,0BAAf,SACI,mBAAGwB,KAAK,iCAAiCwL,OAAO,SAAhD,SACI,cAAC,KAAD,CAAS/K,UAAU,sBAAyB,cAtBhE,SA4BI,cAACwgB,GAAD,CACIziB,MAAM,eACNmY,YACI,iCACI,qBAAKhW,MAAO,CAACyW,UAAW,OAAQnM,aAAc,QAA9C,8FAGA,qBAAKtK,MAAO,CAACyW,UAAW,QAAxB,sCAGA,qBAAKzW,MAAO,CAACyW,UAAW,QAAxB,oCAOhB,cAAC,KAAD,CACIzW,MAAO,CAAEE,MAAO,KAChBwgB,MAAO,qBAAKC,IAAI,SAAS5gB,IAAI,qCAC7B6gB,QAAS,CAED,mBAAGvhB,KAAK,mCAAmCwL,OAAO,SAAlD,SACI,cAAC,IAAD,CAAU/K,UAAU,sBAAyB,YAIjD,mBAAGT,KAAK,uDAAuDwL,OAAO,SAAtE,SACI,cAAC,IAAD,CAAY/K,UAAU,sBAAyB,cAInD,cAAC,KAAD,CAASjC,MAAM,0BAAf,SACI,mBAAGwB,KAAK,iCAAiCwL,OAAO,SAAhD,SACI,cAAC,KAAD,CAAS/K,UAAU,sBAAyB,cAjBhE,SAuBI,cAACwgB,GAAD,CACIziB,MAAM,iBACNmY,YACI,iCACI,qBAAKhW,MAAO,CAACyW,UAAW,OAAQnM,aAAc,QAA9C,8FAGA,qBAAKtK,MAAO,CAACyW,UAAW,QAAxB,mCAGA,qBAAKzW,MAAO,CAACyW,UAAW,QAAxB,0CASpB,qBAAK3W,UAAU,kBAAf,SACI,8BACI,sBAAME,MAAO,CAACiB,MAAO,6BAArB,wLAIA,uBACA,uBACA,+CACA,qBAAKnB,UAAU,eAAf,SACI,+BACI,iIAIA,yHAGA,2KAIA,mFAGA,0HAGA,uGAGA,6EAGA,uLAIA,8GAGA,kOAKA,4HCrJjB,SAAS+gB,KACpB,MAA8B/iB,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMyG,EAAcC,aAAY,SAAApF,GAAK,OAAIA,EAAMmF,eACzClC,EAAWC,cACTrE,EAAoBC,cAApBD,gBAEF2iB,EAAc,SAACphB,GACbA,EAAIC,UAImB,MAAxBD,EAAIC,SAASgD,OACZJ,EAASR,KAJT5D,EAAgB,+DAAgE,CAAC0B,QAAS,WAW5FwI,EAAc,uCAAG,sBAAA9J,EAAA,sDACnBgE,EvC1CG,CACHV,KAAM,4BuC0CNrD,IAAMkE,IAAI,aACL7D,MAAK,SAAAC,GACFyD,EAASN,EAAWnD,EAAIG,KAAK8H,UAC7BxE,EvCxCL,CACHV,KAAM,kCuCyCDpC,OAAM,SAAAC,GACHohB,EAAYphB,MARD,2CAAH,qDAYd6R,EAAoB,uCAAG,sBAAAhT,EAAA,sDACzBgE,EvCjCG,CACHV,KAAM,6BuCiCNrD,IAAMkE,IAAI,mBACL7D,MAAK,SAAAC,GACFyD,EAASL,EAAYpD,EAAIG,KAAKyH,gBAC9BnE,EvC/BL,CACHV,KAAM,mCuCgCDpC,OAAM,SAAAC,GACHohB,EAAYphB,MARK,2CAAH,qDA6C1B,OAjCA+C,qBAAU,WACN,IACI,GAAI1D,aAAagiB,SAAU,CACvB,IAAMC,EAAQjiB,aAAa8c,QAAQ,YAE7B8D,EAAUC,YAAWoB,GAKrBC,EAAcC,KAAKC,MAAQ,IACjC,GAAIxB,EAAQyB,KAAOH,EAAa,CAC5B,IAAMhiB,EAAO,CACT4gB,UAAU,EACV7Q,OAAQ2Q,EAAQ3Q,OAChBrQ,SAAUghB,EAAQhhB,SAClBkK,UAAW8W,EAAQ9W,UACnBiX,SAAUH,EAAQG,SAClBC,MAAOJ,EAAQI,OAGnBxd,EAASZ,EAAU1C,IACnBsS,IACAlJ,MAGV,MAAO7I,GACLuK,QAAQC,IAAIxK,GAGhBxB,GAAW,KACZ,IAEID,EACH,0CACC0G,EAAYob,SAWb,qCACI,cAACxY,GAAD,IAEI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOga,OAAK,EAACC,KAAK,YAAlB,SACI,cAAClZ,GAAD,CAAUC,eAAgBA,MAE9B,cAAC,IAAD,CAAOgZ,OAAK,EAACC,KAAK,gBAAlB,SACI,cAACvR,GAAD,CAAS1H,eAAgBA,MAE7B,cAAC,IAAD,CAAOgZ,OAAK,EAACC,KAAK,aAAlB,SACI,cAAC9P,GAAD,MAEJ,cAAC,IAAD,CAAO6P,OAAK,EAACC,KAAK,kBAAlB,SACI,cAAChQ,GAAD,CAAaC,qBAAsBA,MAEvC,cAAC,IAAD,CAAO8P,OAAK,EAACC,KAAK,sBAAlB,SACI,cAACtP,GAAD,MAEJ,cAAC,IAAD,CAAOqP,OAAK,EAACC,KAAK,iBAAlB,SACI,cAAC5I,GAAD,MAEJ,cAAC,IAAD,CAAO2I,OAAK,EAACC,KAAK,YAAlB,SACI,cAAC/C,GAAD,MAEJ,cAAC,IAAD,CAAO8C,OAAK,EAACC,KAAK,eAAlB,SACI,cAAC9B,GAAD,MAEJ,cAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,QAAlB,SACI,cAAC3F,GAAD,MAEJ,cAAC,IAAD,CAAO0F,OAAK,EAACC,KAAK,iBAAlB,SACI,cAAC7B,GAAD,MAEJ,cAAC,IAAD,CAAO4B,OAAK,EAACC,KAAK,SAAlB,SACI,cAACd,GAAD,MAEJ,cAAC,IAAD,CAAOc,KAAK,IAAZ,SACI,cAAClf,EAAD,YAhDhB,cAAC,IAAD,CACI0C,MAAI,EACJnB,GAAI,CACA4d,SAAU,SACVjiB,MAAO,CACHC,KAAMJ,OAAOC,SAASC,SCpG3B,SAASmiB,KACpB5jB,SAASC,MAAQ,4BAEjB,MAAkCC,mBAAS,IAA3C,mBAAO2jB,EAAP,KAAkBC,EAAlB,KACA,EAA4B5jB,mBAAS,IAArC,mBAAO6jB,EAAP,KAAeC,EAAf,KACA,EAAsC9jB,mBAAS,WAA/C,mBAAO+jB,EAAP,KAAoBC,EAApB,KAEMtZ,EAAc,IAAIC,gBAAgBC,cAAcC,QAC9CxK,EAAoBC,cAApBD,gBA4CR,OA1CAsE,oBAAS,sBAAC,sBAAAlE,EAAA,yDACHkjB,GAAa,IACZtiB,OAAOC,SAASC,KAAO,UAGb,KAAXsiB,EALG,mBAMEnZ,EAAYI,IAAI,UAAaJ,EAAYI,IAAI,OAN/C,gBAOEgZ,EAAU,uBACVzjB,EAAgB,sBAAuB,CACnC0B,QAAS,YATf,sCAaQrB,IAAMC,KAAK,qBAAsB,CACnCshB,MAAOvX,EAAY9F,IAAI,SACvBqf,IAAKvZ,EAAY9F,IAAI,SAEpB7D,MAAK,SAAAC,GACFX,EAAgB,iBAAkB,CAC9B0B,QAAS,YAEb+hB,EAAU,YAAcpZ,EAAY9F,IAAI,SAAW,aACnDof,EAAe,cAElBriB,OAAM,SAAAC,GACH,IACIkiB,EAAUliB,EAAIC,SAASV,KAAKW,QAC9B,MAAOJ,GACLoiB,EAAU,sBAEdzjB,EAAgB,sBAAuB,CACnC0B,QAAS,aA/BvB,OAqCNya,YAAW,WACPoH,EAAaD,EAAY,KAC1B,KAvCG,4CAwCP,CAACA,IAGA,sBAAK3hB,UAAU,wBAAf,UACI,qBAAKA,UAAU,0BAAf,+CAIe,KAAX6hB,EACI,qBAAK3hB,MAAO,CAAC0B,UAAW,OAAQ4B,SAAU,YAA1C,SACI,cAAC,sBAAD,CAAoBrC,MAAM,0BAG9B,sBAAKnB,UAAU,yBAAf,UACI,4CAAc,sBAAME,MAAO,CAACiB,MAAO4gB,GAArB,SAAoCF,OAClD,kDAAoB,+BAAM,mBAAGtiB,KAAK,SAAR,qBAA1B,YAAqEoiB,EAArE,oBCjET,SAASO,KACpBpkB,SAASC,MAAQ,uBAEjB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEQG,EAAoBC,cAApBD,gBACJF,EAAUC,cAERG,EAAQ,uCAAG,WAAMC,GAAN,SAAAC,EAAA,yDACbP,GAAW,GACPM,EAAOM,WAAaN,EAAO2jB,WAFlB,uBAGT9jB,EAAgB,0BAA2B,CACvC0B,QAAS,UAEbya,YAAW,WACPtc,GAAW,KACZ,KARM,0CAWPQ,IACDC,KAAK,eAAgB,CAClBoK,UAAWvK,EAAOuK,UAClBiX,SAAUxhB,EAAOwhB,SACjBC,MAAOzhB,EAAOyhB,MACdnhB,SAAUN,EAAOM,SACjBF,SAAUJ,EAAOK,WAEpBE,MAAK,SAAAC,GACFX,EAAgB,sCAAwCG,EAAOyhB,MAAQ,gCAAiC,CACpGlgB,QAAS,YAEb7B,GAAW,GACXC,EAAQ6G,KAAK,aAEhBrF,OAAM,SAAAC,GACH,IACIvB,EAAgBuB,EAAIC,SAASV,KAAKW,OAAQ,CACtCC,QAAS,UAEf,MAAOL,GACLrB,EAAgB,uBAAwB,CACpC0B,QAAS,UAGjB7B,GAAW,MApCN,2CAAH,sDAuCd,OACI,sBAAK8B,UAAU,mBAAf,UACI,qBACIC,IAAI,aACJC,MAAO,CAAEC,UAAW,SAAUC,MAAO,QAASC,UAAW,sCAE7D,qBAAKL,UAAU,oBAAf,qBACA,eAAC,IAAD,CACIM,KAAK,QACL/B,SAAUA,EAEVyL,OAAO,WACPtJ,cAAe,CACXsJ,OAAQ,YAEZhJ,aAAa,MACbhB,UAAU,cATd,UAWI,sBAAKA,UAAU,wBAAf,UACI,cAAC,IAAKiB,KAAN,CACIC,MAAO,uBAAOhB,MAAO,CAAEiB,MAAO,sBAAvB,wBACPb,KAAK,YACLc,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,kCANrB,SAUI,cAAC,IAAD,MAEJ,cAAC,IAAKL,KAAN,CACIC,MAAO,uBAAOhB,MAAO,CAAEiB,MAAO,sBAAvB,uBACPb,KAAK,WACLc,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,iCANrB,SAUI,cAAC,IAAD,SAGR,sBAAKtB,UAAU,oBAAf,UACI,cAAC,IAAKiB,KAAN,CACIC,MAAO,uBAAOhB,MAAO,CAAEiB,MAAO,sBAAvB,mBACPb,KAAK,QACLc,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,oCAEb,CACIS,KAAM,QACNqgB,aAAa,EACb9gB,QAAQ,wCAXpB,SAeI,cAAC,IAAD,MAEJ,cAAC,IAAKL,KAAN,CACKC,MACG,wBAAOhB,MAAO,CAAEiB,MAAO,sBAAvB,UACI,sBAAMjB,MAAO,CAACkgB,aAAa,OAA3B,sBACA,cAAC,KAAD,CAASriB,MAAM,yJAAf,SACI,cAACsiB,GAAA,EAAD,SAIZ/f,KAAK,WACLc,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,iCAEb,CACIgf,QAAS,IAAIC,OAAO,2BACpBjf,QAAQ,qBAjBpB,SAqBI,cAAC,IAAD,SAGR,sBAAKtB,UAAU,wBAAf,UACI,cAAC,IAAKiB,KAAN,CACIC,MACI,wBAAOhB,MAAO,CAAEiB,MAAO,sBAAvB,UACI,sBAAMjB,MAAO,CAACkgB,aAAa,OAA3B,sBACA,cAAC,KAAD,CAAUriB,MAAM,6KAAhB,SACI,cAACsiB,GAAA,EAAD,SAIZ/f,KAAK,WACLc,MAAO,CACH,CACIC,UAAU,EACVC,QAAQ,0BAEZ,CACIA,QAAS,oBACTgf,QAAS,IAAIC,OAAO,+EAjBhC,SAqBI,cAAC,IAAMhf,SAAP,MAEJ,cAAC,IAAKN,KAAN,CACIC,MAAO,uBAAOhB,MAAO,CAAEiB,MAAO,sBAAvB,+BACPb,KAAK,aACLc,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,mCANrB,SAUI,cAAC,IAAMC,SAAP,SAGR,mBAAGhC,KAAK,SAAR,gDACC,cAAC,IAAK0B,KAAN,CACGR,WAAY,CACR4hB,OAAQ,EACR7hB,KAAM,IAHb,SAOG,cAAC,IAAD,CACIgB,SAAS,SACTtB,MAAO,CACHuB,gBAAiB,iBACjBrB,MAAO,OACPsB,SAAU,OACVC,OAAQ,OACRyD,YAAa,QACbxD,UAAU,QAEd3D,QAASA,EAVb,SAYKA,EAAU,aAAe,mBC9LnC,SAASqkB,KACpBxkB,SAASC,MAAQ,8BAEjB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoDF,oBAAS,GAA7D,mBAAOukB,EAAP,KAA2BC,EAA3B,KAEQnkB,EAAoBC,cAApBD,gBACJF,EAAUC,cAGRqkB,EAAU,uCAAG,WAAMxC,GAAN,SAAAxhB,EAAA,6DACfP,GAAW,GADI,SAETQ,IAAMkE,IAAI,gCAAiC,CAC7CiW,OAAQ,CACJoH,MAAOA,KAGVlhB,MAAK,SAAAC,GACFwjB,GAAsB,GACtBnkB,EAAgB,wBAA0B4hB,EAAO,CAC7ClgB,QAAS,eAGhBJ,OAAM,SAAAC,GACH,IAAIA,EAAIC,SAKJ,OAJAxB,EAAgB,uBAAwB,CACpC0B,QAAS,eAEb7B,GAAW,GAGY,MAAxB0B,EAAIC,SAASgD,QACZxE,EAAgBuB,EAAIC,SAASV,KAAKW,OAAQ,CACtCC,QAAS,UAEb5B,EAAQiS,QAAQ,WAGhB/R,EAAgBuB,EAAIC,SAASV,KAAKW,OAAQ,CACtCC,QAAS,aA7BV,OAiCf7B,GAAW,GAjCI,2CAAH,sDAoCVwkB,EAAc,uCAAG,WAAMlkB,GAAN,SAAAC,EAAA,6DACnBP,GAAW,GADQ,SAEbQ,IAAMC,KAAK,wBAAyB,CACtCshB,MAAOzhB,EAAOyhB,MACdnhB,SAAUN,EAAOM,SACjBmjB,IAAKzjB,EAAOyjB,MAEXljB,MAAK,SAAAC,GACFX,EAAgB,mBAAoB,CAChC0B,QAAS,YAEb5B,EAAQiS,QAAQ,aAEnBzQ,OAAM,SAAAC,GACCA,EAAIC,SAMRxB,EAAgBuB,EAAIC,SAASV,KAAKW,OAAQ,CACtCC,QAAS,UANT1B,EAAgB,uBAAwB,CACpC0B,QAAS,aAhBN,OAwBnB7B,GAAW,GAxBQ,2CAAH,sDA4BdK,EAAQ,uCAAG,WAAMC,GAAN,SAAAC,EAAA,yDACTD,EAAOyjB,IADE,gBAETQ,EAAWjkB,EAAOyhB,OAFT,yBAKLzhB,EAAOM,WAAaN,EAAO2jB,WALtB,uBAML9jB,EAAgB,0BAA2B,CACvC0B,QAAS,UAEb7B,GAAW,GATN,0BAYTwkB,EAAelkB,GAZN,2CAAH,sDAiBd,OACI,sBAAKwB,UAAU,mBAAf,UACI,qBACIC,IAAI,aACJC,MAAO,CAAEC,UAAW,SAAUC,MAAO,QAASC,UAAW,sCAE7D,qBAAKL,UAAU,oBAAf,6BACA,eAAC,IAAD,CACIM,KAAK,QACL0J,OAAO,WACPtJ,cAAe,CACXsJ,OAAQ,YAEZzL,SAAUA,EACVyC,aAAa,MACbhB,UAAU,cARd,UAUI,qBAAKA,UAAU,oBAAf,SACI,cAAC,IAAKiB,KAAN,CACIC,MAAO,uBAAOhB,MAAO,CAAEiB,MAAO,sBAAvB,mBACPb,KAAK,QACLc,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,oCAEb,CACIS,KAAM,QACNqgB,aAAa,IAVzB,SAcI,cAAC,IAAD,CAAOnX,SAAUsX,QAIrBA,EACA,qCACI,cAAC,IAAKthB,KAAN,CACIC,MAAO,uBAAOhB,MAAO,CAAEiB,MAAO,sBAAvB,iBACPb,KAAK,MACLc,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,iBAEb,CACIgf,QAAS,IAAIC,OAAO,cACpBjf,QAAQ,kBAVpB,SAcI,cAAC,IAAD,CAAOS,KAAK,aAEhB,sBAAK/B,UAAU,wBAAf,UACI,cAAC,IAAKiB,KAAN,CACKC,MACG,wBAAOhB,MAAO,CAAEiB,MAAO,sBAAvB,UACI,sBAAMjB,MAAO,CAACkgB,aAAa,OAA3B,sBACA,cAAC,KAAD,CAAUriB,MAAM,6KAAhB,SACI,cAACsiB,GAAA,EAAD,SAIZ/f,KAAK,WACLc,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,+BAEb,CACIA,QAAS,oBACTgf,QAAS,IAAIC,OAAO,6EAjBhC,SAqBI,cAAC,IAAMhf,SAAP,MAEJ,cAAC,IAAKN,KAAN,CACIC,MAAO,uBAAOhB,MAAO,CAAEiB,MAAO,sBAAvB,+BACPb,KAAK,aACLc,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,mCANrB,SAUI,cAAC,IAAMC,SAAP,SAGR,sBAAMrB,MAAO,CAACiB,MAAO,OAArB,0CAEC,6BAET,cAAC,IAAKF,KAAN,CACIR,WAAY,CACR4hB,OAAQ,EACR7hB,KAAM,IAHd,SAOI,cAAC,IAAD,CACIgB,SAAS,SACTtB,MAAO,CACHuB,gBAAiB,iBACjBrB,MAAO,OAEPuB,OAAQ,OACRyD,YAAa,QACbxD,UAAU,QAEd3D,QAASA,EAVb,SAYKskB,EAAqB,kBAAoB,oBC3MnD,SAASI,KAErB,OACD,cAAC,IAAD,UACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAOnB,KAAK,SAAZ,SACC,cAAC3jB,EAAD,MAED,cAAC,IAAD,CAAO2jB,KAAK,UAAZ,SACC,cAACU,GAAD,MAED,cAAC,IAAD,CAAOV,KAAK,gBAAZ,SACC,cAACE,GAAD,MAED,cAAC,IAAD,CAAOF,KAAK,mBAAZ,SACC,cAACc,GAAD,MAGD,eAAC,IAAD,CAAOd,KAAK,IAAZ,UAEoBviB,aAAa8c,QAAQ,cAAgB,cAAC,IAAD,CAAUlY,GAAI5E,aAAa8c,QAAQ,gBACtE,KAGrB,cAACgF,GAAD,YCjCL,IAYe6B,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/jB,MAAK,YAAkD,IAA/CgkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,UCPRO,GAAe,CACjBrD,UAAU,GAqBCpb,GAlBK,WAAmC,IAC/C4O,EADa/T,EAAiC,uDAAzB4jB,GAAcC,EAAW,uCAElD,OAAQA,EAAOthB,MACX,IAAK,gBAGD,OAFAwR,EAAQ,gBAAO8P,EAAOrhB,UACb+d,UAAW,EACbxM,EAEX,IAAK,YAGD,OAFAA,EAAW,IACFwM,UAAW,EACbxM,EAEX,QACI,OAAO/T,IClBb4jB,GAAe,CACjBnc,QAAS,GACTL,cAAe,GACfI,gBAAgB,EAChBL,sBAAsB,EACtBa,WAAY,IA4CD3C,GAzCU,WAAmC,IACpD0O,EADkB/T,EAAiC,uDAAzB4jB,GAAcC,EAAW,uCAEvD,OAAQA,EAAOthB,MACX,IAAK,0BAGD,OAFAwR,EAAQ,gBAAO/T,IACNwH,gBAAiB,EACnBuM,EACX,IAAK,6BAGD,OAFAA,EAAQ,gBAAO/T,IACNwH,gBAAiB,EACnBuM,EAEX,IAAK,2BAGD,OAFAA,EAAQ,gBAAO/T,IACNmH,sBAAuB,EACzB4M,EACX,IAAK,8BAGD,OAFAA,EAAQ,gBAAO/T,IACNmH,sBAAuB,EACzB4M,EAEX,IAAK,kBAGD,OAFAA,EAAQ,gBAAO/T,IACNyH,QAAUoc,EAAOrhB,QACnBuR,EAEX,IAAK,mBAGD,OAFAA,EAAQ,gBAAO/T,IACNoH,cAAgByc,EAAOrhB,QACzBuR,EAEX,IAAK,qBAGD,OAFAA,EAAQ,gBAAO/T,IACNgI,WAAa6b,EAAOrhB,QACtBuR,EAEX,QACI,OAAO/T,ICpCJ8jB,GALOC,aAAgB,CAClC5e,eACAE,sBCMJnG,IAAM8kB,SAASC,QAAU7G,GACzBle,IAAM8kB,SAAShG,QAAQkG,OAAvB,cAAiDzkB,aAAa8c,QAAQ,YAEtE,IAAM4H,GAAQC,aACVN,GACAjkB,OAAOwkB,8BAAgCxkB,OAAOwkB,gCAGlDC,IAASxV,OACR,cAAC,IAAMyV,WAAP,UACG,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACC,cAAC,IAAD,CACDK,SAAU,EACVC,aAAc,CACbC,SAAU,SACVC,WAAY,QAEbC,iBAAkB,IANjB,SAQF,cAAC,GAAD,UAKFtmB,SAASumB,eAAe,SAMzBzB,O","file":"static/js/main.5926f2d8.chunk.js","sourcesContent":["import { Form, Input, Button } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nexport default function Login() {\r\n    document.title = \"Login | Code Rooms\"\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const onFinish = async values => {\r\n        setLoading(true);\r\n        await axios\r\n            .post(\"/auth/login\", {\r\n                username: values.userName,\r\n                password: values.password,\r\n            })\r\n            .then(res => {\r\n                // console.log(res);\r\n                localStorage.setItem(\"JWTtoken\", res.data.access_token);\r\n                try {\r\n                    window.location.href = history.location.state.from;\r\n                } catch (error) {\r\n                    window.location.href = \"/\";\r\n                }\r\n            })\r\n            .catch(err => {\r\n                try {\r\n                    enqueueSnackbar(err.response.data.detail, {\r\n                        variant: \"error\",\r\n                    });\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some Error occurred.\", {\r\n                        variant: \"error\",\r\n                    });\r\n                }\r\n            });\r\n        setLoading(false);\r\n    };\r\n\r\n    const onFinishFailed = errorInfo => {\r\n        // console.log(errorInfo);\r\n        try {\r\n            enqueueSnackbar(errorInfo.errorFields[0].errors[0], {\r\n                variant: \"error\",\r\n            });\r\n        } catch (error) {\r\n            enqueueSnackbar(\"Some Error occurred.\", {\r\n                variant: \"error\",\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-outer-div\">\r\n            <img\r\n                src=\"./Logo.PNG\"\r\n                style={{ alignSelf: \"center\", width: '250px', boxShadow: \"20px 20px 2px rgba(0, 0, 0, 0.3)\" }}\r\n            />\r\n            <div className=\"login-header-div\">Login</div>\r\n\r\n            <Form\r\n                name=\"basic\"\r\n                labelCol={{\r\n                    span: 24,\r\n                }}\r\n                wrapperCol={{\r\n                    span: 24,\r\n                }}\r\n                initialValues={{\r\n                    remember: true,\r\n                }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                autoComplete=\"off\"\r\n                className=\"login-form\"\r\n            >\r\n                <Form.Item\r\n                    label={<label style={{ color: \"var(--primaryText)\" }}>Username / Email</label>}\r\n                    name=\"userName\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your username/email !\",\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label={<label style={{ color: \"var(--primaryText)\" }}>Password</label>}\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your password!\",\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n                <div>\r\n                    <a href=\"/change_password\"> Forgot password. </a>\r\n                </div>\r\n                <a href=\"/signup\"> Dont have an account ? Create one. </a>\r\n                \r\n                <Form.Item>\r\n                    <Button\r\n                        htmlType=\"submit\"\r\n                        loading={loading}\r\n                        style={{\r\n                            backgroundColor: \"var(--success)\",\r\n                            // width: \"100px\",\r\n                            fontSize: \"20px\",\r\n                            height: \"auto\",\r\n                            marginTop: \"10px\",\r\n                        }}\r\n                    >\r\n                        Log in\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n","export const loginUser = details => {\r\n    return {\r\n        type: \"AR_SET_LOGGED\",\r\n        payload: details,\r\n    };\r\n};\r\n\r\nexport const logoutUser = () => {\r\n    localStorage.removeItem(\"JWTtoken\");\r\n    return {\r\n        type: \"AR_LOGOUT\",\r\n    };\r\n};\r\n","export const setMyRoomsLoading = () => {\r\n    return {\r\n        type: \"RDR_SET_MYROOMS_LOADING\"\r\n    };\r\n};\r\n\r\nexport const removeMyRoomsLoading = () => {\r\n    return {\r\n        type: \"RDR_REMOVE_MYROOMS_LOADING\"\r\n    };\r\n};\r\n\r\nexport const setMyRooms = (data) => {\r\n    return {\r\n        type: \"RDR_SET_MYROOMS\",\r\n        payload: data\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const setEnrolledLoading = () => {\r\n    return {\r\n        type: \"RDR_SET_ENROLLED_LOADING\"\r\n    };\r\n};\r\n\r\nexport const removeEnrolledLoading = () => {\r\n    return {\r\n        type: \"RDR_REMOVE_ENROLLED_LOADING\"\r\n    };\r\n};\r\n\r\nexport const setEnrolled = (data) => {\r\n    return {\r\n        type: \"RDR_SET_ENROLLED\",\r\n        payload: data\r\n    };\r\n};\r\n\r\n\r\nexport const setBreadcrumb = (data) => {\r\n    return {\r\n        type: \"RDR_SET_BREADCRUMB\",\r\n        payload: data\r\n    };\r\n};\r\n","import Countdown from \"antd/lib/statistic/Countdown\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { RiCodeLine, RiFileAddLine } from \"react-icons/ri\";\r\nimport SemipolarLoading from \"react-loadingg/lib/SemipolarLoading\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logoutUser } from \"../Redux/Actions/AuthActions\";\r\nimport { setBreadcrumb } from \"../Redux/Actions/RoomsDataActions\";\r\n\r\nexport default function Home() {\r\n    document.title = \"Home | Code Rooms\";\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [due, setDue] = useState([]);\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(async () => {\r\n        dispatch(setBreadcrumb([]));\r\n        setLoading(true);\r\n        await axios\r\n            .get(\"/due_questions\")\r\n            .then(res => {\r\n                setDue(res.data.due);\r\n            })\r\n            .catch(err => {\r\n                if (!err.response) {\r\n                    enqueueSnackbar(\"Some Error occurred while getting due questions.\", { variant: \"error\" });\r\n                    return;\r\n                }\r\n                if (err.response.status === 401) {\r\n                    dispatch(logoutUser());\r\n                } else {\r\n                    enqueueSnackbar(\"Some Error occurred while getting due questions\", { variant: \"error\" });\r\n                }\r\n            });\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    const timeConditions = (question) => {\r\n        if(moment(question.endTime).diff(moment().format(), 'seconds') < 0 ){\r\n            return(\r\n                <div style={{color: 'var(--error)', fontSize: '22px'}}>\r\n                    Due date over\r\n                </div>\r\n            )\r\n        }\r\n        if(moment(question.endTime).diff(moment().format(), 'hours') > 48){\r\n            return(\r\n                <span style={{ fontSize: \"20px\", display: \"inline-flex\", color: \"var(--privateRoom)\" }}>\r\n                    Due : {moment(question.endTime).format(\"Do MMM\")}\r\n                </span>\r\n            )\r\n        }\r\n        if(moment(question.endTime).diff(moment().format(), 'hours') > 24){\r\n            return(\r\n                <span style={{ fontSize: \"20px\", display: \"inline-flex\", color: \"var(--privateRoom)\" }}>\r\n                    Due : Tommorow\r\n                </span>\r\n            )\r\n        }\r\n        if(moment(question.endTime).diff(moment().format(), 'hours') > 10){\r\n            return(\r\n                <span style={{ fontSize: \"20px\", display: \"inline-flex\", color: \"var(--privateRoom)\" }}>\r\n                    Due : Today\r\n                </span>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div>\r\n    \r\n                    <Countdown\r\n                        valueStyle={{color: 'var(--privateRoom)', fontSize: '22px'}}\r\n                        value={question.endTime}\r\n                        onFinish={() => {\r\n                            window.location.reload();\r\n                        }}\r\n                        format=\"[Due] : H[h] : m[m] : s[s]\"\r\n                    />\r\n                </div> \r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    return loading ? (\r\n        <div className=\"VerifyEmail-heading-div\">\r\n            <div>Getting Your Data ....</div>\r\n            <div style={{marginTop: \"40px\", position: 'relative'}}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\"  />\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        due.length === 0 ? (\r\n            <div className=\"playground-code-title\" style={{paddingTop: '20px'}}>No Questions Due !!</div> \r\n            ) : (\r\n            <>\r\n                <div className=\"playground-code-title\" style={{paddingTop: '20px'}}>Questions Due</div> \r\n                <div style={{ fontSize: \"20px\", color: \"#fff\" }}>\r\n                    {due.map(question => (\r\n                        <Link to={\"/question?qId=\" + question.questionId} key={\"room.roomId\"}>\r\n                            <div className=\"myRooms-cards-box\">\r\n                                <div className=\"myRooms-cards-info\">\r\n                                    <div className=\"myRooms-cards-title\">\r\n                                        <span>{question.title}</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <div className=\"myRooms-cards-description\">\r\n                                        <span\r\n                                            style={{\r\n                                                marginLeft: \"10px\",\r\n                                                display: \"inline-flex\",\r\n                                                minWidth: \"70px\",\r\n                                                fontWeight: \"bolder\",\r\n                                            }}\r\n                                        >\r\n                                            Room\r\n                                        </span>\r\n                                        : {question.roomName}\r\n                                    </div>\r\n                                    <div className=\"myRooms-cards-description\" style={{marginLeft: '8px'}}>\r\n                                    {\r\n                                        question._type === \"code\" ? (\r\n                                            <>\r\n                                                <RiCodeLine />\r\n                                                <span style={{ marginLeft: \"10px\", display: \"inline-flex\" }}>\r\n                                                    Code Type\r\n                                                </span>\r\n                                            </>\r\n                                        ) :(\r\n                                            <>\r\n                                                <RiFileAddLine />\r\n                                                <span style={{ marginLeft: \"10px\", display: \"inline-flex\" }}>\r\n                                                    File Type\r\n                                                </span>\r\n                                            </>\r\n                                        )\r\n                                    }\r\n                                    </div>\r\n                                    <div className=\"myRooms-card-bottom-bar\">\r\n                                        {timeConditions(question)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    ))}\r\n                </div>\r\n            </>\r\n        )\r\n    )   \r\n}\r\n","import { Divider } from 'antd'\r\nimport React from 'react'\r\n\r\nexport default function MyDivider() {\r\n    return (\r\n        <Divider style={{margin: \"0px\"}} />\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Menu } from 'antd';\r\nimport { BsPersonSquare } from \"react-icons/bs\";\r\nimport { VscVersions } from \"react-icons/vsc\";\r\nimport {\r\n    MenuOutlined,\r\n    AppstoreOutlined,\r\n    HomeOutlined,\r\n    InfoCircleFilled,\r\n    LogoutOutlined,\r\n    BookOutlined,\r\n    PlusCircleOutlined,\r\n    CodeOutlined,\r\n    SettingOutlined\r\n} from '@ant-design/icons';\r\nimport { logoutUser } from \"../Redux/Actions/AuthActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MyDivider from \"../Components/MyDivider\";\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nexport default function NavbarDrawer() {\r\n    const [drawerOpen, setDrawerOpen] = useState(false);\r\n\r\n    const authReducer = useSelector(state => state.authReducer);\r\n    const roomsDataReducer = useSelector(state => state.roomsDataReducer);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const openDrawer = () => {\r\n        setDrawerOpen(true);\r\n    };\r\n    const closeDrawer = () => {\r\n        setDrawerOpen(false);\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        dispatch(logoutUser());\r\n    }\r\n\r\n    const pushLink = (link) => {\r\n        setDrawerOpen(false);\r\n        history.push(link)\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <MenuOutlined style={{ fontSize: \"25px\", color: \"var(--primaryText)\" }} onClick={openDrawer} />\r\n\r\n            <Drawer\r\n                title={\r\n                    <div style={{ width: \"100%\", display: \"inline-flex\", alignItems: \"center\" }}>\r\n                        <BsPersonSquare style={{ fontSize: \"20px\", marginRight: \"20px\" }} />\r\n                        <div style={{ fontSize: \"20px\" }}>{authReducer.userName}</div>\r\n                    </div>\r\n                }\r\n                footer={\r\n                    <Menu style={{  background: 'var(--primaryBackground)'}} mode=\"vertical\" theme=\"dark\" selectable={false}>\r\n                        <MyDivider />\r\n\r\n                        <Menu.Item key=\"2\" icon={<VscVersions />}>\r\n                            Version 0.1\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                }\r\n                keyboard={true}\r\n                placement=\"left\"\r\n                closable={false}\r\n                onClose={closeDrawer}\r\n                visible={drawerOpen}\r\n                key=\"left\"\r\n                bodyStyle={{ \r\n                    backgroundColor: \"var(--primaryBackground)\",\r\n                    padding: '0px'\r\n                }}\r\n                headerStyle={{\r\n                    backgroundColor: \"var(--primaryBackground)\",\r\n                    height: \"61px\",\r\n                    borderBottom: \"2px solid var(--primaryText)\",\r\n                }}\r\n                footerStyle={{\r\n                    backgroundColor: \"var(--primaryBackground)\",\r\n                    borderTop: \"None\",\r\n                    padding: '0px'\r\n                    // fontSize: \"18px\",\r\n                }}\r\n                defaultSelectedKeys={['home']}\r\n                defaultOpenKeys={['home']}\r\n            >\r\n                <Menu style={{  background: 'var(--primaryBackground)'}} mode=\"vertical\" theme=\"dark\" selectable={false}>\r\n\r\n                    <Menu.Item key=\"home\" className=\"navbar-drawer-item\" icon={<HomeOutlined/>} onClick={() => {pushLink(`/`)}}>\r\n                        Home\r\n                    </Menu.Item>\r\n\r\n                    <MyDivider />\r\n                    \r\n                    <SubMenu icon={<BookOutlined />} title=\"Enrolled Rooms\" key=\"sub1\" onTitleClick={() => {pushLink(`/enrolled_rooms`)}}>\r\n                        {  \r\n                            roomsDataReducer.enrolledRoomsLoading ? (\r\n                                <Menu.Item >Loading .....</Menu.Item>\r\n                            ) : (\r\n                                roomsDataReducer.enrolledRooms.length === 0 ? (\r\n                                    <Menu.Item >No Rooms</Menu.Item>\r\n                                ) : (\r\n                                    roomsDataReducer.enrolledRooms.map(room => (\r\n                                        <Menu.Item key={room.roomId} onClick={() => {pushLink(`/enrolled_rooms/${room.roomId}`)}}>\r\n                                            {room.roomName}\r\n                                        </Menu.Item>\r\n                                    ))\r\n                                )\r\n                            )\r\n                        }\r\n                    </SubMenu>\r\n\r\n                    <MyDivider />\r\n\r\n                    <SubMenu icon={<AppstoreOutlined/>} title=\"My Rooms\" key=\"sub2\" onTitleClick={() => {pushLink(`/my_rooms`)}} >\r\n                        {  \r\n                            roomsDataReducer.myRoomsLoading ? (\r\n                                <Menu.Item >Loading .....</Menu.Item>\r\n                            ) : (\r\n                                roomsDataReducer.myRooms.length === 0 ? (\r\n                                    <Menu.Item >No Rooms</Menu.Item>\r\n                                ) : (\r\n                                    roomsDataReducer.myRooms.map(room => (\r\n                                        <Menu.Item key={room.roomId} onClick={() => {pushLink(`/my_rooms/${room.roomId}`)}}>\r\n                                            {room.roomName}\r\n                                        </Menu.Item>\r\n                                    ))\r\n                                )\r\n                            )\r\n                        }\r\n\r\n                        <MyDivider />\r\n\r\n                        <Menu.Item icon={<PlusCircleOutlined />} onClick={() =>{pushLink(\"/my_rooms?createNewRoom=true\")}}>\r\n                            Create New\r\n                        </Menu.Item>\r\n\r\n                    </SubMenu>\r\n                    \r\n                    <MyDivider />\r\n\r\n                    <Menu.Item icon={<CodeOutlined />} key=\"code\" onClick={() =>{pushLink(\"/code\")}}>\r\n                        Code Playground\r\n                    </Menu.Item>\r\n\r\n                    <MyDivider />\r\n\r\n                    <Menu.Item icon={<SettingOutlined />} key=\"settings\" onClick={() =>{pushLink(\"/user_settings\")}}>\r\n                        Settings\r\n                    </Menu.Item>\r\n\r\n                   \r\n                    <MyDivider />\r\n\r\n                    <Menu.Item icon={<InfoCircleFilled />} key=\"about\" onClick={() =>{pushLink(\"/about\")}} >\r\n                        About\r\n                    </Menu.Item>\r\n\r\n                    <MyDivider />\r\n\r\n                    <Menu.Item icon={<LogoutOutlined />} key=\"logout\" onClick={handleLogout}>\r\n                        Logout\r\n                    </Menu.Item>\r\n                    \r\n                    <MyDivider />\r\n                    \r\n                </Menu>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport NavbarDrawer from \"./NavbarDrawer\";\r\nimport { Breadcrumb, Tooltip } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function MyNavbar() {\r\n    const roomsDataReducer = useSelector(state => state.roomsDataReducer);\r\n\r\n    return (\r\n        <div className=\"navbar-outer-div\">\r\n            <div style={{ display: \"inline-flex\" }}>\r\n                <NavbarDrawer />\r\n                <Breadcrumb style={{display: 'flex', alignItems: 'center', marginLeft: '20px', fontSize: '18px'}}>\r\n                    <Breadcrumb.Item href=\"\">\r\n                        <Link to=\"/\" >\r\n                            {/* <HomeOutlined style={{fontSize: '16px'}} /> */}\r\n                            <span style={{marginLeft: '3px'}}>Home</span>\r\n                        </Link>\r\n                    </Breadcrumb.Item>\r\n\r\n                    {\r\n                        roomsDataReducer.breadcrumb.map(page => (\r\n                            <Breadcrumb.Item href=\"\">\r\n                                <Link to={page.url} >\r\n                                    <span style={{marginLeft: '3px'}}>{page.name}</span>\r\n                                </Link>\r\n                            </Breadcrumb.Item>\r\n                        ))\r\n                    }\r\n\r\n\r\n                </Breadcrumb>\r\n            </div>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <Tooltip title=\"shlokzanwar14@gmail.com\">\r\n                    <div style={{ fontSize: \"25px\", margin: \"0px 20px\", fontStyle: \"italic\", cursor: \"pointer\" }}>\r\n                        Code Rooms\r\n                    </div>\r\n                </Tooltip>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { Button, Result } from \"antd\";\r\nimport React from \"react\";\r\nimport { BsPeople, BsPatchQuestion } from \"react-icons/bs\";\r\nimport Masonry from \"react-masonry-css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function RenderRooms({createNewRoom}) {\r\n    const breakpoints = {\r\n        default: 5,\r\n        1900: 4,\r\n        1520: 3,\r\n        1180: 2,\r\n        830: 1,\r\n    };\r\n    const roomsDataReducer = useSelector(state => state.roomsDataReducer);\r\n\r\n    const getVisblity = (visibility) => {\r\n        if(visibility === \"public\"){\r\n            return(\r\n                <div className=\"myRooms-room-visibility myRooms-public-room\">\r\n                    Public\r\n                </div>\r\n            )\r\n        }\r\n        else if(visibility === \"private\"){\r\n            return(\r\n                <div className=\"myRooms-room-visibility myRooms-private-room\">\r\n                    Private\r\n                </div>\r\n            )\r\n        }\r\n        else if(visibility === \"hidden\"){\r\n            return(\r\n                <div className=\"myRooms-room-visibility myRooms-hidden-room\">\r\n                    Hidden\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return roomsDataReducer.myRooms.length === 0 ? (\r\n        <Result\r\n            title=\"No Rooms created.\"\r\n            extra={\r\n                <Button type=\"primary\" key=\"console\" onClick={createNewRoom}>\r\n                    Create First Room\r\n                </Button>\r\n            }\r\n        />\r\n    ) : (\r\n        <div className=\"myRooms-cards-outer\">\r\n            <Masonry breakpointCols={breakpoints} className=\"my-masonry-grid\" columnClassName=\"my-masonry-grid_column\">\r\n                {roomsDataReducer.myRooms.map(room => (\r\n                    <Link to={\"/my_rooms/\" + room.roomId} key={room.roomId}>\r\n                        <div className=\"myRooms-cards-box\">\r\n                            <div className=\"myRooms-cards-info\">\r\n                                <div className=\"myRooms-cards-title\">\r\n                                    {/* <AppstoreOutlined /> */}\r\n                                    <span>{room.roomName}</span>\r\n                                </div>\r\n                                <div className=\"myRooms-cards-description\">\r\n                                    <BsPeople />\r\n                                    <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"150px\" }}>\r\n                                        Enrolled\r\n                                    </span>\r\n                                    {room.enrolled}\r\n                                </div>\r\n                                <div className=\"myRooms-cards-description\">\r\n                                    <BsPatchQuestion />\r\n                                    <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"150px\" }}>\r\n                                        Questions\r\n                                    </span>\r\n                                    {room.questions}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"myRooms-card-bottom-bar\">\r\n                                {getVisblity(room.visibility)}\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                ))}\r\n            </Masonry>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Divider } from \"antd\";\r\nimport SemipolarLoading from \"react-loadingg/lib/SemipolarLoading\";\r\nimport RenderRooms from \"./RenderRooms\";\r\nimport { removeMyRoomsLoading, setBreadcrumb, setMyRooms, setMyRoomsLoading } from \"../../Redux/Actions/RoomsDataActions\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { logoutUser } from \"../../Redux/Actions/AuthActions\";\r\n\r\nexport default function AllRooms({getMyRoomsData}) {\r\n    document.title = \"My Rooms | Code Rooms\";\r\n\r\n    const [loadingMessage, setLoadingMessage] = useState(\"Getting Your Rooms Data ....\");\r\n    \r\n    const roomsDataReducer = useSelector(state => state.roomsDataReducer);\r\n    const authReducer = useSelector(state => state.authReducer);\r\n    const dispatch = useDispatch();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const history = useHistory();\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n\r\n    const createBreadcrumb = () => {\r\n        getMyRoomsData()\r\n        dispatch(setBreadcrumb( [\r\n            {\r\n                \"name\": \"My Rooms\",\r\n                \"url\": \"/my_rooms\"\r\n            }\r\n        ] ));\r\n    }\r\n\r\n    useEffect(() => {\r\n        createBreadcrumb();\r\n        if(queryParams.has(\"createNewRoom\")){\r\n            createNewRoom();\r\n        }\r\n    }, [queryParams.get(\"createNewRoom\")])\r\n\r\n    const createNewRoom = async() => {\r\n        setLoadingMessage(\"Creating a new Room, please wait ....\");\r\n        dispatch(setMyRoomsLoading());\r\n        await axios.post(\"/create_room\", {\r\n            roomName: authReducer.firstName + \"'s Room \" + (roomsDataReducer.myRooms.length + 1)\r\n        })\r\n            .then(res => {\r\n                dispatch(setMyRooms(res.data.myRooms))\r\n                history.push(\"/my_rooms/\" + res.data.newRoomId + \"?settingsOpen=true\");\r\n            })\r\n            .catch(err => {\r\n                if(!err.response){\r\n                    enqueueSnackbar(\"Some Error occurred while creating room\", {variant: 'error'});\r\n                    return;\r\n                }\r\n                if(err.response.status === 401){\r\n                    dispatch(logoutUser());\r\n                }\r\n                else{\r\n                    enqueueSnackbar(\"Some Error occurred while creating room\", {variant: 'error'})\r\n                }\r\n            })\r\n        dispatch(removeMyRoomsLoading());\r\n    }\r\n\r\n    \r\n\r\n    return roomsDataReducer.myRoomsLoading ? (\r\n        <div className=\"VerifyEmail-heading-div\">\r\n            <div>{loadingMessage}</div>\r\n            <div style={{marginTop: \"40px\", position: 'relative'}}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\"  />\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div className=\"myRooms-outer-div\">\r\n\r\n            <div className=\"myRooms-header\">\r\n                <span>Your Rooms</span>\r\n                <div className=\"myRooms-createNew-button\" onClick={createNewRoom}>\r\n                    <PlusCircleOutlined />\r\n                    <span style={{marginLeft: '5px'}}> Create New </span>\r\n                </div>\r\n            </div>\r\n\r\n            <Divider />\r\n\r\n            <RenderRooms createNewRoom={createNewRoom} />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useDebugValue, useState } from \"react\";\r\nimport { Modal, Button, Input, Form, Switch, Select, Divider, Tooltip } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { setMyRooms } from \"../../Redux/Actions/RoomsDataActions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { BsFillQuestionDiamondFill } from \"react-icons/bs\";\r\n\r\nexport default function RoomSettings({ settingsVisible, setSettingsVisible, roomInfo, setRoomInfo }) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [specialFields, setSpecialFields] = useState(roomInfo.specialFields || []);\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n\r\n    const onFinish = values => {\r\n        console.log(values);\r\n        handleSave(values);\r\n    };\r\n\r\n    const handleSave = async newData => {\r\n        setLoading(true);\r\n        await axios.post(\"/update_room_settings\", {\r\n            roomId: roomInfo.roomId,\r\n            roomName: newData.roomName === undefined ? roomInfo.roomName : newData.roomName,\r\n            visibility: newData.visibility === undefined ? roomInfo.visibility : newData.visibility,\r\n            waitingRoomEnabled: newData.waitingRoomEnabled === undefined ? roomInfo.waitingRoomEnabled : newData.waitingRoomEnabled,\r\n            specialFields: specialFields,\r\n        })\r\n            .then(res => {\r\n                // console.log(res);\r\n                dispatch(setMyRooms(res.data.myRooms));\r\n                var newRoomInfo = { ...roomInfo };\r\n                newRoomInfo.roomName = res.data.roomInfo.roomName;\r\n                newRoomInfo.visibility = res.data.roomInfo.visibility;\r\n                newRoomInfo.waitingRoomEnabled = res.data.roomInfo.waitingRoomEnabled;\r\n                newRoomInfo.enrolled = res.data.roomInfo.enrolled;\r\n                setRoomInfo(newRoomInfo);\r\n                setSettingsVisible(false);\r\n                enqueueSnackbar(\"Settings Updated\", { variant: \"success\" });\r\n            })\r\n            .catch(err => {\r\n                // console.log(err);\r\n                enqueueSnackbar(\"Error while updating Settings\", { variant: \"error\" });\r\n\r\n            });\r\n        setLoading(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setSettingsVisible(false);\r\n    };\r\n\r\n    const changeSpecialField = (e, index) => {\r\n        const newData = [...specialFields];\r\n        newData[index] = e.target.value;\r\n        setSpecialFields(newData);\r\n    };\r\n    const removeField = index => {\r\n        const newData = specialFields.filter((field, i) => index !== i);\r\n        setSpecialFields(newData);\r\n    };\r\n\r\n    const addField = () => {\r\n        const newData = [...specialFields];\r\n        newData.push(\"New Field\");\r\n        setSpecialFields(newData);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title={<div className=\"myRooms-header\">Settings</div>}\r\n            visible={settingsVisible}\r\n            destroyOnClose={true}\r\n            onCancel={handleCancel}\r\n            style={{ Radius: \"20px\" }}\r\n            footer={null}\r\n        >\r\n            <Form layout=\"horizontal\" onFinish={onFinish}>\r\n                <Form.Item name=\"roomName\" labelCol={{ span: 5 }} wrapperCol={{ span: 10 }} label=\"Room Name\" labelAlign=\"right\">\r\n                    <Input defaultValue={roomInfo.roomName} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    wrapperCol={{ span: 10 }}\r\n                    labelCol={{ span: 5 }}\r\n                    label=\"Visibility\"\r\n                    name=\"visibility\"\r\n                    labelAlign=\"right\"\r\n                >\r\n                    <Select defaultValue={roomInfo.visibility}>\r\n                        {/* <Select.Option value=\"public\">Public</Select.Option> */}\r\n                        <Select.Option value=\"private\">Private</Select.Option>\r\n                        <Select.Option value=\"hidden\">Hidden</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{ span: 2 }} label=\"Waiting room\" name=\"waitingRoomEnabled\">\r\n                    <Switch defaultChecked={roomInfo.waitingRoomEnabled} />\r\n                </Form.Item>\r\n\r\n                <Divider />\r\n\r\n                <div\r\n                    style={{\r\n                        fontSize: \"23px\",\r\n                        display: \"inline-flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"space-between\",\r\n                        width: \"100%\",\r\n                        marginBottom: \"10px\",\r\n                    }}\r\n                >\r\n                    <div>\r\n                        <span style={{ marginRight: \"10px\" }}>Special Fields</span>\r\n                        <Tooltip title=\"Special Field take extra inputs from user to identify them better. It can only be used when there are 0 users enrolled.\">\r\n                            <BsFillQuestionDiamondFill />\r\n                        </Tooltip>\r\n                    </div>\r\n                    <div>\r\n                        <Button onClick={addField} hidden={roomInfo.enrolled > 0 || roomInfo.waitingRoomCount > 0}>\r\n                            Add\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                {roomInfo.enrolled > 0 || roomInfo.waitingRoomCount > 0 ? \r\n                    <span></span> :\r\n                    <span style={{color: 'var(--error)'}}> Note !! Name, email and username are already collected .. </span>\r\n                }\r\n\r\n                {specialFields.length === 0 ? <span>No fields</span> : <></> }\r\n\r\n                {specialFields.map((field, index) => (\r\n                    <div style={{ margin: \"10px\" }}>\r\n                        <div style={{ display: \"inline-flex\" }}>\r\n                            <Input\r\n                                value={field}\r\n                                onChange={e => {\r\n                                    changeSpecialField(e, index);\r\n                                }}\r\n                                readOnly={roomInfo.enrolled > 0 || roomInfo.waitingRoomCount > 0}\r\n                            />\r\n                            <Button\r\n                                onClick={() => {\r\n                                    removeField(index);\r\n                                }}\r\n                                danger={true}\r\n                                style={{ marginLeft: \"10px\" }}\r\n                                hidden={roomInfo.enrolled > 0 || roomInfo.waitingRoomCount > 0}\r\n                            >\r\n                                Remove\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n\r\n                <Divider />\r\n                <Button htmlType=\"submit\" type=\"primary\" disabled={loading}>\r\n                    {loading ? \"Loading ...\" : \"Save and Close\"}\r\n                </Button>\r\n            </Form>\r\n\r\n        </Modal>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Popconfirm, Result, Tooltip } from \"antd\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Masonry from \"react-masonry-css\";\r\nimport moment from \"moment\";\r\nimport { RiDeleteBin5Line, RiCodeLine, RiFileAddLine } from \"react-icons/ri\";\r\nimport axios from \"axios\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logoutUser } from \"../../Redux/Actions/AuthActions\";\r\n\r\nexport default function RenderQuestions({getInitialData, questions, enrolled }) {\r\n    const breakpoints = {\r\n        default: 5,\r\n        1900: 4,\r\n        1520: 3,\r\n        1180: 2,\r\n        830: 1,\r\n    };\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n\r\n    const deleteQuestion = async (id) => {\r\n        await axios.post(\"/delete_question\", {\r\n            questionId: id,\r\n        })\r\n            .then(res => {\r\n                enqueueSnackbar(\"Question deleted succesfully!\", { variant: \"info\" });\r\n                getInitialData();\r\n            })\r\n            .catch(err => {\r\n                try {\r\n                    if (err.response.status === 401) {\r\n                        dispatch(logoutUser());\r\n                        return;\r\n                    }\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some error occured while deleting this room\", { variant: \"error\" });\r\n                }\r\n            });\r\n     };\r\n\r\n\r\n    const renderVisibility = (question) => {\r\n\r\n        if(!question.isVisible){\r\n            return(\r\n                <div className={\"myRooms-room-visibility myRooms-hidden-room\" } >\r\n                    Hidden\r\n                </div>\r\n            )\r\n        }\r\n        if( moment(moment().format()).isAfter(moment(question.endTime)) ){\r\n            return(\r\n                <div className={\"myRooms-room-visibility myRooms-private-room\" } >\r\n                    Due Over\r\n                </div>\r\n            )\r\n        }\r\n        if(question.isVisible){\r\n            return(\r\n                <div className={\"myRooms-room-visibility myRooms-public-room\" } >\r\n                    Visible\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div className={\"myRooms-room-visibility myRooms-hidden-room\" } >\r\n                    Hidden\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    return questions.length === 0 ? (\r\n        <Result title=\"No Questions in this room.\"/>\r\n    ) : (\r\n        <>\r\n            <Masonry breakpointCols={breakpoints} className=\"my-masonry-grid\" columnClassName=\"my-masonry-grid_column\">\r\n                {questions.map(question => (\r\n                    <>\r\n                        <div className=\"myRooms-cards-box\" style={{cursor: 'auto'}}>\r\n                            <Popconfirm\r\n                                title={\r\n                                    <>\r\n                                        Are you sure you want to delete this Question?\r\n                                        <br />\r\n                                        Deleting this question will remove all its data and will be lost forever.\r\n                                    </>\r\n                                }\r\n                                onConfirm={() => {deleteQuestion(question.questionId);}}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"Cancel\"\r\n                                overlayInnerStyle={{\r\n                                    maxWidth: \"400px\",\r\n                                    backgroundColor: \"var(--primaryBackground)\",\r\n                                    border: \"2px solid var(--primaryText)\",\r\n                                }}\r\n                            >\r\n                                <div style={{ position: \"absolute\", top: \"2%\", right: \"2%\", fontSize: \"25px\", cursor: 'pointer' }}>\r\n                                    <RiDeleteBin5Line />\r\n                                </div>\r\n                            </Popconfirm>   \r\n\r\n                            <Tooltip title={\"Type : \" + question.type} >\r\n                                <div style={{ position: \"absolute\", top: \"2%\", left: \"2%\", fontSize: \"25px\", cursor: 'pointer' }}>\r\n                                    {question.type === \"code\" ? <RiCodeLine /> : <RiFileAddLine />}\r\n                                </div>\r\n                            </Tooltip>\r\n\r\n                            <div className=\"myRooms-cards-info\">\r\n                                <div className=\"myRooms-cards-title\">\r\n                                    <span>{question.title}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{display: \"inline-flex\", justifyContent: \"space-between\", width: \"100%\", padding: \"0px 15px\"}} >\r\n                                <div>\r\n                                    <div className=\"myRooms-cards-description\">\r\n                                        <div className=\"questions-submitted-div\" />\r\n                                        <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"120px\" }}>\r\n                                            Submitted\r\n                                        </span>\r\n                                        {question.submitted}\r\n                                    </div>\r\n                                    <div className=\"myRooms-cards-description\">\r\n                                        <div className=\"questions-remaining-div\" />\r\n                                        <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"120px\" }}>Remaining</span>\r\n                                        {enrolled - question.submitted}\r\n                                    </div>\r\n                                </div>\r\n                                <PieChart\r\n                                    style={{ width: \"70px\" }}\r\n                                    lineWidth={35}\r\n                                    paddingAngle={5}\r\n                                    data={[\r\n                                        { \r\n                                            title: \"Submitted (\" + question.submitted + \")\",\r\n                                            value: question.submitted, \r\n                                            color: \"var(--success)\" \r\n                                        },\r\n                                        { \r\n                                            title: \"Not Submitted (\" + (enrolled - question.submitted) + \")\", \r\n                                            value: enrolled === 0 ? 1 : (enrolled - question.submitted), \r\n                                            color: \"var(--error)\"\r\n                                        },\r\n                                    ]}\r\n                                />\r\n                            </div>\r\n                            <div className=\"myRooms-card-bottom-bar\" style={{margin: '15px 0px'}}>\r\n                                {renderVisibility(question)}\r\n                            </div>\r\n                            <div>\r\n                                <Link className=\"myRooms-cards-buttons\" to={\"/edit_question?qId=\" + question.questionId}>\r\n                                    Edit\r\n                                </Link>\r\n                                <Link className=\"myRooms-cards-buttons\" to={\"/submissions?qId=\" + question.questionId}>\r\n                                    Submissions\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                ))}\r\n            </Masonry>\r\n        </>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Button, Input, Space, Popconfirm } from \"antd\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { TransverseLoading } from \"react-loadingg\";\r\nimport axios from \"axios\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nexport default function RoomEnrolled({ roomInfo, setRoomInfo, enrolledTable, setEnrolledTable }) {\r\n    const getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    ref={node => {\r\n                        var searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                    style={{ marginBottom: 8, display: \"block\" }}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined />}\r\n                        size=\"small\"\r\n                        style={{ width: 90 }}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                        Reset\r\n                    </Button>\r\n                    <Button\r\n                        type=\"link\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            confirm({ closeDropdown: false });\r\n\r\n                            setSearchText(selectedKeys[0]);\r\n                            setSearchedColumn(dataIndex);\r\n                        }}\r\n                    >\r\n                        Filter\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />,\r\n        onFilter: (value, record) =>\r\n            record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : \"\",\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n            }\r\n        },\r\n        render: text =>\r\n            searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                    highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n                    searchWords={[searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : \"\"}\r\n                />\r\n            ) : (\r\n                text\r\n            ),\r\n    });\r\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n\r\n        setSearchText(selectedKeys[0]);\r\n        setSearchedColumn(dataIndex);\r\n    };\r\n    const handleReset = clearFilters => {\r\n        clearFilters();\r\n        setSearchText(\"\");\r\n    };\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [searchedColumn, setSearchedColumn] = useState(\"\");\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [tableLoading, setTableLoading] = useState(false);\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    useEffect(async () => {\r\n        await axios.get(`/room_enrolled_members/${roomInfo.roomId}`)\r\n            .then(res => {\r\n                setEnrolledTable(res.data.members);\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Some Error occurred while getting room members.\", { variant: \"error\" });\r\n            });\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    const deleteMember = async (userId, tableId) => {\r\n        setTableLoading(true);\r\n        await axios.post(\"/reject_room_member\", {\r\n            roomId: roomInfo.roomId,\r\n            userId: userId,\r\n        })\r\n            .then(res => {\r\n                setEnrolledTable(enrolledTable.filter(data => data.tableId !== tableId));\r\n                var newRoomInfo = { ...roomInfo };\r\n                newRoomInfo.enrolled -= 1;\r\n                setRoomInfo(newRoomInfo);\r\n            })\r\n            .catch(err => {\r\n                try {\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Couldn't delete user.\", { variant: \"error\" });\r\n                }\r\n            });\r\n        setTableLoading(false);\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: \"Username\",\r\n            dataIndex: \"userName\",\r\n            key: \"userName\",\r\n            ...getColumnSearchProps(\"userName\"),\r\n            // sorter: (a, b) => a.device_code.length - b.device_code.length,\r\n            // sortDirections: [\"descend\", \"ascend\"],\r\n        },\r\n        {\r\n            title: \"Name\",\r\n            dataIndex: \"name\",\r\n            key: \"name\",\r\n            ...getColumnSearchProps(\"name\"),\r\n            // sorter: (a, b) => a.device_code.length - b.device_code.length,\r\n            // sortDirections: [\"descend\", \"ascend\"],\r\n        },\r\n        {\r\n            title: \"Email\",\r\n            dataIndex: \"email\",\r\n            key: \"email\",\r\n            ...getColumnSearchProps(\"email\"),\r\n            // sorter: (a, b) => a.device_code.length - b.device_code.length,\r\n            // sortDirections: [\"descend\", \"ascend\"],\r\n        },\r\n        {\r\n            title: \"SpecialFields\",\r\n            children: roomInfo.specialFields.map((field, index) => {\r\n                return{\r\n                    title: field,\r\n                    // dataIndex: field,\r\n                    key: field,\r\n                    render: row => (row.specialFields[index])\r\n                }\r\n            }),\r\n            hidden: roomInfo.specialFields.length === 0,\r\n        },\r\n        {\r\n            title: \"Remove\",\r\n            key: \"delete\",\r\n            width: \"100px\",\r\n            render: row => (\r\n                <Popconfirm\r\n                    title={\r\n                        <>\r\n                            Are you sure you want to remove {row.name} ?\r\n                        </>\r\n                    }\r\n                    onConfirm={() => {deleteMember(row.userId, row.tableId);}}\r\n                    okText=\"Yes\"\r\n                    cancelText=\"Cancel\"\r\n                    overlayInnerStyle={{\r\n                        maxWidth: \"440px\",\r\n                        backgroundColor: \"var(--primaryBackground)\",\r\n                        border: \"2px solid var(--primaryText)\",\r\n                    }}\r\n                >\r\n                    <Button danger={true}>Remove</Button>\r\n                </Popconfirm>\r\n            ),\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    return loading ? (\r\n        <div style={{ position: \"relative\", height: \"120px\", fontSize: \"25px\" }}>\r\n            <span style={{ marginBottom: \"100px\" }}>Loading ...</span>\r\n            <span>\r\n                <TransverseLoading color=\"var(--loadingColor)\" size=\"large\" />\r\n            </span>\r\n        </div>\r\n    ) : (\r\n        <div>\r\n            <Table \r\n                loading={tableLoading} \r\n                columns={columns} \r\n                dataSource={enrolledTable} \r\n                size=\"small\" \r\n                pagination={false} \r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Button, Input, Space, Popconfirm } from \"antd\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { TransverseLoading } from \"react-loadingg\";\r\nimport axios from \"axios\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nexport default function RoomWaiting({ roomInfo, setRoomInfo, waitingTable, setWaitingTable, enrolledTable, setEnrolledTable }) {\r\n    const getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    ref={node => {\r\n                        var searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                    style={{ marginBottom: 8, display: \"block\" }}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined />}\r\n                        size=\"small\"\r\n                        style={{ width: 90 }}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                        Reset\r\n                    </Button>\r\n                    <Button\r\n                        type=\"link\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            confirm({ closeDropdown: false });\r\n\r\n                            setSearchText(selectedKeys[0]);\r\n                            setSearchedColumn(dataIndex);\r\n                        }}\r\n                    >\r\n                        Filter\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />,\r\n        onFilter: (value, record) =>\r\n            record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : \"\",\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n            }\r\n        },\r\n        render: text =>\r\n            searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                    highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n                    searchWords={[searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : \"\"}\r\n                />\r\n            ) : (\r\n                text\r\n            ),\r\n    });\r\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n\r\n        setSearchText(selectedKeys[0]);\r\n        setSearchedColumn(dataIndex);\r\n    };\r\n    const handleReset = clearFilters => {\r\n        clearFilters();\r\n        setSearchText(\"\");\r\n    };\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [searchedColumn, setSearchedColumn] = useState(\"\");\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [tableLoading, setTableLoading] = useState(false);\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    useEffect(async () => {\r\n        await axios.get(`/room_waiting_members/${roomInfo.roomId}`)\r\n            .then(res => {\r\n                setWaitingTable(res.data.members);\r\n                setLoading(false);\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Some Error occurred while getting room members.\", { variant: \"error\" });\r\n            });\r\n    }, []);\r\n\r\n    const deleteMember = async (userId, tableId) => {\r\n        // alert(userId);\r\n        setTableLoading(true);\r\n        await axios.post(\"/reject_room_member\", {\r\n                roomId: roomInfo.roomId,\r\n                userId: userId,\r\n        })\r\n            .then(res => {\r\n                setWaitingTable(waitingTable.filter(data => data.tableId !== tableId));\r\n                var newRoomInfo = { ...roomInfo };\r\n                newRoomInfo.waitingRoomCount -= 1;\r\n                setRoomInfo(newRoomInfo);\r\n            })\r\n            .catch(err => {\r\n                try {\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Couldn't delete user.\", { variant: \"error\" });\r\n                }\r\n            });\r\n        setTableLoading(false);\r\n    };\r\n\r\n    const acceptMember = async (userId, tableId) => {\r\n        // alert(userId);\r\n        setTableLoading(true);\r\n        await axios.post(\"/accept_room_member\", {\r\n            roomId: roomInfo.roomId,\r\n            userId: userId,\r\n        })\r\n            .then(res => {\r\n                setEnrolledTable([...enrolledTable, (waitingTable.filter(data => data.tableId === tableId))[0] ]);\r\n                setWaitingTable(waitingTable.filter(data => data.tableId !== tableId));\r\n                var newRoomInfo = { ...roomInfo };\r\n                newRoomInfo.enrolled += 1;\r\n                newRoomInfo.waitingRoomCount -= 1;\r\n                setRoomInfo(newRoomInfo);\r\n                // console.log(waitingTable);\r\n            })\r\n            .catch(err => {\r\n                // console.log(err);\r\n                try {\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Couldn't delete user.\", { variant: \"error\" });\r\n                }\r\n            });\r\n        setTableLoading(false);\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: \"Username\",\r\n            dataIndex: \"userName\",\r\n            key: \"userName\",\r\n            ...getColumnSearchProps(\"userName\"),\r\n            // sorter: (a, b) => a.device_code.length - b.device_code.length,\r\n            // sortDirections: [\"descend\", \"ascend\"],\r\n        },\r\n        {\r\n            title: \"Name\",\r\n            dataIndex: \"name\",\r\n            key: \"name\",\r\n            ...getColumnSearchProps(\"name\"),\r\n            // sorter: (a, b) => a.device_code.length - b.device_code.length,\r\n            // sortDirections: [\"descend\", \"ascend\"],\r\n        },\r\n        {\r\n            title: \"Email\",\r\n            dataIndex: \"email\",\r\n            key: \"email\",\r\n            ...getColumnSearchProps(\"email\"),\r\n            // sorter: (a, b) => a.device_code.length - b.device_code.length,\r\n            // sortDirections: [\"descend\", \"ascend\"],\r\n        },\r\n        {\r\n            title: \"SpecialFields\",\r\n            children: roomInfo.specialFields.map((field, index) => {\r\n                return{\r\n                    title: field,\r\n                    // dataIndex: field,\r\n                    key: field,\r\n                    // ...getColumnSearchProps(field),\r\n                    render: row => (row.specialFields[index])\r\n\r\n                }\r\n            }),\r\n            hidden: roomInfo.specialFields.length === 0,\r\n        },\r\n        {\r\n            title: \"Actions\",\r\n            key: \"actions\",\r\n            width: \"200px\",\r\n            render: row => (\r\n                <>\r\n                    <Button onClick={() => {acceptMember(row.userId, row.tableId);}} style={{marginRight: '15px'}}>\r\n                        Accept\r\n                    </Button>\r\n                    <Popconfirm\r\n                        title={\r\n                            <>\r\n                                Are you sure you want to remove {row.name} ?\r\n                            </>\r\n                        }\r\n                        onConfirm={() => {deleteMember(row.userId, row.tableId);}}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"Cancel\"\r\n                        overlayInnerStyle={{\r\n                            maxWidth: \"440px\",\r\n                            backgroundColor: \"var(--primaryBackground)\",\r\n                            border: \"2px solid var(--primaryText)\",\r\n                        }}\r\n                    >\r\n                        <Button danger={true}>Remove</Button>\r\n                    </Popconfirm>\r\n                </>\r\n            ),\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    return loading ? (\r\n        <div style={{ position: \"relative\", height: \"120px\", fontSize: \"25px\" }}>\r\n            <span style={{ marginBottom: \"100px\" }}>Loading ...</span>\r\n            <span>\r\n                <TransverseLoading color=\"var(--loadingColor)\" size=\"large\" />\r\n            </span>\r\n        </div>\r\n    ) : (\r\n        <div>\r\n            <Table \r\n                loading={tableLoading} \r\n                columns={columns} \r\n                dataSource={waitingTable} \r\n                size=\"small\" \r\n                pagination={false} \r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation, useParams } from \"react-router\";\r\nimport { CopyOutlined, PlusCircleOutlined, SettingOutlined } from \"@ant-design/icons\";\r\nimport { BsPeople, BsPatchQuestion } from \"react-icons/bs\";\r\nimport { MdOutlineEmojiPeople } from \"react-icons/md\";\r\nimport { RiDeleteBin5Line, RiCodeLine, RiFileAddLine } from \"react-icons/ri\";\r\nimport RoomSettings from \"./RoomSettings\";\r\nimport { Popconfirm, Tabs, Tooltip, Menu, Dropdown } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport SemipolarLoading from \"react-loadingg/lib/SemipolarLoading\";\r\n\r\nimport { logoutUser } from \"../../Redux/Actions/AuthActions\";\r\nimport RenderQuestions from \"./RenderQuestions\";\r\nimport RoomEnrolled from \"./RoomEnrolled\";\r\nimport RoomWaiting from \"./RoomWaiting\";\r\nimport { setBreadcrumb } from \"../../Redux/Actions/RoomsDataActions\";\r\nimport MyDivider from \"../../Components/MyDivider\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nexport default function OneRoom({getMyRoomsData}) {\r\n    document.title = \"My Room | Code Rooms\";\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [loadingMessage, setLoadingMessage] = useState(\"Getting Data ....\");\r\n    const [settingsVisible, setSettingsVisible] = useState(false);\r\n    const [questions, setQuestions] = useState([]);\r\n    const [roomInfo, setRoomInfo] = useState({});\r\n    const [enrolledTable, setEnrolledTable] = useState([]);\r\n    const [waitingTable, setWaitingTable] = useState([]);\r\n    \r\n    let { id } = useParams();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n\r\n    const showSettings = () => {\r\n        setSettingsVisible(true);\r\n    };\r\n\r\n    const getInitialData = async () => {\r\n        setLoading(true);\r\n        // setLoadingMessage(\"Refreshing data ....\")\r\n        await axios.get(\"/my_rooms/\" + id)\r\n            .then((res) => {\r\n                // console.log(res)\r\n                setRoomInfo(res.data.roomInfo);\r\n                setQuestions(res.data.questions);\r\n            })\r\n            .catch((err) => {\r\n                if (!err.response) {\r\n                    enqueueSnackbar(\"Some Error occurred while getting room data.\", { variant: \"error\" });\r\n                } else if (err.response.status === 401) {\r\n                    dispatch(logoutUser());\r\n                } else {\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                    history.replace(\"/my_rooms\");\r\n                }\r\n            });\r\n        if (queryParams.has(\"settingsOpen\")) {\r\n            setSettingsVisible(true);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getInitialData();\r\n    }, [id]);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(setBreadcrumb( [\r\n            {\r\n                \"name\": \"My Rooms\",\r\n                \"url\": \"/my_rooms\"\r\n            },\r\n            {\r\n                \"name\": roomInfo.roomName,\r\n                \"url\": \"/my_rooms/\" + roomInfo.roomId\r\n            },\r\n        ] ));\r\n    }, [roomInfo.roomId]);\r\n\r\n\r\n    const createNewQuestion = async(type) => {\r\n        setLoadingMessage(\"Setting up new question template .....\");\r\n        setLoading(true);\r\n\r\n        await axios.post(\"/create_question\", {\r\n            roomId: id,\r\n            type: type, // code or file\r\n        })\r\n            .then(res => {\r\n                history.push(\"/edit_question?qId=\" + res.data.newQuestionId);\r\n            })\r\n            .catch(err => {\r\n                try {\r\n                    if(err.response.status === 401){\r\n                        dispatch(logoutUser());\r\n                        return;\r\n                    }\r\n                    enqueueSnackbar(err.response.data.detail, {variant: \"error\"});\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some error occured while creating new question\", {variant: \"error\"});\r\n                }\r\n            });\r\n        setLoading(false);\r\n    }\r\n\r\n    const copyToClipboard = () =>{\r\n        var toCopy = window.location.origin + \"/join_room?roomId=\" + roomInfo.roomId;\r\n\r\n        var temp = document.createElement(\"textarea\");\r\n        var tempMsg = document.createTextNode(toCopy);\r\n        temp.appendChild(tempMsg);\r\n\r\n        document.body.appendChild(temp);\r\n        temp.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(temp);\r\n\r\n        var message = \"Link copied to clipboard.\";\r\n        enqueueSnackbar(message, {\r\n            variant: 'success',\r\n        })\r\n    }\r\n\r\n    const deleteRoom = async () => {\r\n        setLoadingMessage(\"Deleting room ....\");\r\n        setLoading(true);\r\n        await axios.post(\"/delete_room\", {\r\n            roomId: id,\r\n        })\r\n            .then(() => {\r\n                    enqueueSnackbar(\"Room deleted succesfully!\", { variant: \"info\" });\r\n                    getMyRoomsData()\r\n                    history.replace(\"/my_rooms\");\r\n            })\r\n            .catch((err) => {\r\n                try {\r\n                    if (err.response.status === 401) {\r\n                        dispatch(logoutUser());\r\n                        return;\r\n                    }\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some error occured while deleting this room\", { variant: \"error\" });\r\n                }\r\n            });\r\n        setLoading(false);\r\n\r\n    };\r\n\r\n   \r\n\r\n    return loading ? (\r\n        <div className=\"VerifyEmail-heading-div\">\r\n            <div>{loadingMessage}</div>\r\n            <div style={{marginTop: \"40px\", position: 'relative'}}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\"  />\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div className=\"myRooms-outer-div\">\r\n            <div className=\"myRooms-header\">\r\n                <span style={{borderBottom: '2px solid '}}>\r\n                    {roomInfo.roomName}\r\n                </span>\r\n                <div style={{ display: \"inline-flex\" }}>\r\n                    <div className=\"myRooms-createNew-button\" style={{ marginLeft: \"15px\" }} onClick={copyToClipboard}>\r\n                        <Tooltip title=\"Copy joining link\">\r\n                            <CopyOutlined />\r\n                        </Tooltip>\r\n                    </div>\r\n                    \r\n                    <Dropdown \r\n                        overlay={\r\n                            <Menu style={{background: \"var(--secondaryBackground)\"}}>\r\n                                <Menu.Item \r\n                                    icon={<RiCodeLine style={{fontSize: '20px'}} />} \r\n                                    style={{fontSize: '16px'}}\r\n                                    onClick={() => {createNewQuestion(\"code\")}}\r\n                                >\r\n                                    Code Type Question\r\n                                </Menu.Item>\r\n                                <MyDivider />\r\n                                <Menu.Item \r\n                                    icon={<RiFileAddLine style={{fontSize: '20px'}} />} \r\n                                    style={{fontSize: '16px'}}\r\n                                    onClick={() => {createNewQuestion(\"file\")}}\r\n                                >\r\n                                    File Type Question\r\n                                </Menu.Item>\r\n                            </Menu>\r\n                        } \r\n                        placement=\"bottomCenter\"\r\n                    >\r\n                        <div className=\"myRooms-createNew-button\" style={{ marginLeft: \"15px\" }} >\r\n                            <PlusCircleOutlined />\r\n                            <span style={{ marginLeft: \"5px\" }}> Create Question </span>\r\n                            {/* <DownOutlined style={{marginLeft: '5px', fontSize: '18px'}} /> */}\r\n                        </div>\r\n                    </Dropdown>\r\n\r\n                    <div className=\"myRooms-createNew-button\" style={{ marginLeft: \"15px\" }} onClick={showSettings}>\r\n                        <SettingOutlined />\r\n                        <span style={{ marginLeft: \"5px\" }}> Settings </span>\r\n                    </div>\r\n                    <Popconfirm\r\n                        title={\r\n                            <>\r\n                                Are you sure you want to delete this Room?<br /> \r\n                                Deleting this room will remove all its data and will be lost forever !\r\n                            </>\r\n                        }\r\n                        onConfirm={deleteRoom}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"Cancel\"\r\n                        overlayInnerStyle={{maxWidth: '400px', backgroundColor: 'var(--primaryBackground)', border: '2px solid var(--primaryText)'}}\r\n                    >\r\n                        <div className=\"myRooms-createNew-button\" style={{ marginLeft: \"15px\" }}>\r\n                            <RiDeleteBin5Line />\r\n                        </div>\r\n                    </Popconfirm>\r\n                    <RoomSettings \r\n                        settingsVisible={settingsVisible} \r\n                        setSettingsVisible={setSettingsVisible} \r\n                        roomInfo={roomInfo}\r\n                        setRoomInfo={setRoomInfo}    \r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* <Divider /> */}\r\n\r\n            <Tabs defaultActiveKey={queryParams.get(\"tab\") || \"questions\"} >\r\n                <TabPane\r\n                    tab={\r\n                        <div className=\"myRooms-cards-description\" style={{fontSize: '15px'}}>\r\n                            <BsPatchQuestion />\r\n                            <span style={{ margin: \"0px 6px\", display: \"inline-flex\"}}>\r\n                                Questions\r\n                            </span>\r\n                            ({questions.length})\r\n                        </div>\r\n                    }\r\n                    key=\"questions\"\r\n                >\r\n                    <RenderQuestions \r\n                        getInitialData={getInitialData}\r\n                        questions={questions} \r\n                        enrolled={roomInfo.enrolled}\r\n                    />\r\n                </TabPane>\r\n                <TabPane\r\n                    tab={\r\n                        <div className=\"myRooms-cards-description\" style={{fontSize: '15px', padding: \"0px\", margin: '0px'}}>\r\n                            <BsPeople />\r\n\r\n                            <span style={{ margin: \"0px 6px\", display: \"inline-flex\"}}>\r\n                            Members\r\n                            </span>\r\n                            ({roomInfo.enrolled})\r\n                        </div>\r\n                    }\r\n                    key=\"members\"\r\n                >\r\n                    <RoomEnrolled \r\n                        roomInfo={roomInfo} \r\n                        setRoomInfo={setRoomInfo} \r\n                        enrolledTable={enrolledTable}    \r\n                        setEnrolledTable={setEnrolledTable}    \r\n                    />\r\n                </TabPane>\r\n                {\r\n                    roomInfo.waitingRoomEnabled ? (\r\n                        <TabPane\r\n                            tab={\r\n                                <div className=\"myRooms-cards-description\" style={{fontSize: '15px'}}>\r\n                                    <MdOutlineEmojiPeople />\r\n                                    <span style={{ margin: \"0px 6px\", display: \"inline-flex\"}}>\r\n                                        Waiting Room\r\n                                    </span>\r\n                                    ({roomInfo.waitingRoomCount})\r\n                                </div>\r\n                            }\r\n                            key=\"waitingRoom\"\r\n                        >\r\n                            <RoomWaiting\r\n                                roomInfo={roomInfo} \r\n                                setRoomInfo={setRoomInfo} \r\n                                waitingTable={waitingTable}    \r\n                                setWaitingTable={setWaitingTable}    \r\n                                enrolledTable={enrolledTable}\r\n                                setEnrolledTable={setEnrolledTable}\r\n                            />\r\n                        </TabPane>\r\n                    ) : <></>\r\n                }\r\n            </Tabs>\r\n\r\n            \r\n        </div>\r\n    );\r\n}\r\n","import { Result } from \"antd\";\r\nimport React from \"react\";\r\nimport { BsPatchQuestion } from \"react-icons/bs\";\r\nimport { MdOutlineDoneAll } from \"react-icons/md\";\r\nimport Masonry from \"react-masonry-css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function RenderEnrolled() {\r\n    const breakpoints = {\r\n        default: 5,\r\n        1900: 4,\r\n        1520: 3,\r\n        1180: 2,\r\n        830: 1,\r\n    };\r\n    const roomsDataReducer = useSelector(state => state.roomsDataReducer);\r\n\r\n\r\n    return roomsDataReducer.enrolledRooms.length === 0 ? (\r\n        <Result\r\n            title=\"No Rooms enrolled.\"\r\n        />\r\n    ) : (\r\n        <div className=\"myRooms-cards-outer\">\r\n            <Masonry breakpointCols={breakpoints} className=\"my-masonry-grid\" columnClassName=\"my-masonry-grid_column\">\r\n                {roomsDataReducer.enrolledRooms.map(room => (\r\n                    <Link to={\"/enrolled_rooms/\" + room.roomId} key={room.roomId}>\r\n                        <div className=\"myRooms-cards-box\" >\r\n                            <div className=\"myRooms-cards-info\">\r\n                                <div className=\"myRooms-cards-title\">\r\n                                    {/* <AppstoreOutlined /> */}\r\n                                    <span>{room.roomName}</span>\r\n                                </div>\r\n                                <div className=\"myRooms-cards-description\">\r\n                                    <BsPatchQuestion />\r\n                                    <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"150px\" }}>\r\n                                        Questions\r\n                                    </span>\r\n                                    {room.questions}\r\n                                </div>\r\n                                <div className=\"myRooms-cards-description\">\r\n                                    <MdOutlineDoneAll />\r\n                                    <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"150px\" }}>\r\n                                        Submitted\r\n                                    </span>\r\n                                    {room.submitted}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                ))}\r\n            </Masonry>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Divider } from \"antd\";\r\nimport SemipolarLoading from \"react-loadingg/lib/SemipolarLoading\";\r\nimport RenderEnrolled from \"./RenderEnrolled\";\r\nimport { setBreadcrumb } from \"../../Redux/Actions/RoomsDataActions\";\r\n\r\nexport default function AllEnrolled({getEnrolledRoomsData}) {\r\n    document.title = \"Enrolled Rooms | Code Rooms\";\r\n\r\n    const roomsDataReducer = useSelector(state => state.roomsDataReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        getEnrolledRoomsData()\r\n        dispatch(setBreadcrumb( [\r\n            {\r\n                \"name\": \"Enrolled Rooms\",\r\n                \"url\": \"/enrolled_rooms\"\r\n            }\r\n        ] ));\r\n    }, [])\r\n\r\n\r\n    return roomsDataReducer.myRoomsLoading ? (\r\n        <div className=\"VerifyEmail-heading-div\">\r\n            <div>Getting Your Rooms Data ....</div>\r\n            <div style={{marginTop: \"40px\", position: 'relative'}}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\"  />\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div className=\"myRooms-outer-div\">\r\n\r\n            <div className=\"myRooms-header\">\r\n                <span>Enrolled Rooms</span>\r\n            </div>\r\n\r\n            <Divider />\r\n\r\n            <RenderEnrolled />\r\n        </div>\r\n    );\r\n}\r\n","import { Button, Input } from 'antd';\r\nimport axios from 'axios'\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect, useState } from 'react'\r\nimport PointSpreadLoading from 'react-loadingg/lib/PointSpreadLoading';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { logoutUser } from '../Redux/Actions/AuthActions';\r\nimport { setEnrolled } from '../Redux/Actions/RoomsDataActions';\r\n\r\nexport default function JoinRoom() {\r\n    document.title = \"Join Room | Code Rooms\";\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [specialFields, setSpecialFields] = useState([]);\r\n    const [specialInfo, setSpecialInfo] = useState([]);\r\n\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const joinRoom1 = () => {\r\n        setLoading(true);\r\n        if(!queryParams.has(\"roomId\")){\r\n            enqueueSnackbar(\"Invalid Room\", {variant: 'error'});\r\n            history.replace('/enrolled_rooms');\r\n            return;\r\n        }\r\n        axios.post(\"/join_room\", {\r\n            roomId: queryParams.get(\"roomId\"),\r\n            specialFields: specialInfo\r\n        })\r\n            .then(res => {\r\n                if(res.data.specialFields){\r\n                    setSpecialFields(res.data.specialFields);\r\n                    var data = []\r\n                    for(var i = 0; i < res.data.specialFields.length; i ++){\r\n                        data.push(\"\");\r\n                    }\r\n                    setSpecialInfo(data);\r\n                    setLoading(false);\r\n                    return;\r\n                }\r\n\r\n                if(res.data.waitingRoomEnabled){\r\n                    enqueueSnackbar(`You are now in waiting Room for ${res.data.roomName}.`, {variant: 'info'});\r\n                }\r\n                else{\r\n                    enqueueSnackbar(`Joined Room - ${res.data.roomName} successfully.`, {variant: 'success'});\r\n                }\r\n                dispatch(setEnrolled(res.data.enrolledRooms));\r\n                history.replace('/enrolled_rooms');\r\n            })\r\n            .catch(err => {\r\n                try {\r\n\r\n                    if(!err.response){\r\n                        history.replace('/enrolled_rooms');\r\n                        enqueueSnackbar(\"Some Error occurred while joining room\", {variant: 'warning'});\r\n                        return;\r\n                    }\r\n                    if(err.response.status === 401){\r\n                        enqueueSnackbar(\"Please login first.\", {variant: 'info'})\r\n                        dispatch(logoutUser());\r\n                        return;\r\n                    }\r\n\r\n                    enqueueSnackbar(err.response.data.detail, {variant: 'warning'});\r\n                    history.replace('/enrolled_rooms');\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some Error occurred while joining room\", {variant: 'warning'});\r\n                    history.replace('/enrolled_rooms');\r\n                }\r\n            })\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(async() => {\r\n        joinRoom1();\r\n    }, [])\r\n\r\n    const changeSpecialField = (e, index) => {\r\n        const newData = [...specialInfo];\r\n        newData[index] = e.target.value;\r\n        setSpecialInfo(newData);\r\n    };\r\n\r\n\r\n    return loading ? (\r\n        <div className=\"VerifyEmail-outer-div\">\r\n            <div className=\"VerifyEmail-heading-div\">\r\n                Joining room ...\r\n            </div>\r\n            <div style={{marginTop: \"20px\", position: 'relative'}}>\r\n                <PointSpreadLoading color=\"var(--loadingColor)\" />\r\n            </div>\r\n        </div>\r\n    ) : ( \r\n        specialFields.length > 0 ? (\r\n            <div className=\"VerifyEmail-outer-div\">\r\n                <div className=\"VerifyEmail-heading-div\">\r\n                    Enter details to continue ... \r\n                </div>\r\n                <div>\r\n                    {\r\n                        specialFields.map((name, index) => (\r\n                            <div>\r\n                                <div style={{ display: \"inline-flex\", margin: '10px', alignItems: 'center' }}>\r\n                                    <span style={{minWidth: '100px'}}>{name} : </span>\r\n                                    <Input value={specialInfo[index]} onChange={(e) => {changeSpecialField(e, index)}} />\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <Button htmlType=\"submit\" type=\"primary\" onClick={() => {joinRoom1()}} >\r\n                    Submit\r\n                </Button>\r\n            </div>\r\n        ) : (<></>)\r\n    )\r\n}\r\n","import { Button, Result, Statistic } from \"antd\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Masonry from \"react-masonry-css\";\r\nimport { IoMdDoneAll } from \"react-icons/io\";\r\nimport { BsPatchExclamation } from \"react-icons/bs\";\r\nimport moment from \"moment\";\r\nimport { RiCodeLine, RiFileAddLine } from \"react-icons/ri\";\r\n\r\n\r\nconst { Countdown } = Statistic;\r\n\r\nexport default function RenderQuestions({ questions }) {\r\n    const breakpoints = {\r\n        default: 5,\r\n        1900: 4,\r\n        1520: 3,\r\n        1180: 2,\r\n        830: 1,\r\n    };\r\n\r\n    const timeConditions = (question) => {\r\n        if(question.isSubmitted){\r\n            return(\r\n                <div style={{fontSize: '18px', color: \"var(--success)\"}}>\r\n                    At {moment(question.submissionTime).format(\"Do MMM hh:mm a\")}\r\n                </div>\r\n            )\r\n        }\r\n        if(moment(question.endTime).diff(moment().format(), 'seconds') < 0 ){\r\n            return(\r\n                <div style={{color: 'var(--error)', fontSize: '22px'}}>\r\n                    Due date over\r\n                </div>\r\n            )\r\n        }\r\n        if(moment(question.endTime).diff(moment().format(), 'hours') > 48){\r\n            return(\r\n                <span style={{ fontSize: \"20px\", display: \"inline-flex\", color: \"var(--privateRoom)\" }}>\r\n                    Due : {moment(question.endTime).format(\"Do MMM\")}\r\n                </span>\r\n            )\r\n        }\r\n        if(moment(question.endTime).diff(moment().format(), 'hours') > 24){\r\n            return(\r\n                <span style={{ fontSize: \"20px\", display: \"inline-flex\", color: \"var(--privateRoom)\" }}>\r\n                    Due : Tommorow\r\n                </span>\r\n            )\r\n        }\r\n        if(moment(question.endTime).diff(moment().format(), 'hours') > 10){\r\n            return(\r\n                <span style={{ fontSize: \"20px\", display: \"inline-flex\", color: \"var(--privateRoom)\" }}>\r\n                    Due : Today\r\n                </span>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div>\r\n    \r\n                    <Countdown\r\n                        valueStyle={{color: 'var(--privateRoom)', fontSize: '22px'}}\r\n                        value={question.endTime}\r\n                        onFinish={() => {\r\n                            window.location.reload();\r\n                        }}\r\n                        format=\"[Due] : H[h] : m[m] : s[s]\"\r\n                    />\r\n                </div> \r\n            )\r\n        }\r\n    }\r\n\r\n    return questions.length === 0 ? (\r\n        <Result\r\n            title=\"No Questions in this room.\"\r\n            extra={\r\n                <Button type=\"primary\" key=\"console\">\r\n                    No Questions in this room.\r\n                </Button>\r\n            }\r\n        />\r\n    ) : (\r\n        <Masonry breakpointCols={breakpoints} className=\"my-masonry-grid\" columnClassName=\"my-masonry-grid_column\">\r\n            {questions.map(question => (\r\n                <Link to={\"/question?qId=\" + question.questionId } key={\"room.roomId\"}>\r\n                    <div className=\"myRooms-cards-box\">\r\n                        <div className=\"myRooms-cards-info\">\r\n                            <div className=\"myRooms-cards-title\">\r\n                                <span>{question.title}</span>\r\n                            </div>\r\n                            <div className=\"myRooms-cards-description\">\r\n                                {\r\n                                    question._type === \"code\" ? (\r\n                                        <>\r\n                                            <RiCodeLine />\r\n                                            <span style={{ marginLeft: \"10px\", display: \"inline-flex\" }}>\r\n                                                Code Type\r\n                                            </span>\r\n                                        </>\r\n                                    ) :(\r\n                                        <>\r\n                                            <RiFileAddLine />\r\n                                            <span style={{ marginLeft: \"10px\", display: \"inline-flex\" }}>\r\n                                                File Type\r\n                                            </span>\r\n                                        </>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                            {\r\n                                question.isSubmitted ? (\r\n                                    <div className=\"myRooms-cards-description\">\r\n                                        <IoMdDoneAll style={{color: \"var(--success)\"}} />\r\n                                        <span style={{ marginLeft: \"10px\", display: \"inline-flex\", color: \"var(--success)\" }}>\r\n                                            Submitted\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                ) : (\r\n                                    <div className=\"myRooms-cards-description\">\r\n                                        <BsPatchExclamation style={{color: \"var(--privateRoom)\"}} />\r\n                                        <span style={{ marginLeft: \"10px\", display: \"inline-flex\", color: \"var(--privateRoom)\" }}>\r\n                                            Not Submitted\r\n                                        </span>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            <div className=\"myRooms-card-bottom-bar\">\r\n                                {timeConditions(question)}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n            ))}\r\n        </Masonry>\r\n    );\r\n}\r\n\r\n\r\n// () => {\r\n//     \r\n//     }","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Button, Popconfirm } from \"antd\";\r\nimport RenderQuestions from \"./RenderQuestions\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport SemipolarLoading from \"react-loadingg/lib/SemipolarLoading\";\r\nimport { logoutUser } from \"../../Redux/Actions/AuthActions\";\r\nimport { setBreadcrumb } from \"../../Redux/Actions/RoomsDataActions\";\r\nimport MyDivider from \"../../Components/MyDivider\";\r\n\r\n\r\nexport default function EnrolledRoom() {\r\n    document.title = \"Enrolled Room | Code Rooms\";\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [loadingMessage, setLoadingMessage] = useState(\"Getting Data ....\");\r\n    const [questions, setQuestions] = useState([]);\r\n    const [roomInfo, setRoomInfo] = useState([]);\r\n\r\n    let { id } = useParams();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const getRoomData = async() => {\r\n        setLoading(true);\r\n        await axios\r\n            .get(\"/enrolled_rooms/\" + id)\r\n            .then(res => {\r\n                setRoomInfo(res.data.roomInfo);\r\n                setQuestions(res.data.questions);\r\n            })\r\n            .catch(err => {\r\n                // console.log(err)\r\n                if (!err.response) {\r\n                    enqueueSnackbar(\"Some Error occurred while getting room data.\", { variant: \"error\" });\r\n                    history.replace(\"/enrolled_rooms\");\r\n                } else if (err.response.status === 401) {\r\n                    dispatch(logoutUser());\r\n                } else {\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                    history.replace(\"/enrolled_rooms\");\r\n                }\r\n            });\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getRoomData();\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        dispatch(setBreadcrumb( [\r\n            {\r\n                \"name\": \"Enrolled Rooms\",\r\n                \"url\": \"/enrolled_rooms\"\r\n            },\r\n            {\r\n                \"name\": roomInfo.roomName,\r\n                \"url\": \"/enrolled_rooms/\" + roomInfo.roomId\r\n            },\r\n        ] ));\r\n    }, [roomInfo.roomId]);\r\n\r\n    const leaveRoom = async() => {\r\n        await axios.post(\"/leave_room\", {\r\n            roomId: roomInfo.roomId,\r\n        })\r\n            .then(() => {\r\n                history.replace(\"/enrolled_rooms\")\r\n            })\r\n            .catch(err => {\r\n                // console.log(err)\r\n                if (!err.response) {\r\n                    enqueueSnackbar(\"Some Error occurred while leaving room.\", { variant: \"error\" });\r\n                    history.replace(\"/enrolled_rooms\");\r\n                } else if (err.response.status === 401) {\r\n                    dispatch(logoutUser());\r\n                } else {\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                    history.replace(\"/enrolled_rooms\");\r\n                }\r\n            })\r\n    }\r\n\r\n    return loading ? (\r\n        <div className=\"VerifyEmail-heading-div\">\r\n            <div>{loadingMessage}</div>\r\n            <div style={{ marginTop: \"40px\", position: \"relative\" }}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\" />\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div className=\"myRooms-outer-div\">\r\n            <div className=\"myRooms-header\">\r\n                <span >\r\n                    <span>{roomInfo.roomName}</span>\r\n                    <div style={{ }}>\r\n                        <span style={{fontSize: '20px'}}>Host : {roomInfo.host}</span>\r\n                    </div>\r\n                </span>\r\n                <Popconfirm\r\n                    title={\r\n                        <>\r\n                            Are you sure you want to leave the room?<br /> \r\n                            This will delete all the submissions in this room and data will be lost forever.\r\n                        </>\r\n                    }\r\n                    onConfirm={leaveRoom}\r\n                    okText=\"Yes\"\r\n                    cancelText=\"Cancel\"\r\n                    overlayInnerStyle={{maxWidth: '400px', backgroundColor: 'var(--primaryBackground)', border: '2px solid var(--primaryText)'}}\r\n                >\r\n                    <Button danger={true} type=\"primary\"  >\r\n                        Leave Room\r\n                    </Button>\r\n                </Popconfirm>\r\n            </div>\r\n\r\n            <MyDivider />\r\n\r\n            <RenderQuestions questions={questions} />\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Editor, getDefaultKeyBinding, RichUtils } from \"draft-js\";\r\nimport \"draft-js/dist/Draft.css\";\r\nimport \"./EditorCss.css\";\r\nimport { Divider } from \"antd\";\r\n\r\nclass DescriptionEditor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //   this.state = {editorState: props.data};\r\n\r\n        this.focus = () => this.refs.editor.focus();\r\n        this.onChange = editorState => {\r\n            // this.setState({editorState});\r\n            props.setState(editorState);\r\n            // console.log(this.state.editorState);\r\n        };\r\n\r\n        this.handleKeyCommand = this._handleKeyCommand.bind(this);\r\n        this.mapKeyToEditorCommand = this._mapKeyToEditorCommand.bind(this);\r\n        this.toggleBlockType = this._toggleBlockType.bind(this);\r\n        this.toggleInlineStyle = this._toggleInlineStyle.bind(this);\r\n    }\r\n\r\n    _handleKeyCommand(command, editorState) {\r\n        const newState = RichUtils.handleKeyCommand(editorState, command);\r\n        if (newState) {\r\n            this.onChange(newState);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    _mapKeyToEditorCommand(e) {\r\n        if (e.keyCode === 9 /* TAB */) {\r\n            const newEditorState = RichUtils.onTab(e, this.props.state, 4 /* maxDepth */);\r\n            if (newEditorState !== this.props.state) {\r\n                this.onChange(newEditorState);\r\n            }\r\n            return;\r\n        }\r\n        return getDefaultKeyBinding(e);\r\n    }\r\n\r\n    _toggleBlockType(blockType) {\r\n        this.onChange(RichUtils.toggleBlockType(this.props.state, blockType));\r\n    }\r\n\r\n    _toggleInlineStyle(inlineStyle) {\r\n        this.onChange(RichUtils.toggleInlineStyle(this.props.state, inlineStyle));\r\n    }\r\n\r\n    render() {\r\n        const editorState = this.props.state;\r\n\r\n        // If the user changes block type before entering any text, we can\r\n        // either style the placeholder or hide it. Let's just hide it now.\r\n        let className = \"RichEditor-editor\";\r\n        var contentState = editorState.getCurrentContent();\r\n        if (!contentState.hasText()) {\r\n            if (contentState.getBlockMap().first().getType() !== \"unstyled\") {\r\n                className += \" RichEditor-hidePlaceholder\";\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"RichEditor-root\" style={this.props.readOnly ? {padding: '4px', border: \"none\", width: '95%'} : {}}>\r\n                {this.props.readOnly ? (\r\n                    <></>\r\n                ) : (\r\n                    <>\r\n                        <div style={{display: 'inline-flex'}}>\r\n                            <span style={{marginRight: '30px'}}>\r\n                            <BlockStyleControls editorState={editorState} onToggle={this.toggleBlockType} />\r\n                            </span>\r\n                            <InlineStyleControls editorState={editorState} onToggle={this.toggleInlineStyle} />\r\n                            </div>\r\n                        <Divider style={{ margin: \"0px\" }} />\r\n                    </>\r\n                )}\r\n                <div className={className} style={{ borderTop: \"None\" }} onClick={this.focus}>\r\n                    <Editor\r\n                        blockStyleFn={getBlockStyle}\r\n                        customStyleMap={styleMap}\r\n                        editorState={editorState}\r\n                        handleKeyCommand={this.handleKeyCommand}\r\n                        keyBindingFn={this.mapKeyToEditorCommand}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Enter Question description\"\r\n                        ref=\"editor\"\r\n                        readOnly={this.props.readOnly}\r\n                        spellCheck={false}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// Custom overrides for \"code\" style.\r\nconst styleMap = {\r\n    CODE: {\r\n        backgroundColor: \"rgba(0, 0, 0, 0.05)\",\r\n        fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\r\n        fontSize: 16,\r\n        padding: 2,\r\n    },\r\n};\r\n\r\nfunction getBlockStyle(block) {\r\n    switch (block.getType()) {\r\n        case \"blockquote\":\r\n            return \"RichEditor-blockquote\";\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nclass StyleButton extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.onToggle = e => {\r\n            e.preventDefault();\r\n            this.props.onToggle(this.props.style);\r\n        };\r\n    }\r\n\r\n    render() {\r\n        let className = \"RichEditor-styleButton\";\r\n        if (this.props.active) {\r\n            className += \" RichEditor-activeButton\";\r\n        }\r\n\r\n        return (\r\n            <span className={className} onMouseDown={this.onToggle}>\r\n                {this.props.label}\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nconst BLOCK_TYPES = [\r\n    // {label: 'H1', style: 'header-one'},\r\n    // {label: 'H2', style: 'header-two'},\r\n    // {label: 'H3', style: 'header-three'},\r\n    { label: \"H4\", style: \"header-four\" },\r\n    { label: \"H5\", style: \"header-five\" },\r\n    { label: \"H6\", style: \"header-six\" },\r\n    { label: \"Blockquote\", style: \"blockquote\" },\r\n    { label: \"UL\", style: \"unordered-list-item\" },\r\n    // {label: 'OL', style: 'ordered-list-item'},\r\n    { label: \"Code Block\", style: \"code-block\" },\r\n];\r\n\r\nconst BlockStyleControls = props => {\r\n    const { editorState } = props;\r\n    const selection = editorState.getSelection();\r\n    const blockType = editorState.getCurrentContent().getBlockForKey(selection.getStartKey()).getType();\r\n\r\n    return (\r\n        <div className=\"RichEditor-controls\">\r\n            {BLOCK_TYPES.map(type => (\r\n                <StyleButton\r\n                    key={type.label}\r\n                    active={type.style === blockType}\r\n                    label={type.label}\r\n                    onToggle={props.onToggle}\r\n                    style={type.style}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nvar INLINE_STYLES = [\r\n    { label: \"Bold\", style: \"BOLD\" },\r\n    { label: \"Italic\", style: \"ITALIC\" },\r\n    { label: \"Underline\", style: \"UNDERLINE\" },\r\n    { label: \"Monospace\", style: \"CODE\" },\r\n];\r\n\r\nconst InlineStyleControls = props => {\r\n    const currentStyle = props.editorState.getCurrentInlineStyle();\r\n\r\n    return (\r\n        <div className=\"RichEditor-controls\">\r\n            {INLINE_STYLES.map(type => (\r\n                <StyleButton\r\n                    key={type.label}\r\n                    active={currentStyle.has(type.style)}\r\n                    label={type.label}\r\n                    onToggle={props.onToggle}\r\n                    style={type.style}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DescriptionEditor;\r\n","import { Button } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { convertToRaw } from \"draft-js\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { logoutUser } from \"../../Redux/Actions/AuthActions\";\r\nimport DescriptionEditor from \"../../TextEditor/MyTextEditor\";\r\n\r\nexport default function QuestionTemplate({ title, setTitle, description, setDescription, sample, setSample, _type }) {\r\n    const [loading, setLoading] = useState(false);\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const handleTitleChange = e => {\r\n        setTitle(e.target.value);\r\n    };\r\n    const handleDescChange = e => {\r\n       setDescription(e);\r\n    };\r\n\r\n    const handleSampleChange = e => {\r\n        const newSample = {...sample};\r\n        newSample[e.target.name] = e.target.value;\r\n        setSample(newSample);\r\n    };\r\n    \r\n    const saveQuestionTemplate = async() => {\r\n        setLoading(true);\r\n        await axios.post(\"/save_question_template\", {\r\n            questionId: queryParams.get(\"qId\"),\r\n            title: title,\r\n            template: {\r\n                description: convertToRaw(description.getCurrentContent()),\r\n                sample: sample\r\n            },\r\n        })\r\n            .then(res => {\r\n                enqueueSnackbar(\"Saved successfully !\", {variant: \"success\"})\r\n            })\r\n            .catch(err => {\r\n                try {\r\n                    if (err.response.status === 401) {\r\n                        dispatch(logoutUser());\r\n                        return;\r\n                    }\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                    history.replace(\"/my_rooms\");\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some error occured while saving !!\", { variant: \"error\" });\r\n                    // history.replace(\"/my_rooms\");\r\n                }\r\n        });\r\n        setLoading(false);\r\n    }\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <span style={{width: '95%', display: 'inline-flex', justifyContent: 'space-between'}}>\r\n                <span style={{fontSize: '20px'}}>Type : {_type}</span>\r\n                <Button type=\"primary\" onClick={saveQuestionTemplate} loading={loading}>\r\n                    Save\r\n                </Button>\r\n            </span>\r\n            <div className=\"outer-scroll-div\">\r\n                <input value={title} onChange={handleTitleChange} className=\"question-title\" />\r\n                \r\n                <h2 style={{ textAlign: \"left\", marginLeft: \"10px\" }}>\r\n                    Description\r\n                </h2>\r\n                <span style={{ padding: \"10px\" }}>\r\n                    <DescriptionEditor state={description} setState={handleDescChange} readOnly={false} />\r\n                </span>\r\n\r\n                {\r\n                    _type === \"code\" ? (\r\n                        <div className=\"question-sample-case-outer\">\r\n                            <h2>Sample Case</h2>\r\n                            \r\n                            <h3 className=\"question-sample-case-title\">Sample Input</h3>\r\n                            <textarea\r\n                                className=\"question-sample-case-input\"\r\n                                value={sample.input}\r\n                                name=\"input\"\r\n                                onChange={handleSampleChange}\r\n                            />\r\n                            <h3 className=\"question-sample-case-title\">Sample Output</h3>\r\n                            <textarea\r\n                                className=\"question-sample-case-input\"\r\n                                value={sample.output}\r\n                                name=\"output\"\r\n                                onChange={handleSampleChange}\r\n                            />\r\n                            <h3 className=\"question-sample-case-title\">Explanation</h3>\r\n                            <textarea\r\n                                className=\"question-sample-case-input\"\r\n                                value={sample.explanation}\r\n                                name=\"explanation\"\r\n                                onChange={handleSampleChange}\r\n                            />\r\n                        </div>\r\n                    ) : (<></>)\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n","import React from 'react'\r\nimport useWindowDimensions from '../../Components/WindowDimensions';\r\nimport DescriptionEditor from '../../TextEditor/MyTextEditor';\r\n\r\nexport default function QuestionPreview({title, description, sample}) {\r\n    const { height, width } = useWindowDimensions();\r\n\r\n    return (\r\n        <div style={{height: (height - 70) + \"px\", padding: '10px' }}>\r\n            <div className=\"outer-scroll-div\">\r\n                <div className=\"question-title\" style={{width: '90%', borderBottom: 'none', marginBottom: \"0px\"}}> \r\n                    {title} \r\n                </div>\r\n                <DescriptionEditor state={description} setState={() => {}} readOnly={true} />\r\n\r\n                <h3 className=\"question-sample-case-title\" style={{marginTop: '10px'}} hidden={sample.input.length === 0}>Sample Input</h3>\r\n                <div className=\"question-sample-case-input\" style={{whiteSpace: 'pre'}} hidden={sample.input.length === 0} >\r\n                    {sample.input}\r\n                </div>\r\n                <h3 className=\"question-sample-case-title\" hidden={sample.output.length === 0} >Sample Output</h3>\r\n                <div className=\"question-sample-case-input\" style={{whiteSpace: 'pre'}} hidden={sample.output.length === 0}>\r\n                    {sample.output}\r\n                </div>\r\n                <h3 className=\"question-sample-case-title\" hidden={sample.explanation.length === 0}>Explanation</h3>\r\n                <div className=\"question-sample-case-input\" style={{whiteSpace: 'pre'}} hidden={sample.explanation.length === 0}>\r\n                    {sample.explanation}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Button } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { logoutUser } from \"../../Redux/Actions/AuthActions\";\r\n\r\n\r\nexport default function QuestionCases({testCases, setTestCases}) {\r\n    const [loading, setLoading] = useState(false);\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    \r\n\r\n    const removeCase = (i) => {\r\n        setTestCases( testCases.filter((tcase, index) => index !== i ) );\r\n    }\r\n\r\n    const addCase = () => {\r\n        if(testCases.length >= 5){\r\n            enqueueSnackbar(\"Can add upto only 5 cases !\", {variant: \"info\"});\r\n            return;\r\n        }\r\n        setTestCases( [...testCases, {\r\n            input: \"\",\r\n            output: \"\"\r\n        }] )\r\n    }\r\n\r\n    const handleChange = (e, index, name) => {\r\n        const newCases = [...testCases];\r\n        newCases[index][name] = e.target.value;\r\n\r\n        setTestCases(newCases);\r\n    }\r\n\r\n    const saveCases = async() => {\r\n        setLoading(true);\r\n        await axios.post(\"/save_question_tcases\", {\r\n            questionId: queryParams.get(\"qId\"),\r\n            testCases: testCases,\r\n        })\r\n        .then(res => {\r\n            // console.log(res);\r\n            enqueueSnackbar(\"Saved successfully !\", {variant: \"success\"})\r\n        })\r\n        .catch(err => {\r\n            // console.log(err);\r\n            try {\r\n                if (err.response.status === 401) {\r\n                    dispatch(logoutUser());\r\n                    return;\r\n                }\r\n                enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                history.replace(\"/my_rooms\");\r\n            } catch (error) {\r\n                enqueueSnackbar(\"Some error occured while saving !!\", { variant: \"error\" });\r\n                // history.replace(\"/my_rooms\");\r\n            }\r\n        });\r\n        setLoading(false);\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <span style={{width: '95%', display: 'inline-flex', justifyContent: 'space-between', marginBottom: '30px'}}>\r\n                <span></span>\r\n                <span>\r\n                    <Button onClick={addCase} disabled={loading}>\r\n                        Add\r\n                    </Button>\r\n                    <Button style={{marginLeft: '10px'}} type=\"primary\" onClick={saveCases} loading={loading}>\r\n                        Save\r\n                    </Button>\r\n                </span>\r\n            </span>\r\n            <div className=\"outer-scroll-div\">\r\n                {\r\n                    testCases.map((tcase, index) => (\r\n                        <>\r\n                            <span style={{width: '95%', display: 'inline-flex', justifyContent: 'space-between', margin: '20px 0px 0px 0px'}}>\r\n                                <span>Case #{index + 1}</span>\r\n                                <span>\r\n                                    <Button onClick={() => {removeCase(index)}} danger={true} disabled={loading}>\r\n                                        Remove\r\n                                    </Button>\r\n                                </span>\r\n                            </span>\r\n\r\n                            <div style={{width: '100%', display: 'inline-flex'}}>\r\n                                <textarea \r\n                                    placeholder=\"Case Input\"\r\n                                    className=\"question-sample-case-input\"\r\n                                    style={{width: '100%', margin: '5px'}}\r\n                                    value={tcase.input}\r\n                                    onChange={(e) => {handleChange(e, index, \"input\")}}\r\n                                />\r\n                                <textarea \r\n                                    placeholder=\"Expected Output\"\r\n                                    className=\"question-sample-case-input\"\r\n                                    style={{width: '100%', margin: '5px'}}\r\n                                    value={tcase.output}\r\n                                    onChange={(e) => {handleChange(e, index, \"output\")}}\r\n                                />\r\n                            </div>\r\n                        </>\r\n                    ))\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { Button, DatePicker, Switch, TimePicker } from \"antd\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { logoutUser } from \"../../Redux/Actions/AuthActions\";\r\n\r\nexport default function QuestionSettings({ questionSettings, setQuestionSettings }) {\r\n    // console.log(\"dddd\", questionSettings);\r\n    const [date, setDate] = useState(moment(questionSettings.endTime));\r\n    const [loading, setLoading] = useState(false);\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const handleDateChange = e => {\r\n        // console.log(moment(e).format());\r\n        setDate(e);\r\n    };\r\n\r\n    const changeVisiblity = (e) => {\r\n        setQuestionSettings({\r\n            ...questionSettings,\r\n            isVisible: !questionSettings.isVisible\r\n        })\r\n        // console.log(e);\r\n    }\r\n\r\n    const saveSettings = async() => {\r\n        setLoading(true);\r\n        await axios.post(\"/save_question_settings\", {\r\n            questionId: queryParams.get(\"qId\"),\r\n            endTime: moment(date).format(\"YYYY-MM-DD HH:mm:ss\"),\r\n            isVisible: questionSettings.isVisible\r\n        })\r\n            .then(res => {\r\n                // console.log(res);\r\n                enqueueSnackbar(\"Saved successfully !\", {variant: \"success\"})\r\n            })\r\n            .catch(err => {\r\n                // console.log(err);\r\n                try {\r\n                    if (err.response.status === 401) {\r\n                        dispatch(logoutUser());\r\n                        return;\r\n                    }\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                    history.replace(\"/my_rooms\");\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some error occured while saving !!\", { variant: \"error\" });\r\n                }\r\n        });\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{width: '100%', fontSize: '20px', textAlign: 'left', marginLeft: '20px'}}>\r\n                <span style={{display: 'inline-flex', marginRight: '20px', minWidth: '150px'}}>\r\n                    End Time \r\n                </span>\r\n                <DatePicker\r\n                    disabledDate={current => {\r\n                        return current && current < moment(moment().format());\r\n                    }}\r\n                    allowClear={false}\r\n                    value={date}\r\n                    onChange={handleDateChange}\r\n                />\r\n                <TimePicker \r\n                    allowClear={false}\r\n                    value={date} \r\n                    onChange={handleDateChange}\r\n                />\r\n            </div>           \r\n            <div style={{width: '100%', fontSize: '20px', textAlign: 'left', marginLeft: '20px'}}>\r\n                <span style={{display: 'inline-flex', marginRight: '20px', minWidth: '150px'}}>\r\n                    Is Visible \r\n                </span>\r\n                <Switch onChange={changeVisiblity} checked={questionSettings.isVisible} />\r\n            </div>\r\n            <div style={{width: '100%', fontSize: '20px', marginTop: '20px'}}>\r\n                <Button type=\"primary\" onClick={saveSettings} loading={loading}>\r\n                    Save\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { VscSymbolArray } from \"react-icons/vsc\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { FiSettings } from \"react-icons/fi\";\r\nimport { Tabs } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport SemipolarLoading from \"react-loadingg/lib/SemipolarLoading\";\r\nimport { logoutUser } from \"../../Redux/Actions/AuthActions\";\r\nimport SplitPane, { Pane } from \"react-split-pane\";\r\nimport { convertFromRaw, EditorState } from \"draft-js\";\r\nimport QuestionTemplate from \"./QuestionTemplate\";\r\nimport QuestionPreview from \"./QuestionPreview\";\r\nimport QuestionCases from \"./QuestionCases\";\r\nimport QuestionSettings from \"./QuestionSettings\";\r\nimport moment from \"moment\";\r\nimport { setBreadcrumb } from \"../../Redux/Actions/RoomsDataActions\";\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default function EditQuestion() {\r\n    document.title = \"Edit Question | Code Rooms\";\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [title, setTitle] = useState(\"Title\");\r\n    const [description, setDescription] = useState({});\r\n    const [sample, setSample] = useState({});\r\n    \r\n    const [testCases, setTestCases] = useState([]);\r\n    const [questionSettings, setQuestionSettings] = useState({});\r\n    const [roomInfo, setRoomInfo] = useState({});\r\n\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n\r\n    \r\n    useEffect(async () => {\r\n        setLoading(true);\r\n        if (!queryParams.has(\"qId\")) {\r\n            enqueueSnackbar(\"Invalid question.\", { variant: \"warning\" });\r\n            history.replace(\"/my_rooms\");\r\n        }\r\n        await axios\r\n            .get(\"/get_question_details\", {\r\n                params: {\r\n                    questionId: queryParams.get(\"qId\"),\r\n                },\r\n            })\r\n            .then(res => {\r\n                setTitle(res.data.questionDetails.title);\r\n                setDescription(EditorState.createWithContent(convertFromRaw(res.data.questionDetails.template.description)));\r\n                setSample(res.data.questionDetails.template.sample);\r\n\r\n                setTestCases(res.data.questionDetails.testCases || []);\r\n\r\n                setQuestionSettings({\r\n                    _type: res.data.questionDetails._type,\r\n                    endTime: !res.data.questionDetails.endTime ? moment(moment().format()).add(7, 'days').endOf('day').format() : res.data.questionDetails.endTime,\r\n                    isVisible: res.data.questionDetails.isVisible,\r\n                });\r\n                \r\n                setRoomInfo({\r\n                    roomId: res.data.questionDetails.roomId,\r\n                    roomName: res.data.questionDetails.roomName,\r\n                })\r\n                \r\n            })\r\n            .catch(err => {\r\n                // console.log(err);\r\n                try {\r\n                    if (err.response.status === 401) {\r\n                        dispatch(logoutUser());\r\n                        return;\r\n                    }\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                    history.replace(\"/my_rooms\");\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some error occured while creating new question\", { variant: \"error\" });\r\n                    history.replace(\"/my_rooms\");\r\n                }\r\n            });\r\n            setLoading(false);\r\n        }, []);\r\n        \r\n\r\n        useEffect(() => {\r\n            dispatch(setBreadcrumb( [\r\n                {\r\n                    \"name\": \"My Rooms\",\r\n                    \"url\": \"/my_rooms\"\r\n                },\r\n                {\r\n                    \"name\": roomInfo.roomName,\r\n                    \"url\": \"/my_rooms/\" + roomInfo.roomId\r\n                },\r\n                {\r\n                    \"name\": \"Edit Question\",\r\n                    \"url\": \"/question?qId=/\" + queryParams.get(\"qId\")\r\n                },\r\n            ] ));\r\n        }, [roomInfo.roomId]);\r\n\r\n        \r\n    return loading ? (\r\n        <div className=\"VerifyEmail-heading-div\">\r\n            <div>Getting Question Data ....</div>\r\n            <div style={{ marginTop: \"40px\", position: \"relative\" }}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\" />\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div >\r\n            <SplitPane style={{ position: \"absolute\" }} minSize={350} maxSize={620} defaultSize={400} split=\"vertical\">\r\n                <Pane className=\"shlokOP\">\r\n                    <QuestionPreview \r\n                        title={title}\r\n                        description={description}\r\n                        sample={sample}\r\n                    />\r\n                </Pane>\r\n                    <div>\r\n                    <Tabs defaultActiveKey={queryParams.get(\"tab\") || \"edit\"} >\r\n                        <TabPane\r\n                            tab={\r\n                                <div className=\"myRooms-cards-description\" style={{fontSize: '15px'}}>\r\n                                    <FaEdit />\r\n                                    <span style={{ margin: \"0px 6px\", display: \"inline-flex\"}}>\r\n                                        Edit Question\r\n                                    </span>\r\n                                </div>\r\n                            }\r\n                            key=\"edit\"\r\n                        >\r\n                            <QuestionTemplate \r\n                                title={title}\r\n                                setTitle={setTitle}\r\n                                description={description}\r\n                                setDescription={setDescription}\r\n                                sample={sample}\r\n                                setSample={setSample}\r\n                                _type={questionSettings._type}\r\n                            />\r\n                        </TabPane>\r\n                        {\r\n                            questionSettings._type === \"code\" ? (\r\n                                <TabPane\r\n                                    tab={\r\n                                        <div className=\"myRooms-cards-description\" style={{fontSize: '15px', padding: \"0px\", margin: '0px'}}>\r\n                                            <VscSymbolArray />\r\n                                            <span style={{ margin: \"0px 6px\", display: \"inline-flex\"}}>\r\n                                            Test cases\r\n                                            </span>\r\n                                        </div>\r\n                                    }\r\n                                    key=\"cases\"\r\n                                >\r\n                                    <QuestionCases \r\n                                        testCases={testCases}\r\n                                        setTestCases={setTestCases}\r\n                                    />\r\n                                </TabPane>\r\n                            ) : (<></>)\r\n                        }\r\n                        <TabPane\r\n                            tab={\r\n                                <div className=\"myRooms-cards-description\" style={{fontSize: '15px'}}>\r\n                                    <FiSettings />\r\n                                    <span style={{ margin: \"0px 6px\", display: \"inline-flex\"}}>\r\n                                        Settings\r\n                                    </span>\r\n                                </div>\r\n                            }\r\n                            key=\"settings\"\r\n                        >\r\n                            <QuestionSettings \r\n                                questionSettings={questionSettings}\r\n                                setQuestionSettings={setQuestionSettings}\r\n                            />\r\n\r\n                        </TabPane>\r\n                    </Tabs>\r\n\r\n                    </div>\r\n            </SplitPane>\r\n        </div>\r\n    );\r\n}\r\n","import { CaretRightOutlined, SaveFilled } from \"@ant-design/icons\";\r\nimport { Button, Input, Modal, Select } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useState } from \"react\";\r\nconst { Option } = Select;\r\n\r\nexport default function EditorNavbar({savedCodes, setSavedCodes, selectedCode, setSelectedCode, loading ,setLoading, getEditorCode, input, setOutput}) {\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [saveOpen, setSaveOpen] = useState(false);\r\n    \r\n    const handleLanguageChange = value => {\r\n        const newData = { ...selectedCode };\r\n        newData.language = value;\r\n        setSelectedCode(newData);\r\n    };\r\n\r\n\r\n    const handleRun = async() => {\r\n        setLoading(true);\r\n        setOutput(\"\");\r\n        await axios.post(\"/run_code\", {\r\n                code: getEditorCode(),\r\n                language: selectedCode.language,\r\n                input: input,\r\n            })\r\n            .then(res => {\r\n                setOutput(JSON.parse( res.data).output)\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Error while running!\", {variant: \"error\"});\r\n            });\r\n        setLoading(false);\r\n    };\r\n\r\n    const handleSave = async() => {\r\n        setLoading(true);\r\n\r\n        var newSaved = savedCodes.filter(code => code.id !== selectedCode.id);\r\n        newSaved.push({\r\n            id: selectedCode.id,\r\n            name: selectedCode.name,\r\n            code: getEditorCode(),\r\n            language: selectedCode.language,\r\n        });\r\n        setSavedCodes(newSaved);\r\n        setSaveOpen(false);\r\n        \r\n        setTimeout(() => {\r\n            setLoading(false);\r\n            enqueueSnackbar(\"Code saved !\", {variant: \"success\"});\r\n        }, 500);\r\n           \r\n    };\r\n\r\n    const changeName = (e) => {\r\n        const newData = { ...selectedCode };\r\n        newData.name = e.target.value;\r\n        setSelectedCode(newData);\r\n    };\r\n\r\n    return (\r\n        <div className=\"code-editor-nav\">\r\n            <Modal\r\n                title=\"Save Code to local device\"\r\n                visible={saveOpen}\r\n                // footer={[null]}\r\n                // style={{border: '2px solid var(--primaryText)'}}\r\n                onCancel={() => {setSaveOpen(false)}}\r\n                onOk={handleSave}\r\n            >\r\n                Name &nbsp;&nbsp; : \t&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <Input value={selectedCode.name} onChange={changeName} style={{width: '200px'}} />\r\n            </Modal>\r\n            <span>\r\n                <Button\r\n                    style={{ color: \"var(--primaryText)\", backgroundColor: \"none\", width: \"auto\" }}\r\n                    onClick={handleRun}\r\n                    disabled={loading}\r\n                >\r\n                    <CaretRightOutlined />\r\n                    Run\r\n                </Button>\r\n                <Button style={{ color: \"var(--primaryText)\", backgroundColor: \"none\", width: \"auto\" }} onClick={() => {setSaveOpen(true)}}>\r\n                    <SaveFilled />\r\n                    Save\r\n                </Button>\r\n            </span>\r\n            <span>\r\n                <span style={{color: '#fff', marginRight: '10px'}}>\r\n                    Language : \r\n                </span>\r\n                <Select value={selectedCode.language} style={{ width: 120 }} onChange={handleLanguageChange}>\r\n                    <Option value=\"cpp\">CPP</Option>\r\n                    <Option value=\"c\">C</Option>\r\n                    <Option value=\"java\">Java</Option>\r\n                    <Option value=\"python\">Python</Option>\r\n                </Select>\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n","import { MdDeleteForever } from \"react-icons/md\";\r\nimport { BsFillArrowUpRightCircleFill } from \"react-icons/bs\";\r\nimport React from \"react\";\r\nimport { Button, Tooltip } from \"antd\";\r\nimport { PlusCircleFilled } from \"@ant-design/icons\";\r\n\r\nexport default function RenderSaved({ savedCodes, setSavedCodes, setSelectedCode, setLoading, setOutput, setInput }) {\r\n    const loadSavedCode = (index) => {\r\n        setLoading(true);\r\n        setInput(\"\");\r\n        setOutput(\"\");\r\n        setSelectedCode(savedCodes[index]);\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 500);\r\n    }\r\n    const handleDelete = (index) => {\r\n        setLoading(true);\r\n        setSavedCodes( [...savedCodes.filter((code, i) => i !== index)] );\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 500);\r\n    }\r\n    const handleNew = () => {\r\n        setLoading(true);\r\n        setInput(\"\");\r\n        setOutput(\"\");\r\n\r\n        setSelectedCode({\r\n            id: Math.floor(Math.random() * 100000),\r\n            name: \"\",\r\n            code: \"// code goes here\",\r\n            language: \"cpp\"\r\n        });\r\n\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 500);\r\n    }\r\n\r\n    return savedCodes.length === 0 ? (\r\n        <>\r\n            <div className=\"playground-code-title\">\r\n                No Codes Saved !\r\n            </div>\r\n            <Button type=\"primary\" style={{margin: '20px 0px', fontSize: '20px', height: '100%'}} icon={<PlusCircleFilled />} onClick={handleNew}>\r\n                New\r\n            </Button>\r\n        </>\r\n    ) : (\r\n        <>\r\n            <div className=\"playground-code-title\" >\r\n                Saved Codes ...\r\n            </div>\r\n            <Button type=\"primary\" style={{margin: '20px 0px', fontSize: '20px', height: '100%'}} icon={<PlusCircleFilled />} onClick={handleNew}>\r\n                New\r\n            </Button>\r\n            <div className=\"outer-scroll-div\" style={{height: '600px'}}>\r\n                {savedCodes.map((code, index) => (\r\n                    <div className=\"playground-saved-codes\">\r\n                        <div className=\"playground-saved-codes-inner\">\r\n                            <span style={{alignItems: 'center', marginRight: '8px'}}>{code.name}</span>\r\n                            <span style={{display: 'inline-flex', alignItems: 'center'}}>\r\n                                <span style={{display: 'inline-flex', alignItems: 'center'}} onClick={() => {loadSavedCode(index)}} >\r\n                                    <Tooltip title=\"Load saved code to editor\">\r\n                                        <BsFillArrowUpRightCircleFill style={{fontSize: '25px', marginRight: '8px'}} />\r\n                                    </Tooltip>\r\n                                </span>\r\n                                <span style={{display: 'inline-flex', alignItems: 'center'}} onClick={() => {handleDelete(index)}}>\r\n                                    <Tooltip title=\"Delete saved code\">\r\n                                        <MdDeleteForever style={{fontSize: '25px'}} />\r\n                                    </Tooltip>\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport SplitPane, { Pane } from \"react-split-pane\";\r\nimport Editor from \"@monaco-editor/react\";\r\nimport { Modal } from \"antd\";\r\nimport SemipolarLoading from \"react-loadingg/lib/SemipolarLoading\";\r\nimport EditorNavbar from \"./EditorNavbar\";\r\nimport useWindowDimensions from \"../Components/WindowDimensions\";\r\nimport RenderSaved from \"./RenderSaved\";\r\n\r\n\r\nexport default function MyEditor({ savedCodes, setSavedCodes, selectedCode, setSelectedCode }) {\r\n    const editorRef = useRef(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [input, setInput] = useState(\"\");\r\n    const [output, setOutput] = useState(\"\");\r\n\r\n    function handleEditorDidMount(editor, monaco) {\r\n        editorRef.current = editor;\r\n    }\r\n\r\n    const getEditorCode = () => {\r\n        return editorRef.current.getValue()\r\n    }\r\n\r\n    const { height, width } = useWindowDimensions();\r\n\r\n    return (\r\n        <div className=\"questionEverything-outer-div\">\r\n            <Modal\r\n                centered\r\n                visible={loading}\r\n                footer={null}\r\n                bodyStyle={{padding: '0px'}}\r\n                closable={false}\r\n            >\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\" />\r\n            </Modal>\r\n\r\n            <SplitPane style={{ position: \"absolute\" }} minSize={330} maxSize={620} defaultSize={400} split=\"vertical\">\r\n                <Pane>\r\n                    <RenderSaved \r\n                        savedCodes={savedCodes}\r\n                        setSavedCodes={setSavedCodes}\r\n                        setSelectedCode={setSelectedCode}\r\n                        setLoading={setLoading}\r\n                        setOutput={setOutput}\r\n                        setInput={setInput}\r\n                    />\r\n                </Pane>\r\n                <SplitPane minSize={height - 65 - 270} maxSize={height - 75} defaultSize={height - 65 - 170} split=\"horizontal\">\r\n                    <Pane>\r\n                        <EditorNavbar\r\n                            savedCodes={savedCodes}\r\n                            setSavedCodes={setSavedCodes}\r\n                            selectedCode={selectedCode}\r\n                            setSelectedCode={setSelectedCode}\r\n                            loading={loading}\r\n                            setLoading={setLoading}\r\n                            getEditorCode={getEditorCode}\r\n                            input={input}\r\n                            setOutput={setOutput}\r\n                        />\r\n                        <Editor\r\n                            theme=\"vs-dark\"\r\n                            language={selectedCode.language}\r\n                            value={selectedCode.code}\r\n                            onMount={handleEditorDidMount}\r\n                            width=\"100%\"\r\n                        />\r\n                    </Pane>\r\n                    <Pane style={{ height: \"100%\", width: \"100%\"}}>\r\n                        <div style={{display: 'inline-flex', width: '100%', height: '100%'}}>\r\n                            <div style={{width: '100%', background: \"var(--primaryBackground)\", padding: '6px', borderRight: '2px solid var(--primaryText)'}}>\r\n                                <div className=\"code-editor-input-title\">Input</div>\r\n                                <textarea \r\n                                    value={input} \r\n                                    onChange={(e) => {setInput(e.target.value); setOutput(\"\")}} \r\n                                    className=\"code-editor-input-textarea\"\r\n                                />\r\n                            </div>\r\n                            <div style={{width: '100%', background: \"var(--primaryBackground)\", padding: '6px'}}>\r\n                                <div className=\"code-editor-input-title\">Output </div>\r\n                                <div \r\n                                    style={{whiteSpace: 'pre', textAlign: 'left', fontSize: '17px'}}\r\n                                    className=\"outer-scroll-div\"\r\n                                >\r\n                                    {output}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Pane>\r\n                </SplitPane>\r\n            </SplitPane>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { setBreadcrumb } from '../Redux/Actions/RoomsDataActions';\r\nimport MyEditor from './MyEditor';\r\n\r\nexport default function CodePlayground() {\r\n    document.title = \"Code Playground | Code Rooms\"\r\n\r\n    const [savedCodes, setSavedCodes] = useState( localStorage.savedPlaygroundCodes ?\r\n        JSON.parse(localStorage.getItem(\"savedPlaygroundCodes\")) : [] );\r\n\r\n    const [selectedCode, setSelectedCode] = useState({\r\n        id: Math.floor(Math.random() * 100000),\r\n        name: \"\",\r\n        code: \"\",\r\n        language: \"cpp\"\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(setBreadcrumb([\r\n            {\r\n                name: \"Code Playground\",\r\n                url: \"/code\"\r\n            }\r\n        ]))\r\n        localStorage.setItem(\"savedPlaygroundCodes\", JSON.stringify(savedCodes));\r\n    }, [savedCodes])\r\n\r\n    return (\r\n        <MyEditor \r\n            savedCodes={savedCodes}\r\n            setSavedCodes={setSavedCodes}\r\n            selectedCode={selectedCode}\r\n            setSelectedCode={setSelectedCode}\r\n        />\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { CaretRightOutlined, SaveFilled, SendOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport { Select } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport moment from \"moment\";\r\nconst { Option } = Select;\r\n\r\nexport default function EditorNavbar({questionDetails, setQuestionDetails, loading ,setLoading, getEditorCode, input, setOutput}) {\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    \r\n    const handleLanguageChange = value => {\r\n        const newData = { ...questionDetails };\r\n        newData.language = value;\r\n        setQuestionDetails(newData);\r\n    };\r\n\r\n\r\n    const handleRun = async() => {\r\n        setLoading(true);\r\n        setOutput(\"\");\r\n        await axios.post(\"/run_code\", {\r\n                code: getEditorCode(),\r\n                language: questionDetails.language,\r\n                input: input,\r\n            })\r\n            .then(res => {\r\n                // console.log(JSON.parse(res.data));\r\n                setOutput(JSON.parse( res.data).output)\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Some issue while run.\", {variant: 'error'});\r\n            });\r\n        setLoading(false);\r\n    };\r\n\r\n    const handleSave = async() => {\r\n        setLoading(true);\r\n        await axios.post(\"/save_question_code\", {\r\n                questionId: queryParams.get(\"qId\"),\r\n                code: getEditorCode() ,\r\n                language: questionDetails.language,\r\n            })\r\n            .then(res => {\r\n                enqueueSnackbar(\"Saved successfully.\", {variant: 'success'});\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Some issue while saving.\", {variant: 'error'});\r\n            });\r\n        setLoading(false);\r\n           \r\n    };\r\n    const handleSubmit = async() => {\r\n        setLoading(true);\r\n        await axios.post(\"/submit_question_code\", {\r\n                questionId: queryParams.get(\"qId\"),\r\n                code: getEditorCode() ,\r\n                language: questionDetails.language,\r\n            })\r\n            .then(res => {\r\n                if(res.data.noOfCases === 0){\r\n                    enqueueSnackbar(\"Submitted successfully.\", {variant: 'success'});\r\n                }\r\n                else if(res.data.casesPassed === res.data.noOfCases){\r\n                    enqueueSnackbar(\"Submitted successfully. \" + res.data.casesPassed + \" out of \" + res.data.noOfCases + \" cases passes\", {variant: 'success'});\r\n                }\r\n                else{\r\n                    enqueueSnackbar(\"Submitted successfully. \" + res.data.casesPassed + \" out of \" + res.data.noOfCases + \" cases passes\", {variant: 'warning'});\r\n                }\r\n                setQuestionDetails({\r\n                    ...questionDetails,\r\n                    submitted: true,\r\n                    submittedAt: moment().format()\r\n                })\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Some issue while submitting.\", {variant: 'error'});\r\n            });\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"code-editor-nav\">\r\n            <span>\r\n                <Button\r\n                    style={{ color: \"var(--primaryText)\", backgroundColor: \"none\", width: \"auto\" }}\r\n                    onClick={handleRun}\r\n                    disabled={loading}\r\n                >\r\n                    <CaretRightOutlined />\r\n                    Run\r\n                </Button>\r\n                <Button style={{ color: \"var(--primaryText)\", backgroundColor: \"none\", width: \"auto\" }} onClick={handleSave}>\r\n                    <SaveFilled />\r\n                    Save\r\n                </Button>\r\n                {\r\n                    moment(questionDetails.endTime).isAfter(moment().format()) ? (\r\n                        <Button\r\n                            style={{ color: \"var(--primaryText)\", backgroundColor: \"none\", width: \"auto\" }}\r\n                            onClick={handleSubmit}\r\n                        >\r\n                            <SendOutlined />\r\n                            Submit\r\n                        </Button>\r\n                    ) : (<></>)\r\n                }\r\n            </span>\r\n            <span>\r\n                <span style={{color: '#fff', margin: '0px 10px 0px 10px'}}>\r\n                    Language : \r\n                </span>\r\n                <Select value={questionDetails.language} style={{ width: 120 }} onChange={handleLanguageChange}>\r\n                    <Option value=\"cpp\">CPP</Option>\r\n                    <Option value=\"c\">C</Option>\r\n                    <Option value=\"java\">Java</Option>\r\n                    <Option value=\"python\">Python</Option>\r\n                </Select>\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport SplitPane, { Pane } from \"react-split-pane\";\r\nimport Editor from \"@monaco-editor/react\";\r\nimport useWindowDimensions from \"../../Components/WindowDimensions\";\r\nimport EditorNavbar from \"./EditorNavbar\";\r\n\r\nexport default function CodeType({overlayLoading, setOverlayLoading, questionDetails, setQuestionDetails }) {\r\n    const editorRef = useRef(null);\r\n    const [input, setInput] = useState(\"\");\r\n    const [output, setOutput] = useState(\"\");\r\n\r\n    function handleEditorDidMount(editor, monaco) {\r\n        editorRef.current = editor;\r\n    }\r\n\r\n    const getEditorCode = () => {\r\n        return editorRef.current.getValue();\r\n    };\r\n\r\n    const { height, width } = useWindowDimensions();\r\n\r\n    return (\r\n        <SplitPane minSize={height - 65 - 270} maxSize={height - 75} defaultSize={height - 65 - 170} split=\"horizontal\">\r\n            <Pane>\r\n                <EditorNavbar\r\n                    questionDetails={questionDetails}\r\n                    setQuestionDetails={setQuestionDetails}\r\n                    loading={overlayLoading}\r\n                    setLoading={setOverlayLoading}\r\n                    getEditorCode={getEditorCode}\r\n                    input={input}\r\n                    setOutput={setOutput}\r\n                />\r\n                <Editor\r\n                    theme=\"vs-dark\"\r\n                    language={questionDetails.language}\r\n                    defaultValue={questionDetails.savedCode}\r\n                    onMount={handleEditorDidMount}\r\n                />\r\n            </Pane>\r\n            <Pane style={{ height: \"100%\", widht: \"100%\" }}>\r\n                <div style={{ display: \"inline-flex\", width: \"100%\", height: \"100%\" }}>\r\n                    <div\r\n                        style={{\r\n                            width: \"100%\",\r\n                            background: \"var(--primaryBackground)\",\r\n                            padding: \"6px\",\r\n                            borderRight: \"2px solid var(--primaryText)\",\r\n                        }}\r\n                    >\r\n                        <div className=\"code-editor-input-title\">Input</div>\r\n\r\n                        <textarea\r\n                            value={input}\r\n                            onChange={e => {\r\n                                setInput(e.target.value);\r\n                                setOutput(\"\");\r\n                            }}\r\n                            className=\"code-editor-input-textarea\"\r\n                        />\r\n                    </div>\r\n                    <div style={{ width: \"100%\", background: \"var(--primaryBackground)\", padding: \"6px\" }}>\r\n                        <div className=\"code-editor-input-title\">Output </div>\r\n                        <div\r\n                            style={{ whiteSpace: \"pre\", textAlign: \"left\", fontSize: \"17px\" }}\r\n                            className=\"outer-scroll-div\"\r\n                        >\r\n                            {output}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Pane>\r\n        </SplitPane>\r\n    )\r\n}\r\n","export const backendURL = \"http://localhost:8000\";\r\n","import { UploadOutlined } from '@ant-design/icons';\r\nimport { Button, Popconfirm, Upload } from 'antd';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect, useState } from 'react';\r\nimport FileViewer from 'react-file-viewer';\r\nimport { useLocation } from 'react-router';\r\nimport { backendURL } from '../../Constants';\r\n\r\n\r\nexport default function FileType({setOverlayLoading, questionDetails, setQuestionDetails}) {\r\n    const [src, setSrc] = useState(\"\");\r\n    const [file, setFile] = useState(null);\r\n\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    useEffect(() => {\r\n        if(!questionDetails.submitted){\r\n            enqueueSnackbar(\"File should be .pdf type and file size should not exceed 7MB\", {variant: 'warning'})\r\n        } \r\n    }, [questionDetails.submitted])\r\n\r\n\r\n    const deleteSubmission = async() => {\r\n        setOverlayLoading(true);\r\n        await axios.post(\"/delete_submitted_file\", {\r\n            questionId:  queryParams.get(\"qId\"),\r\n            submissionId: questionDetails.submissionId\r\n        })\r\n            .then(res => {\r\n                setQuestionDetails({\r\n                    ...questionDetails,\r\n                    submitted: false,\r\n                })\r\n                setFile(null);\r\n                setSrc(\"\");\r\n                enqueueSnackbar(\"Deleted Submission!\", {variant: 'info'})\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Some error occurred while deleting !\", {variant: 'error'})\r\n            })\r\n        setOverlayLoading(false);\r\n\r\n    }\r\n\r\n\r\n    const handleBeforeUpload = (e) => {\r\n        try{\r\n            setSrc(URL.createObjectURL(e))\r\n            setFile(e);\r\n            return false;\r\n        }\r\n        catch(err) {\r\n            setFile(null);\r\n            setSrc(\"\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        if(e.fileList.length === 0){\r\n            setFile(null);\r\n            setSrc(\"\");\r\n            return;\r\n        }\r\n\r\n        try{\r\n            setSrc(URL.createObjectURL(e.file))\r\n            setFile(e.file);\r\n        }\r\n        catch(err) {\r\n            setFile(null);\r\n            setSrc(\"\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    const handleSubmitFile = async() => {\r\n        setOverlayLoading(true);\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        if(formData !== null){\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'multipart/form-data'\r\n                }\r\n            }\r\n            await axios.post(\"/submit_question_file/\" + queryParams.get(\"qId\") , formData, config)\r\n                .then(res => {\r\n                    setQuestionDetails({\r\n                        ...questionDetails,\r\n                        submitted: true,\r\n                        submittedAt: moment().format(),\r\n                        submissionId: res.data.submissionId\r\n                    })\r\n                    enqueueSnackbar(\"File submitted successfully !\", {variant: 'success'})\r\n                })\r\n                .catch(err => {\r\n                    try {\r\n                        enqueueSnackbar(err.response.data.detail, {variant: 'error'});\r\n                    } catch (error) {\r\n                        enqueueSnackbar(\"Some issue while submitting.\", {variant: 'error'});    \r\n                    }\r\n                })\r\n        }\r\n        setOverlayLoading(false);\r\n    }\r\n\r\n\r\n    const downloadPDF = () => {\r\n\t\tfetch(`${backendURL}/get_submitted_file?questionId=${queryParams.get(\"qId\")}&submissionId=${questionDetails.submissionId}&token=${localStorage.getItem('JWTtoken')}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\tresponse.blob().then(blob => {\r\n\t\t\t\t\tlet url = window.URL.createObjectURL(blob);\r\n\t\t\t\t\tlet a = document.createElement('a');\r\n\t\t\t\t\ta.href = url;\r\n\t\t\t\t\ta.download = \"Submission.pdf\" ;\r\n\t\t\t\t\ta.click();\r\n\t\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\r\n    return questionDetails.submitted ? (\r\n        <>\r\n        {\r\n            moment(questionDetails.endTime).isAfter(moment().format()) ? (\r\n                <Popconfirm\r\n                    title={\r\n                        <>\r\n                            Are you sure you want to submit again?<br /> \r\n                            This will delete your previous submission.\r\n                        </>\r\n                    }\r\n                    onConfirm={deleteSubmission}\r\n                    okText=\"Yes\"\r\n                    cancelText=\"Cancel\"\r\n                    overlayInnerStyle={{maxWidth: '400px', backgroundColor: 'var(--primaryBackground)', border: '2px solid var(--primaryText)'}}\r\n                >\r\n                    <Button \r\n                        style={{marginTop: \"10px\"}}\r\n                        type=\"primary\" \r\n                        danger={true}\r\n                    >\r\n                        Change Submission\r\n                    </Button>\r\n                </Popconfirm>\r\n            ) : (<></>)\r\n        }\r\n            <Button onClick={downloadPDF} style={{marginTop: \"10px\", marginLeft: '10px'}} type=\"primary\"  >\r\n                Download PDF\r\n            </Button>\r\n            <FileViewer\r\n                fileType={\"pdf\"}\r\n                filePath={`${backendURL}/get_submitted_file?questionId=${queryParams.get(\"qId\")}&submissionId=${questionDetails.submissionId}&token=${localStorage.getItem('JWTtoken')}`}\r\n            />\r\n        </>\r\n    ) : (\r\n        <>\r\n            <div style={{height: 'auto', display: 'flex', alignItems: \"center\", justifyContent: 'space-between', margin: '10px 0px 30px 0px'}}>\r\n                <Upload\r\n                    listType=\"picture\"\r\n                    beforeUpload={handleBeforeUpload}\r\n                    maxCount={1}\r\n                    multiple={false}\r\n                    type=\"file\"\r\n                    accept=\"application/pdf\"\r\n                    onChange={handleChange}\r\n                    className=\"upload-list-inline\"\r\n                >\r\n                    <Button icon={<UploadOutlined />} style={{height: '66px'}} >Upload</Button>\r\n                </Upload>\r\n                {/* <img src={src} style={{border: '2px solid white', width: '100%'}} /> */}\r\n                <Button \r\n                    onClick={handleSubmitFile} \r\n                    type=\"primary\" \r\n                    style={{margin: '0px 30px 0px 0px', height: \"66px\"}}\r\n                    disabled={file === null}\r\n                >\r\n                    Submit\r\n                </Button>\r\n            </div>\r\n            {\r\n                file !== null ? (\r\n                    <>\r\n                    <FileViewer\r\n                        controls={true}\r\n                        fileType={\"pdf\"}\r\n                        filePath={src}\r\n                        key={src}\r\n                    />\r\n                    </>\r\n                ) : (<></>)\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n","import { Modal } from 'antd';\r\nimport axios from 'axios';\r\nimport { convertFromRaw, EditorState } from 'draft-js';\r\nimport moment from 'moment';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect, useState } from 'react'\r\nimport SemipolarLoading from 'react-loadingg/lib/SemipolarLoading';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport SplitPane, { Pane } from 'react-split-pane';\r\nimport QuestionPreview from '../../MyRooms/EditQuestion/QuestionPreview';\r\nimport { logoutUser } from '../../Redux/Actions/AuthActions';\r\nimport { setBreadcrumb } from '../../Redux/Actions/RoomsDataActions';\r\nimport CodeType from './CodeType';\r\nimport FileType from './FileType';\r\n\r\nexport default function ViewQuestion() {\r\n    document.title = \"Question | Code Rooms\";\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [overlayLoading, setOverlayLoading] = useState(false);\r\n    const [questionDetails, setQuestionDetails] = useState({});\r\n    const [roomDetails, setRoomDetails] = useState({});\r\n\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    useEffect(async () => {\r\n        setLoading(true);\r\n        if (!queryParams.has(\"qId\")) {\r\n            enqueueSnackbar(\"Invalid question.\", { variant: \"warning\" });\r\n            history.replace(\"/enrolled_rooms\");\r\n        }\r\n        await axios\r\n            .get(\"/question_for_member\", {\r\n                params: {\r\n                    questionId: queryParams.get(\"qId\"),\r\n                },\r\n            })\r\n            .then(res => {\r\n                setQuestionDetails({\r\n                    _type: res.data.details._type,\r\n                    title: res.data.details.title,\r\n                    description: EditorState.createWithContent(convertFromRaw(res.data.details.template.description)),\r\n                    sample: res.data.details.template.sample,\r\n                    endTime: res.data.details.endTime,\r\n                    savedCode: res.data.details.savedCode,\r\n                    language: res.data.details.language || \"cpp\",\r\n                    submitted: res.data.details.submitted,\r\n                    submittedAt: res.data.details.submittedAt,\r\n                    submissionId: res.data.details.submissionId,\r\n                });\r\n\r\n                setRoomDetails({\r\n                    roomId: res.data.details.roomId,\r\n                    roomName: res.data.details.roomName\r\n                })\r\n\r\n            })\r\n            .catch(err => {\r\n                try {\r\n                    if (err.response.status === 401) {\r\n                        dispatch(logoutUser());\r\n                        return;\r\n                    }\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                    history.replace(\"/enrolled_rooms\");\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some error occured while getting question details.\", { variant: \"error\" });\r\n                    history.replace(\"/enrolled_rooms\");\r\n                }\r\n            });\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    useEffect(async() => {\r\n        dispatch(setBreadcrumb( [\r\n            {\r\n                \"name\": \"Enrolled Rooms\",\r\n                \"url\": \"/enrolled_rooms\"\r\n            },\r\n            {\r\n                \"name\": roomDetails.roomName,\r\n                \"url\": \"/enrolled_rooms/\" + roomDetails.roomId\r\n            },\r\n            {\r\n                \"name\": \"Question\",\r\n                \"url\": \"/question?qId=/\" + queryParams.get(\"qId\")\r\n            },\r\n        ] ));\r\n    }, [roomDetails.roomId]);\r\n\r\n\r\n    const renderRightPane = () => {\r\n        if(questionDetails._type === \"code\"){\r\n            return (\r\n                <CodeType \r\n                    overlayLoading={overlayLoading}\r\n                    setOverlayLoading={setOverlayLoading}\r\n                    questionDetails={questionDetails}\r\n                    setQuestionDetails={setQuestionDetails}\r\n                />\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <FileType \r\n                    setOverlayLoading={setOverlayLoading} \r\n                    questionDetails={questionDetails}\r\n                    setQuestionDetails={setQuestionDetails}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    return loading ? (\r\n        <div className=\"VerifyEmail-heading-div\">\r\n            <div>Loading Question ....</div>\r\n            <div style={{ marginTop: \"40px\", position: \"relative\" }}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\" />\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div>\r\n            <Modal centered visible={overlayLoading} footer={null} bodyStyle={{ padding: \"0px\" }} closable={false}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\" />\r\n            </Modal>\r\n\r\n            <SplitPane style={{ position: \"absolute\" }} minSize={300} maxSize={620} defaultSize={400} split=\"vertical\">\r\n                <Pane>\r\n                    <div style={{ padding: \"15px\", borderBottom: \"2px solid #fff\" }}>\r\n                        <div className=\"myRooms-cards-description\" style={{fontSize: '15px'}}>\r\n                            <span style={{display: \"inline-flex\", minWidth: \"170px\" }}>End Time</span>\r\n                            {moment(questionDetails.endTime).format(\"Do MMM HH:mm a\")}\r\n                        </div>\r\n                        {\r\n                            questionDetails.submitted ? (\r\n                                <div className=\"myRooms-cards-description\" style={{fontSize: '15px'}}>\r\n                                    <span style={{ display: \"inline-flex\", minWidth: \"170px\" }}>Submitted At</span>\r\n                                    {moment(questionDetails.submittedAt).format(\"Do MMM HH:mm a\")}\r\n                                </div>\r\n                            ) : (<></>)\r\n                        }\r\n                    </div>\r\n                    <QuestionPreview \r\n                        title={questionDetails.title} \r\n                        description={questionDetails.description} \r\n                        sample={questionDetails.sample}     \r\n                    />\r\n                </Pane>\r\n                {renderRightPane()}\r\n            </SplitPane>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport SplitPane, { Pane } from \"react-split-pane\";\r\nimport Editor from \"@monaco-editor/react\";\r\nimport { CaretRightOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport useWindowDimensions from \"../../Components/WindowDimensions\";\r\nimport { Select } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useSnackbar } from \"notistack\";\r\nconst { Option } = Select;\r\n\r\nexport default function CodeType({\r\n    setOverlayLoading,\r\n    selected,\r\n    setSelected,\r\n}) {\r\n    const [language, setLanguage] = useState(selected.language || \"cpp\");\r\n    const [input, setInput] = useState(\"\");\r\n    const [output, setOutput] = useState(\"\");\r\n\r\n    const editorRef = useRef(null);\r\n    const { height, width } = useWindowDimensions();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const getUserCode = async() => {\r\n        setOverlayLoading(true);\r\n        await axios\r\n            .get(\"/get_submitted_code\", {\r\n                params: {\r\n                    submissionId: selected.submissionId,\r\n                },\r\n            })\r\n            .then(res => {\r\n                var newSelected = { ...selected };\r\n                newSelected.code = res.data.data.code;\r\n                newSelected.language = res.data.data.language;\r\n\r\n                setLanguage(res.data.data.language);\r\n                setSelected(newSelected);\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Some error occured while getting submission\", { variant: \"error\" });\r\n            });\r\n\r\n        setOverlayLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!selected.submissionId) {\r\n            return;\r\n        }\r\n        getUserCode();\r\n    }, [selected.submissionId]);\r\n\r\n\r\n\r\n    function handleEditorDidMount(editor, monaco) {\r\n        editorRef.current = editor;\r\n        // editorRef.updateOptions({ readOnly: true })\r\n    }\r\n    const handleLanguageChange = value => {\r\n        setLanguage(value);\r\n    };\r\n\r\n    const getEditorCode = () => {\r\n        return editorRef.current.getValue();\r\n    };\r\n\r\n\r\n    const handleRun = async () => {\r\n        setOverlayLoading(true);\r\n        setOutput(\"\");\r\n        await axios\r\n            .post(\"/run_code\", {\r\n                code: getEditorCode(),\r\n                language: language,\r\n                input: input,\r\n            })\r\n            .then(res => {\r\n                setOutput(JSON.parse(res.data).output);\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Some error occured while run.\", { variant: \"error\" });\r\n                // console.log(err);\r\n            });\r\n        setOverlayLoading(false);\r\n    };\r\n\r\n    return (\r\n        <SplitPane minSize={height - 65 - 270} maxSize={height - 75} defaultSize={height - 65 - 170} split=\"horizontal\">\r\n            <Pane>\r\n                <div className=\"code-editor-nav\">\r\n                    <span>\r\n                        <Button\r\n                            style={{\r\n                                color: \"var(--primaryText)\",\r\n                                backgroundColor: \"none\",\r\n                                width: \"auto\",\r\n                            }}\r\n                            onClick={handleRun}\r\n                        >\r\n                            <CaretRightOutlined />\r\n                            Run\r\n                        </Button>\r\n                    </span>\r\n                    <span>\r\n                        <span style={{color: '#fff', marginRight: '10px'}}>\r\n                            Language : \r\n                        </span>\r\n                        <Select value={language} style={{ width: 120 }} onChange={handleLanguageChange}>\r\n                            <Option value=\"cpp\">CPP</Option>\r\n                            <Option value=\"c\">C</Option>\r\n                            <Option value=\"java\">Java</Option>\r\n                            <Option value=\"python\">Python</Option>\r\n                        </Select>\r\n                    </span>\r\n                </div>\r\n                <Editor\r\n                    key={selected.submissionId}\r\n                    options={{ readOnly: true }}\r\n                    value={selected.code || \"\"}\r\n                    theme=\"vs-dark\"\r\n                    readOnly={true}\r\n                    language={language}\r\n                    // defaultValue={selected.code}\r\n                    onMount={handleEditorDidMount}\r\n                />\r\n            </Pane>\r\n            <Pane style={{ height: \"100%\", widht: \"100%\" }}>\r\n                <div style={{ display: \"inline-flex\", width: \"100%\", height: \"100%\" }}>\r\n                    <div\r\n                        style={{\r\n                            width: \"100%\",\r\n                            background: \"var(--primaryBackground)\",\r\n                            padding: \"6px\",\r\n                            borderRight: \"2px solid var(--primaryText)\",\r\n                        }}\r\n                    >\r\n                        <div className=\"code-editor-input-title\">Input</div>\r\n                        <textarea\r\n                            value={input}\r\n                            onChange={e => {\r\n                                setInput(e.target.value);\r\n                                setOutput(\"\");\r\n                            }}\r\n                            className=\"code-editor-input-textarea\"\r\n                        />\r\n                    </div>\r\n                    <div style={{ width: \"100%\", background: \"var(--primaryBackground)\", padding: \"6px\" }}>\r\n                        <div className=\"code-editor-input-title\">Output </div>\r\n                        <div\r\n                            style={{ whiteSpace: \"pre\", textAlign: \"left\", fontSize: \"17px\" }}\r\n                            className=\"outer-scroll-div\"\r\n                        >\r\n                            {output}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Pane>\r\n        </SplitPane>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Table, Button, Input, Space, Modal } from \"antd\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport moment from \"moment\";\r\n\r\nexport default function ManageSelected({ questionDetails, roomDetails, enrolled, setEnrolled, selected, setSelected }) {\r\n    const getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    ref={node => {\r\n                        var searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                    style={{ marginBottom: 8, display: \"block\" }}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined />}\r\n                        size=\"small\"\r\n                        style={{ width: 90 }}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                        Reset\r\n                    </Button>\r\n                    <Button\r\n                        type=\"link\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            confirm({ closeDropdown: false });\r\n\r\n                            setSearchText(selectedKeys[0]);\r\n                            setSearchedColumn(dataIndex);\r\n                        }}\r\n                    >\r\n                        Filter\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />,\r\n        onFilter: (value, record) =>\r\n            record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : \"\",\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n            }\r\n        },\r\n        render: text =>\r\n            searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                    highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n                    searchWords={[searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : \"\"}\r\n                />\r\n            ) : (\r\n                text\r\n            ),\r\n    });\r\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n\r\n        setSearchText(selectedKeys[0]);\r\n        setSearchedColumn(dataIndex);\r\n    };\r\n    const handleReset = clearFilters => {\r\n        clearFilters();\r\n        setSearchText(\"\");\r\n    };\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [searchedColumn, setSearchedColumn] = useState(\"\");\r\n\r\n    const [showTable, setShowTable] = useState(true);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const handleSelected = row => {\r\n        if (selected.submissionId !== row.submissionId) {\r\n            setSelected(row);\r\n        }\r\n        setShowTable(false);\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: \"Username\",\r\n            dataIndex: \"userName\",\r\n            key: \"userName\",\r\n            ...getColumnSearchProps(\"userName\"),\r\n        },\r\n        {\r\n            title: \"Name\",\r\n            dataIndex: \"name\",\r\n            key: \"name\",\r\n            ...getColumnSearchProps(\"name\"),\r\n        },\r\n        {\r\n            title: \"SpecialFields\",\r\n            children: roomDetails.specialFields.map((field, index) => {\r\n                return {\r\n                    title: field,\r\n                    // dataIndex: field,\r\n                    key: field,\r\n                    render: row => row.specialFields[index],\r\n                };\r\n            }),\r\n            hidden: roomDetails.specialFields.length === 0,\r\n        },\r\n        {\r\n            title: \"Cases Passed (\" + questionDetails.noOfTCases + \")\",\r\n            key: \"cases\",\r\n            // width: \"100px\",\r\n            render: row => (row.submissionId !== 0 ? <> {row.tCasesPassed} </> : <></>),\r\n            hidden: questionDetails.noOfTCases === 0,\r\n        },\r\n        {\r\n            title: \"Submitted At\",\r\n            key: \"submittedss\",\r\n            // width: \"100px\",\r\n            render: row => (row.submissionId !== 0 ? <> {moment(row.submittedAt).format(\"MMMM Do, h:mm a\")} </> : <></>),\r\n        },\r\n        {\r\n            title: \"Submitted\",\r\n            key: \"submitted\",\r\n            width: \"100px\",\r\n            render: row =>\r\n                row.submissionId !== 0 ? (\r\n                    <Button\r\n                        onClick={() => {\r\n                            handleSelected(row);\r\n                        }}\r\n                    >\r\n                        View Submission\r\n                    </Button>\r\n                ) : (\r\n                    <>Not submitted</>\r\n                ),\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ textAlign: \"left\", paddingLeft: \"15px\", paddingBottom: \"15px\", borderBottom: \"2px solid #fff\" }}>\r\n                <Button\r\n                    onClick={() => {\r\n                        setShowTable(true);\r\n                    }}\r\n                    style={{ margin: \"20px 0px 0px 0px\" }}\r\n                    type=\"primary\"\r\n                >\r\n                    Open Submission Table\r\n                </Button>\r\n            </div>\r\n            <div style={{ padding: \"15px\", borderBottom: \"2px solid #fff\" }}>\r\n                <div className=\"myRooms-cards-description\">\r\n                    <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"170px\" }}>Username</span>\r\n                    {selected.userName}\r\n                </div>\r\n                <div className=\"myRooms-cards-description\">\r\n                    <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"170px\" }}>Name</span>\r\n                    {selected.name}\r\n                </div>\r\n                {selected.submissionId !== 0 ? (\r\n                    <div className=\"myRooms-cards-description\">\r\n                        <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"170px\" }}>Submitted At</span>\r\n                        {moment(selected.submittedAt).format(\"MMMM Do, h:mm a\")}\r\n                    </div>\r\n                ) : (<></>)}\r\n                {roomDetails.specialFields.map((field, index) => (\r\n                    <div className=\"myRooms-cards-description\">\r\n                        <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"170px\" }}>{field}</span>\r\n                        {selected.specialFields[index]}\r\n                    </div>\r\n                ))}\r\n                {questionDetails.noOfTCases !== 0 ? (\r\n                    <div className=\"myRooms-cards-description\">\r\n                        <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"170px\" }}>\r\n                            Cases passed\r\n                        </span>\r\n                        {/* <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"120px\" }}> */}\r\n\r\n                        {selected.tCasesPassed}/{questionDetails.noOfTCases}\r\n                        {/* </span> */}\r\n                    </div>\r\n                ) : (\r\n                    <></>\r\n                )}\r\n            </div>\r\n            <Modal\r\n                title={<div style={{ width: \"1000px\" }}>Submissions</div>}\r\n                centered\r\n                visible={showTable}\r\n                footer={null}\r\n                // bodyStyle={{width: \"80vw\"}}\r\n                closable={true}\r\n                onCancel={() => {\r\n                    setShowTable(false);\r\n                }}\r\n                width=\"80vw\"\r\n            >\r\n                {/* <div style={{width: '1000px'}}>hii</div> */}\r\n                <Table columns={columns} dataSource={enrolled} size=\"small\" pagination={false} />\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","import { Button } from 'antd';\r\nimport React from 'react'\r\nimport  FileViewer  from 'react-file-viewer';\r\nimport { useLocation } from 'react-router';\r\nimport { backendURL } from '../../Constants';\r\n\r\n\r\nexport default function FileType({selected}) {\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n\r\n    const downloadPDF = () => {\r\n\t\tfetch(`${backendURL}/get_submitted_file?questionId=${queryParams.get(\"qId\")}&submissionId=${selected.submissionId}&token=${localStorage.getItem('JWTtoken')}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\tresponse.blob().then(blob => {\r\n\t\t\t\t\tlet url = window.URL.createObjectURL(blob);\r\n\t\t\t\t\tlet a = document.createElement('a');\r\n\t\t\t\t\ta.href = url;\r\n\t\t\t\t\ta.download = \"Submission.pdf\" ;\r\n\t\t\t\t\ta.click();\r\n\t\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n    return (\r\n        <>\r\n            <Button onClick={downloadPDF} style={{marginTop: \"10px\", marginLeft: '10px'}} type=\"primary\"  >\r\n                Download PDF\r\n            </Button>\r\n            <FileViewer\r\n                controls={true}\r\n                fileType={\"pdf\"}\r\n                filePath={`${backendURL}/get_submitted_file?questionId=${queryParams.get(\"qId\")}&submissionId=${selected.submissionId}&token=${localStorage.getItem('JWTtoken')}`}\r\n                key={selected.submissionId}\r\n            />\r\n        </>\r\n    )\r\n}","import { Modal } from 'antd';\r\nimport axios from 'axios';\r\nimport { convertFromRaw, EditorState } from 'draft-js';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect, useState } from 'react'\r\nimport SemipolarLoading from 'react-loadingg/lib/SemipolarLoading';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport SplitPane, { Pane } from 'react-split-pane';\r\nimport QuestionPreview from '../EditQuestion/QuestionPreview';\r\nimport { logoutUser } from '../../Redux/Actions/AuthActions';\r\nimport { setBreadcrumb } from '../../Redux/Actions/RoomsDataActions';\r\nimport CodeType from './CodeType';\r\nimport ManageSelected from './ManageSelected';\r\nimport FileType from './FileType';\r\n\r\nexport default function CheckSubmissions() {\r\n    document.title = \"Submissions | Code Rooms\";\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [overlayLoading, setOverlayLoading] = useState(false);\r\n    const [questionDetails, setQuestionDetails] = useState({});\r\n    const [roomDetails, setRoomDetails] = useState({});\r\n    const [enrolled, setEnrolled] = useState([])\r\n    const [selected, setSelected] = useState({})\r\n\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n\r\n    useEffect(async() => {\r\n        dispatch(setBreadcrumb( [\r\n            {\r\n                \"name\": \"My Rooms\",\r\n                \"url\": \"/my_rooms\"\r\n            },\r\n            {\r\n                \"name\": roomDetails.roomName,\r\n                \"url\": \"/my_rooms/\" + roomDetails.roomId\r\n            },\r\n            {\r\n                \"name\": \"Submissions\",\r\n                \"url\": \"/submissions?qId=/\" + queryParams.get(\"qId\")\r\n            },\r\n        ] ));\r\n    }, [roomDetails.roomId]);\r\n\r\n    useEffect(async () => {\r\n        setLoading(true);\r\n        if (!queryParams.has(\"qId\")) {\r\n            enqueueSnackbar(\"Invalid question.\", { variant: \"warning\" });\r\n            history.replace(\"/my_rooms\");\r\n        }\r\n        await axios\r\n            .get(\"/question_submissions\", {\r\n                params: {\r\n                    questionId: queryParams.get(\"qId\"),\r\n                },\r\n            })\r\n            .then(res => {\r\n                setQuestionDetails({\r\n                    title: res.data.questionDetails.title,\r\n                    description: EditorState.createWithContent(convertFromRaw(res.data.questionDetails.template.description)),\r\n                    sample: res.data.questionDetails.template.sample,\r\n                    endTime: res.data.questionDetails.endTime,\r\n                    noOfTCases: res.data.questionDetails.testCases,\r\n                    _type: res.data.questionDetails._type\r\n                });\r\n\r\n                setRoomDetails({\r\n                    roomId: res.data.roomDetails.roomId,\r\n                    roomName: res.data.roomDetails.roomName,\r\n                    specialFields: res.data.roomDetails.specialFields,\r\n                });\r\n\r\n                setEnrolled(res.data.enrolled);\r\n\r\n                var select = {};\r\n                for(var i = 0; i < res.data.enrolled.length; i ++){\r\n                    if(res.data.enrolled[i].submissionId !== 0){\r\n                        select = res.data.enrolled[i];\r\n                        break;\r\n                    }\r\n                }\r\n                if(i === res.data.enrolled.length){\r\n                    enqueueSnackbar(\"No submissions recorded\", { variant: \"info\" });\r\n                    history.replace(\"/my_rooms/\" + res.data.roomDetails.roomId)\r\n                }\r\n                setSelected(select);\r\n\r\n            })\r\n            .catch(err => {\r\n                // console.log(err);\r\n                try {\r\n                    if (err.response.status === 401) {\r\n                        dispatch(logoutUser());\r\n                        return;\r\n                    }\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                    history.replace(\"/my_rooms\");\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some error occured while getting submissions\", { variant: \"error\" });\r\n                    history.replace(\"/my_rooms\");\r\n                }\r\n            });\r\n            setTimeout(() => {\r\n                \r\n                setLoading(false);\r\n            }, 500);\r\n    }, []);\r\n\r\n    const renderRightPane = () => {\r\n        if(questionDetails._type === \"code\"){\r\n            return (\r\n                <CodeType \r\n                    setOverlayLoading={setOverlayLoading}\r\n                    selected={selected}\r\n                    setSelected={setSelected}\r\n                />\r\n            )\r\n        } \r\n        else{\r\n            return(\r\n                <FileType \r\n                    selected={selected}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    return loading ? (\r\n        <div className=\"VerifyEmail-heading-div\">\r\n            <div>Loading Submissions ....</div>\r\n            <div style={{ marginTop: \"40px\", position: \"relative\" }}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\" />\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div>\r\n            <Modal centered visible={overlayLoading} footer={null} bodyStyle={{ padding: \"0px\" }} closable={false}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\" />\r\n            </Modal>\r\n            <SplitPane style={{ position: \"absolute\" }} minSize={350} maxSize={620} defaultSize={400} split=\"vertical\">\r\n                    <Pane>\r\n                        <ManageSelected\r\n                            questionDetails={questionDetails}\r\n                            roomDetails={roomDetails}\r\n                            enrolled={enrolled}\r\n                            setEnrolled={setEnrolled}\r\n                            selected={selected}\r\n                            setSelected={setSelected}\r\n                        />\r\n                        <QuestionPreview\r\n                            title={questionDetails.title} \r\n                            description={questionDetails.description} \r\n                            sample={questionDetails.sample}     \r\n                        />\r\n                    </Pane>\r\n                    {renderRightPane()}\r\n            </SplitPane>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { RiUser6Line } from 'react-icons/ri';\r\nimport { FiUserCheck } from 'react-icons/fi';\r\nimport { Form, Input, Button, Tabs,Tooltip } from \"antd\";\r\nimport { AiOutlineMail } from 'react-icons/ai';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useSnackbar } from 'notistack';\r\nimport axios from 'axios';\r\nimport { loginUser } from '../Redux/Actions/AuthActions';\r\nimport { setBreadcrumb } from '../Redux/Actions/RoomsDataActions';\r\nimport {QuestionCircleOutlined} from \"@ant-design/icons\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nexport default function UserSettings() {\r\n    const [loading, setLoading] = useState(false);\r\n    const authReducer = useSelector(state => state.authReducer);\r\n    const {enqueueSnackbar} = useSnackbar();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        dispatch(setBreadcrumb([\r\n            {\r\n                name: \"Settings\",\r\n                url: \"/user_settings\"\r\n            }\r\n        ]))\r\n    }, [])\r\n\r\n    document.title = \"User Settings | Code Rooms\";\r\n\r\n    const submitUsername = async(values) => {\r\n        if(authReducer.userName === values.userName){\r\n            enqueueSnackbar(\"Username unchanged !\", {variant: 'info'});\r\n            return;\r\n        }\r\n        setLoading(true);\r\n\r\n        await axios.post(\"/auth/change_username\", {\r\n            userName: values.userName\r\n        })\r\n            .then(res => {\r\n                localStorage.setItem(\"JWTtoken\", res.data.access_token);\r\n                const decoded = jwt_decode(res.data.access_token);\r\n                const data = {\r\n                    isLogged: true,\r\n                    userId: decoded.userId,\r\n                    userName: decoded.userName,\r\n                    firstName: decoded.firstName,\r\n                    lastName: decoded.lastName,\r\n                    email: decoded.email,\r\n                };\r\n                dispatch(loginUser(data));\r\n                enqueueSnackbar(\"Username changed to \" + decoded.userName, {variant: 'success'});\r\n            })\r\n            .catch(err => {\r\n                // console.log(err);\r\n                if(!err.response){\r\n                    enqueueSnackbar(\"Some error while changing username!\", {variant: 'error'});\r\n                    setLoading(false);\r\n                    return;\r\n                }\r\n                if(err.response.status === 401){\r\n                    enqueueSnackbar(err.response.data.detail, {\r\n                        variant: \"error\",\r\n                    });\r\n                    history.replace(\"/login\");\r\n                }\r\n                else{\r\n                    enqueueSnackbar(err.response.data.detail, {\r\n                        variant: \"error\",\r\n                    });\r\n                }\r\n\r\n            })\r\n        setLoading(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <Tabs \r\n            defaultActiveKey={\"userInfo\"} \r\n            tabBarExtraContent={\r\n                <Link to=\"/change_password\" style={{marginRight: '20px'}}>\r\n                    <Button disabled={loading} danger>\r\n                        Change Password\r\n                    </Button>\r\n                </Link>\r\n            }\r\n            destroyInactiveTabPane={true}\r\n        >\r\n                <TabPane\r\n                    tab={\r\n                        <div className=\"myRooms-cards-description\" style={{fontSize: '15px'}}>\r\n                            <FiUserCheck />\r\n                            <span style={{ margin: \"0px 6px\", display: \"inline-flex\"}}>\r\n                                Details\r\n                            </span>\r\n                        </div>\r\n                    }\r\n                    key=\"userInfo\"\r\n                    style={{textAlign: \"left\"}}\r\n                    disabled={loading}\r\n                >\r\n                    <div className=\"myRooms-cards-box\" style={{padding: '5px 0px 0px 0px'}}>\r\n                        <div className=\"myRooms-cards-info\">\r\n                            <div className=\"myRooms-cards-description\">\r\n                                <RiUser6Line />\r\n                                <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"150px\" }}>\r\n                                    Name\r\n                                </span>\r\n                                {authReducer.firstName + \" \" + authReducer.lastName}\r\n                            </div>\r\n                            <div className=\"myRooms-cards-description\">\r\n                                <AiOutlineMail />\r\n                                <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"150px\" }}>\r\n                                    Email\r\n                                </span>\r\n                                {authReducer.email}\r\n                            </div>\r\n                            <div className=\"myRooms-cards-description\">\r\n                                <FiUserCheck />\r\n                                <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"150px\" }}>\r\n                                    Username\r\n                                </span>\r\n                                {authReducer.userName}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </TabPane>\r\n                <TabPane\r\n                    tab={\r\n                        <div className=\"myRooms-cards-description\" style={{fontSize: '15px', padding: \"0px\", margin: '0px'}}>\r\n                            <FiUserCheck />\r\n\r\n                            <span style={{ margin: \"0px 6px\", display: \"inline-flex\"}}>\r\n                            Change Username\r\n                            </span>\r\n                        </div>\r\n                    }\r\n                    key=\"changeUsername\"\r\n                    destroyInactiveTabPane={true}\r\n                >\r\n                    <div className=\"signup-input-left\" style={{maxWidth: '400px', marginLeft: '20px'}}>\r\n                        <Form\r\n                            name=\"basic\"\r\n                            onFinish={submitUsername}\r\n                            layout=\"vertical\"\r\n                            initialValues={{\r\n                                layout: \"vertical\",\r\n                            }}\r\n                            autoComplete=\"off\"\r\n                            className=\"signup-form\"\r\n                        >\r\n                            <Form.Item\r\n                                label={\r\n                                    <label style={{ color: \"var(--primaryText)\" }}> \r\n                                        <span style={{paddingRight:'5px'}}>Username</span>\r\n                                        <Tooltip title=\"Username must start with a capital letter, have minimum of 3 characters and should not exceed 15 characters. No special charecters except '_' allowed.\">\r\n                                            <QuestionCircleOutlined />\r\n                                        </Tooltip>\r\n                                    </label>\r\n                                }\r\n                                name=\"userName\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: \"Please input valid username to set!\",\r\n                                    },\r\n                                    {\r\n                                        pattern: new RegExp(\"^[A-Z][a-z0-9_-]{3,15}$\"),\r\n                                        message:\"Invalid username\"\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input disabled={loading} defaultValue={authReducer.userName} />\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                \r\n                                <Button\r\n                                    htmlType=\"submit\"\r\n                                    type=\"primary\"\r\n                                    loading={loading}\r\n                                >\r\n                                    {loading ? \"Submitting\" : \"Submit\"}\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>\r\n                </TabPane>\r\n            </Tabs>\r\n    )\r\n}\r\n\r\n        ","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setBreadcrumb } from \"../Redux/Actions/RoomsDataActions\";\r\nimport { Card, Avatar, Tooltip } from \"antd\";\r\nimport { BsGithub, BsLinkedin } from \"react-icons/bs\";\r\nimport { SiGmail } from \"react-icons/si\";\r\nimport { GoGlobe } from \"react-icons/go\";\r\nimport ScrollToTop from \"react-scroll-to-top\";\r\n\r\nconst { Meta } = Card;\r\n\r\nexport default function AboutUs() {\r\n    const dispatch = useDispatch();\r\n    document.title = \"About Us | Code Rooms\"\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            setBreadcrumb([\r\n                {\r\n                    name: \"About Us\",\r\n                    url: \"/about\",\r\n                },\r\n            ])\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"aboutus-outer\">\r\n            <ScrollToTop smooth style={{paddingTop: '5px' }} color=\"var(--primaryBackground)\" />\r\n            <div className=\"aboutus-inner\">\r\n                <img\r\n                    src=\"./Logo.PNG\"\r\n                    style={{ alignSelf: \"center\", width: '250px', boxShadow: \"20px 20px 2px rgba(0, 0, 0, 0.3)\", marginBottom: '15px' }}\r\n                />\r\n                <div className=\"aboutus-title\">\r\n                    <u> About Us </u>\r\n                </div>\r\n\r\n                <div className=\"aboutus-cards\">\r\n                    <Card\r\n                        style={{ width: 300 }}\r\n                        cover={<img alt=\"Shlok\" src=\"https://avatars.githubusercontent.com/u/63449205?v=4\" />}\r\n                        actions={[\r\n                            (\r\n                                <a href=\"https://github.com/Shlok-Zanwar?tab=repositories\" target=\"_blank\">\r\n                                    <BsGithub className=\"aboutus-card-icons\" key=\"github\" />\r\n                                </a>\r\n                            ),\r\n                            (\r\n                                <a href=\"https://shlok-zanwar.github.io/\" target=\"_blank\">\r\n                                    <GoGlobe className=\"aboutus-card-icons\" key=\"website\" />\r\n                                </a>\r\n                            ),\r\n                            (\r\n                                <a href=\"https://www.linkedin.com/in/shlok-zanwar-0124961ba/\" target=\"_blank\">\r\n                                    <BsLinkedin className=\"aboutus-card-icons\" key=\"linkedin\" />\r\n                                </a>\r\n                            ),\r\n                            (\r\n                                <Tooltip title=\"shlokzanwar14@gmail.com\">\r\n                                    <a href=\"mailto:shlokzanwar14@gmail.com\" target=\"_blank\">\r\n                                        <SiGmail className=\"aboutus-card-icons\" key=\"gmail\" />\r\n                                    </a>\r\n                                </Tooltip>\r\n                            ),\r\n                        ]}\r\n                    >\r\n                        <Meta\r\n                            title=\"Shlok Zanwar\"\r\n                            description={\r\n                                <span >\r\n                                    <div style={{textAlign: 'left', marginBottom: '15px'}}>\r\n                                        (TY CS B-Tech) Student at vishwakarma institute of information technology, pune.\r\n                                    </div>\r\n                                    <div style={{textAlign: 'left'}}>\r\n                                        Quick learner, Proactive \r\n                                    </div>\r\n                                    <div style={{textAlign: 'left'}}>\r\n                                        Tech enthusiast \r\n                                    </div>\r\n                                </span>\r\n                            }\r\n                        />\r\n                    </Card>\r\n                    <Card\r\n                        style={{ width: 300 }}\r\n                        cover={<img alt=\"Roshan\" src=\"https://i.ibb.co/K6cpBDW/img.jpg\" />}\r\n                        actions={[\r\n                            (\r\n                                <a href=\"https://github.com/roshanpurohit\" target=\"_blank\">\r\n                                    <BsGithub className=\"aboutus-card-icons\" key=\"github\" />\r\n                                </a>\r\n                            ),\r\n                            (\r\n                                <a href=\"https://www.linkedin.com/in/roshan-purohit-87389b1a7\" target=\"_blank\">\r\n                                    <BsLinkedin className=\"aboutus-card-icons\" key=\"linkedin\" />\r\n                                </a>\r\n                            ),\r\n                            (\r\n                                <Tooltip title=\"roshpurohit24@gmail.com\">\r\n                                    <a href=\"mailto:roshpurohit24@gmail.com\" target=\"_blank\">\r\n                                        <SiGmail className=\"aboutus-card-icons\" key=\"gmail\" />\r\n                                    </a>\r\n                                </Tooltip>\r\n                            ),\r\n                        ]}\r\n                    >\r\n                        <Meta\r\n                            title=\"Roshan Purohit\"\r\n                            description={\r\n                                <span >\r\n                                    <div style={{textAlign: 'left', marginBottom: '15px'}}>\r\n                                        (TY CS B-Tech) Student at vishwakarma institute of information technology, pune.\r\n                                    </div>\r\n                                    <div style={{textAlign: 'left'}}>\r\n                                        Ardent problem solver \r\n                                    </div>\r\n                                    <div style={{textAlign: 'left'}}>\r\n                                        Web dev enthusiast \r\n                                    </div>\r\n                                </span>\r\n                            }\r\n                        />\r\n                    </Card>\r\n                </div>\r\n\r\n                <div className=\"aboutus-content\">\r\n                    <p>\r\n                        <span style={{color: \"var(--tertiaryBackground)\"}}>\r\n                        Code rooms is a learning management system where teachers can seamlessly create rooms,assignments and\r\n                        assess assignments. Students can easily submit assigned assignments.\r\n                        </span>\r\n                        <br />\r\n                        <br />\r\n                        <u>Cool Features:</u>\r\n                        <div className=\"aboutus-list\">\r\n                            <ul>\r\n                                <li>\r\n                                    Create Rooms with features like waiting room authority and visibility on the go with one\r\n                                    click.\r\n                                </li>\r\n                                <li> \r\n                                    Questions can be made in rooms with submission info and edit options right on the card.\r\n                                    </li>\r\n                                <li>\r\n                                    Create questions on the go with side by side expected user preview on the left with all\r\n                                    editable components on right in resizable panels.\r\n                                </li>\r\n                                <li>\r\n                                    Questions can be of code or file submission type.\r\n                                </li>\r\n                                <li>\r\n                                    Code type questions have option to add testcases which will be processed on submissions.\r\n                                </li>\r\n                                <li>\r\n                                    Question settings like End time and visibility can be edited anytime.\r\n                                </li>\r\n                                <li>\r\n                                    Question due time on question cards itself.\r\n                                </li>\r\n                                <li>\r\n                                    Code type questions can be submitted with user friendly resizable code editor with options\r\n                                    like run with entered input, save current code and submit.\r\n                                </li>\r\n                                <li>\r\n                                    File type questions let you upload the file with a preview before submitting\r\n                                    </li>\r\n                                <li>\r\n                                    Submissions of any type of question can be assessed easily in every question with a code\r\n                                    editor with submitted code or a preview of the file submitted right on the screen with\r\n                                    download option.\r\n                                </li>\r\n                                <li>\r\n                                    Easy navigation throughout the application with features like breadcrumbs. \r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </p>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginUser, logoutUser } from \"./Redux/Actions/AuthActions\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Home from \"./Components/Home\";\r\nimport MyNavbar from \"./Navbar/MyNavbar\";\r\nimport AllRooms from \"./MyRooms/AllRooms/AllRooms\";\r\nimport OneRoom from \"./MyRooms/RoomByRoomId/OneRoom\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { setMyRooms, removeMyRoomsLoading, setEnrolled, removeEnrolledLoading, setEnrolledLoading, setMyRoomsLoading } from \"./Redux/Actions/RoomsDataActions\";\r\nimport AllEnrolled from \"./EnrolledRooms/AllEnrolled/AllEnrolled\";\r\nimport JoinRoom from \"./EnrolledRooms/JoinRoom\";\r\nimport EnrolledRoom from \"./EnrolledRooms/EnrolledById/EnrolledRoom\";\r\nimport EditQuestion from \"./MyRooms/EditQuestion/EditQuestion\";\r\nimport CodePlayground from \"./CodePlayground/CodePlayground\";\r\n// import ViewQuestion from \"./Questions/ViewQuestion/ViewQuestion\";\r\nimport ViewQuestion from \"./EnrolledRooms/ViewQuestion/ViewQuestion\";\r\nimport CheckSubmissions from \"./MyRooms/CheckSubmissions/CheckSubmissions\";\r\nimport UserSettings from \"./Components/UserSettings\";\r\nimport AboutUs from \"./Components/AboutUs\";\r\n\r\nexport default function AuthRouter() {\r\n    const [loading, setLoading] = useState(true);\r\n    const authReducer = useSelector(state => state.authReducer);\r\n    const dispatch = useDispatch();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const handleError = (err) => {\r\n        if(!err.response){\r\n            enqueueSnackbar(\"Some Error occurred while getting Rooms. Please refresh page\", {variant: 'error'});\r\n            return;\r\n        }\r\n        if(err.response.status === 401){\r\n            dispatch(logoutUser());\r\n        }\r\n        else{\r\n            enqueueSnackbar(\"Some Error occurred while getting Rooms. Please refresh page\", {variant: 'error'})\r\n        }\r\n    }\r\n\r\n    const getMyRoomsData = async() => {\r\n        dispatch(setMyRoomsLoading());\r\n        axios.get(\"/my_rooms\")\r\n            .then(res => {\r\n                dispatch(setMyRooms(res.data.myRooms));\r\n                dispatch(removeMyRoomsLoading());\r\n            })\r\n            .catch(err => {\r\n                handleError(err);\r\n            })\r\n    }\r\n\r\n    const getEnrolledRoomsData = async() => {\r\n        dispatch(setEnrolledLoading());\r\n        axios.get(\"/enrolled_rooms\")\r\n            .then(res => {\r\n                dispatch(setEnrolled(res.data.enrolledRooms));\r\n                dispatch(removeEnrolledLoading());\r\n            })\r\n            .catch(err => {\r\n                handleError(err);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        try {\r\n            if (localStorage.JWTtoken) {\r\n                const token = localStorage.getItem(\"JWTtoken\");\r\n                // Decode token and get user info and exp\r\n                const decoded = jwt_decode(token);\r\n                // Set user and isAuthenticated\r\n                // store.dispatch(setCurrentUser(decoded));\r\n                // Check for expired token\r\n                // console.log(decoded)\r\n                const currentTime = Date.now() / 1000; // to get in milliseconds\r\n                if (decoded.exp >= currentTime) {\r\n                    const data = {\r\n                        isLogged: true,\r\n                        userId: decoded.userId,\r\n                        userName: decoded.userName,\r\n                        firstName: decoded.firstName,\r\n                        lastName: decoded.lastName,\r\n                        email: decoded.email,\r\n                    };\r\n                    // decoded.isLogged = true;\r\n                    dispatch(loginUser(data));\r\n                    getEnrolledRoomsData();\r\n                    getMyRoomsData();\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    return loading ? (\r\n        <div>Loading</div>\r\n    ) : !authReducer.isLogged ? (\r\n        <Redirect\r\n            push\r\n            to={{\r\n                pathname: \"/login\",\r\n                state: {\r\n                    from: window.location.href,\r\n                },\r\n            }}\r\n        />\r\n    ) : (\r\n        <>\r\n            <MyNavbar />\r\n            {/* <div style={{height: (height-63) + \"px\", position: 'relative' }}> */}\r\n                <Switch>\r\n                    <Route exact path=\"/my_rooms\">\r\n                        <AllRooms getMyRoomsData={getMyRoomsData} />\r\n                    </Route>\r\n                    <Route exact path=\"/my_rooms/:id\">\r\n                        <OneRoom getMyRoomsData={getMyRoomsData} />\r\n                    </Route>\r\n                    <Route exact path=\"/join_room\">\r\n                        <JoinRoom />\r\n                    </Route>\r\n                    <Route exact path=\"/enrolled_rooms\">\r\n                        <AllEnrolled getEnrolledRoomsData={getEnrolledRoomsData} />\r\n                    </Route>\r\n                    <Route exact path=\"/enrolled_rooms/:id\">\r\n                        <EnrolledRoom />\r\n                    </Route>\r\n                    <Route exact path=\"/edit_question\">\r\n                        <EditQuestion />\r\n                    </Route>\r\n                    <Route exact path=\"/question\">\r\n                        <ViewQuestion />\r\n                    </Route>\r\n                    <Route exact path=\"/submissions\">\r\n                        <CheckSubmissions />\r\n                    </Route>\r\n                    <Route exact path=\"/code\">\r\n                        <CodePlayground />\r\n                    </Route>\r\n                    <Route exact path=\"/user_settings\">\r\n                        <UserSettings />\r\n                    </Route>\r\n                    <Route exact path=\"/about\">\r\n                        <AboutUs />\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <Home />\r\n                    </Route>\r\n                </Switch>\r\n            {/* </div> */}\r\n        </>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Typography } from 'antd';\r\nimport { PointSpreadLoading } from 'react-loadingg';\r\nimport axios from 'axios';\r\nimport { useLocation } from 'react-router';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nexport default function VerifyEmail() {\r\n    document.title = \"Verify Email | Code Rooms\"\r\n\r\n    const [countdown, setCountdown] = useState(10);\r\n    const [result, setResult] = useState(\"\");\r\n    const [statusColor, setStatusColor] = useState(\"#ff1c03\")\r\n    \r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    useEffect(async() => {\r\n        if(countdown <= 0){\r\n            window.location.href = \"/login\"\r\n        }\r\n\r\n        if(result === \"\"){\r\n            if(!queryParams.has(\"email\") || !queryParams.has(\"otp\")){\r\n                setResult(\"Invalid Credentials\");\r\n                enqueueSnackbar(\"Some Error occurred\", {\r\n                    variant: \"success\",\r\n                });\r\n            }\r\n            else{\r\n                await axios.post(\"/auth/verify_email\", {\r\n                    email: queryParams.get(\"email\"),\r\n                    otp: queryParams.get(\"otp\")\r\n                })\r\n                    .then(res => {\r\n                        enqueueSnackbar(\"Email Verified\", {\r\n                            variant: \"success\",\r\n                        });\r\n                        setResult(\"Email id \" + queryParams.get(\"email\") + \" Verified\");\r\n                        setStatusColor(\"#46ed1c\");\r\n                    })\r\n                    .catch(err => {\r\n                        try {\r\n                            setResult(err.response.data.detail);\r\n                        } catch (error) {\r\n                            setResult(\"Some Error Occured\");\r\n                        }\r\n                        enqueueSnackbar(\"Some Error occurred\", {\r\n                            variant: \"error\",\r\n                        });\r\n                    })\r\n            }\r\n        }\r\n\r\n        setTimeout(() => {\r\n            setCountdown(countdown - 1);\r\n        }, 1000);\r\n    }, [countdown])\r\n\r\n    return (\r\n        <div className=\"VerifyEmail-outer-div\">\r\n            <div className=\"VerifyEmail-heading-div\">\r\n                Verifying Details with Server ...\r\n            </div>\r\n            {\r\n                result === \"\" ? (\r\n                    <div style={{marginTop: \"20px\", position: 'relative'}}>\r\n                        <PointSpreadLoading color=\"var(--loadingColor)\" />\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"verifyEmail-status-div\">\r\n                        <div>Status : <span style={{color: statusColor}}>{result}</span></div>\r\n                        <div>Redirecting to <span><a href=\"/login\">login</a></span> page in {countdown} seconds</div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Form, Input, Button, Tooltip} from \"antd\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {QuestionCircleOutlined} from \"@ant-design/icons\";\r\n\r\nexport default function Signup() {\r\n    document.title = \"Sign Up | Code Rooms\"\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    let history = useHistory();\r\n\r\n    const onFinish = async values => {\r\n        setLoading(true);\r\n        if (values.password !== values.rePassword) {\r\n            enqueueSnackbar(\"Passwords do not match!\", {\r\n                variant: \"error\",\r\n            });\r\n            setTimeout(() => {\r\n                setLoading(false);\r\n            }, 1000);\r\n            return;\r\n        }\r\n        await axios\r\n            .post(\"/auth/signup\", {\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                email: values.email,\r\n                password: values.password,\r\n                username: values.userName,\r\n            })\r\n            .then(res => {\r\n                enqueueSnackbar(\"Verification link has been sent to \" + values.email + \". Please verify your account.\", {\r\n                    variant: \"success\",\r\n                });\r\n                setLoading(false);\r\n                history.push('/login');\r\n            })\r\n            .catch(err => {\r\n                try {\r\n                    enqueueSnackbar(err.response.data.detail, {\r\n                        variant: \"error\",\r\n                    });\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some Error occurred.\", {\r\n                        variant: \"error\",\r\n                    });\r\n                }\r\n                setLoading(false);\r\n            });\r\n    };\r\n    return (\r\n        <div className=\"signup-outer-div\">\r\n            <img\r\n                src=\"./Logo.PNG\"\r\n                style={{ alignSelf: \"center\", width: '250px', boxShadow: \"20px 20px 2px rgba(0, 0, 0, 0.3)\" }}\r\n            />\r\n            <div className=\"signup-header-div\">Sign Up</div>\r\n            <Form\r\n                name=\"basic\"\r\n                onFinish={onFinish}\r\n                // onFinishFailed={onFinishFailed}\r\n                layout=\"vertical\"\r\n                initialValues={{\r\n                    layout: \"vertical\",\r\n                }}\r\n                autoComplete=\"off\"\r\n                className=\"signup-form\"\r\n            >\r\n                <div className=\"signup-input-sameline\">\r\n                    <Form.Item\r\n                        label={<label style={{ color: \"var(--primaryText)\" }}>First Name</label>}\r\n                        name=\"firstName\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please input your First Name!\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={<label style={{ color: \"var(--primaryText)\" }}>Last Name</label>}\r\n                        name=\"lastName\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please input your Last Name!\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                </div>\r\n                <div className=\"signup-input-left\">\r\n                    <Form.Item\r\n                        label={<label style={{ color: \"var(--primaryText)\" }}>Email</label>}\r\n                        name=\"email\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please input your Email address!\",\r\n                            },\r\n                            {\r\n                                type: 'email',\r\n                                warningOnly: true,\r\n                                message:\"Input is not a valid email address!\"\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                         label={\r\n                            <label style={{ color: \"var(--primaryText)\" }}> \r\n                                <span style={{paddingRight:'5px'}}>Username</span>\r\n                                <Tooltip title=\"Username must start with a capital letter, have minimum of 3 characters and should not exceed 15 characters. No special charecters except '_' allowed.\">\r\n                                    <QuestionCircleOutlined />\r\n                                </Tooltip>\r\n                            </label>\r\n                        }\r\n                        name=\"userName\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please input username to set!\",\r\n                            },\r\n                            {\r\n                                pattern: new RegExp(\"^[A-Z][a-z0-9_-]{4,10}$\"),\r\n                                message:\"Invalid username\"\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                </div>\r\n                <div className=\"signup-input-sameline\">\r\n                    <Form.Item\r\n                        label={\r\n                            <label style={{ color: \"var(--primaryText)\" }}> \r\n                                <span style={{paddingRight:'5px'}}>Password</span>\r\n                                <Tooltip  title=\"Password must contain ATLEAST one uppercase character, one lowercase character, one numeric character, one special character and should have length of 5 to 15 characters.\">\r\n                                    <QuestionCircleOutlined />\r\n                                </Tooltip>\r\n                            </label>\r\n                        }\r\n                        name=\"password\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message:\"Please input password!\"\r\n                            },\r\n                            {\r\n                                message: \"Invalid Password!\",\r\n                                pattern: new RegExp(\"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[*.!@$%^#&:;<>(){},.?~_|]).{5,15}$\")\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={<label style={{ color: \"var(--primaryText)\" }}>Re-Enter Password</label>}\r\n                        name=\"rePassword\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please re-enter your password!\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n                </div>\r\n                <a href=\"/login\"> Already have an account? Log in. </a>\r\n                 <Form.Item\r\n                    wrapperCol={{\r\n                        offset: 8,\r\n                        span: 16,\r\n                    }}\r\n                >\r\n                    \r\n                    <Button\r\n                        htmlType=\"submit\"\r\n                        style={{\r\n                            backgroundColor: \"var(--success)\",\r\n                            width: \"auto\",\r\n                            fontSize: \"20px\",\r\n                            height: \"auto\",\r\n                            marginRight: \"130px\",\r\n                            marginTop:\"20px\"\r\n                        }}\r\n                        loading={loading}\r\n                    >\r\n                        {loading ? \"Submitting\" : \"Submit\"}\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Form, Input, Button,Tooltip } from \"antd\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\r\n\r\nexport default function ChangePassword() {\r\n    document.title = \"Reset Password | Code Rooms\"\r\n    \r\n    const [loading, setLoading] = useState(false);\r\n    const [showPasswordAndOTP, setShowPasswordAndOTP] = useState(false);\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    let history = useHistory();\r\n\r\n\r\n    const requestOTP = async(email) => {\r\n        setLoading(true);\r\n        await axios.get(\"/auth/request_change_password\", {\r\n            params: {\r\n                email: email\r\n            }\r\n        })\r\n            .then(res => {\r\n                setShowPasswordAndOTP(true);\r\n                enqueueSnackbar(\"OTP has been sent to \" + email, {\r\n                    variant: \"success\",\r\n                });\r\n            })\r\n            .catch(err => {\r\n                if(!err.response){\r\n                    enqueueSnackbar(\"Some Error occurred.\", {\r\n                        variant: \"error\",\r\n                    });\r\n                    setLoading(false);\r\n                    return;\r\n                }\r\n                if(err.response.status === 401){\r\n                    enqueueSnackbar(err.response.data.detail, {\r\n                        variant: \"error\",\r\n                    });\r\n                    history.replace(\"/login\");\r\n                }\r\n                else{\r\n                    enqueueSnackbar(err.response.data.detail, {\r\n                        variant: \"error\",\r\n                    });\r\n                }\r\n            })\r\n        setLoading(false);\r\n    }\r\n\r\n    const changePassword = async(values) => {\r\n        setLoading(true);\r\n        await axios.post(\"/auth/change_password\", {\r\n            email: values.email,\r\n            password: values.password,\r\n            otp: values.otp,\r\n        })\r\n            .then(res => {\r\n                enqueueSnackbar(\"Password changed\", {\r\n                    variant: \"success\",\r\n                });\r\n                history.replace(\"/login\");\r\n            })\r\n            .catch(err => {\r\n                if(!err.response){\r\n                    enqueueSnackbar(\"Some Error occurred.\", {\r\n                        variant: \"error\",\r\n                    });\r\n                    return;\r\n                }\r\n                enqueueSnackbar(err.response.data.detail, {\r\n                    variant: \"error\",\r\n                });\r\n            })\r\n        setLoading(false);\r\n    }\r\n     \r\n\r\n    const onFinish = async values => {\r\n        if(!values.otp){\r\n            requestOTP(values.email)\r\n        }\r\n        else{\r\n            if (values.password !== values.rePassword) {\r\n                enqueueSnackbar(\"Passwords do not match!\", {\r\n                    variant: \"error\",\r\n                });\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            changePassword(values);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"signup-outer-div\">\r\n            <img\r\n                src=\"./Logo.PNG\"\r\n                style={{ alignSelf: \"center\", width: '250px', boxShadow: \"20px 20px 2px rgba(0, 0, 0, 0.3)\" }}\r\n            />\r\n            <div className=\"signup-header-div\">Change password</div>\r\n            <Form\r\n                name=\"basic\"\r\n                layout=\"vertical\"\r\n                initialValues={{\r\n                    layout: \"vertical\",\r\n                }}\r\n                onFinish={onFinish}\r\n                autoComplete=\"off\"\r\n                className=\"signup-form\"\r\n            >\r\n                <div className=\"signup-input-left\">\r\n                    <Form.Item\r\n                        label={<label style={{ color: \"var(--primaryText)\" }}>Email</label>}\r\n                        name=\"email\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please input your Email address!\",\r\n                            },\r\n                            {\r\n                                type: 'email',\r\n                                warningOnly: true,\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input readOnly={showPasswordAndOTP} />\r\n                    </Form.Item>\r\n                </div>\r\n                {\r\n                    showPasswordAndOTP ? (\r\n                    <>\r\n                        <Form.Item\r\n                            label={<label style={{ color: \"var(--primaryText)\" }}>OTP</label>}\r\n                            name=\"otp\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Invalid OTP !\",\r\n                                },\r\n                                {\r\n                                    pattern: new RegExp(\"^[0-9]{6}$\"),\r\n                                    message:\"Invalid OTP !\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input type=\"number\" />\r\n                        </Form.Item>\r\n                        <div className=\"signup-input-sameline\">\r\n                            <Form.Item\r\n                                 label={\r\n                                    <label style={{ color: \"var(--primaryText)\" }}> \r\n                                        <span style={{paddingRight:'5px'}}>Password</span>\r\n                                        <Tooltip  title=\"Password must contain ATLEAST one uppercase character, one lowercase character, one numeric character, one special character and should have length of 5 to 15 characters.\">\r\n                                            <QuestionCircleOutlined />\r\n                                        </Tooltip>\r\n                                    </label>\r\n                                }\r\n                                name=\"password\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: \"Please input your password!\",\r\n                                    },\r\n                                    {\r\n                                        message: \"Invalid Password!\",\r\n                                        pattern: new RegExp(\"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[*.!@$%^#&:;<>(){},.?~_|]).{5,}$\")\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input.Password />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                label={<label style={{ color: \"var(--primaryText)\" }}>Re-Enter Password</label>}\r\n                                name=\"rePassword\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: \"Please re-enter your password!\",\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input.Password />\r\n                            </Form.Item>\r\n                        </div> \r\n                        <span style={{color: 'red'}}>Do not refresh this page.</span>\r\n                    </> \r\n                    ) : (<></>)\r\n                }\r\n                <Form.Item\r\n                    wrapperCol={{\r\n                        offset: 8,\r\n                        span: 16,\r\n                    }}\r\n                >\r\n                    \r\n                    <Button\r\n                        htmlType=\"submit\"\r\n                        style={{\r\n                            backgroundColor: \"var(--success)\",\r\n                            width: \"auto\",\r\n                            // fontSize: \"20px\",\r\n                            height: \"auto\",\r\n                            marginRight: \"130px\",\r\n                            marginTop:\"20px\"\r\n                        }}\r\n                        loading={loading}\r\n                    >\r\n                        {showPasswordAndOTP ? \"Change Password\" : \"Get OTP\"}\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n","import './App.css';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport Login from './Authentication/Login';\r\nimport AuthRouter from './AuthRouter';\r\nimport VerifyEmail from './Authentication/VerifyEmail';\r\nimport Signup from './Authentication/Signup';\r\nimport ChangePassword from './Authentication/ChangePassword';\r\n// import \"antd/dist/antd.css\";\r\n\r\nexport default function App() {\r\n\r\n  \treturn (\r\n\t\t<Router>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"/login\" >\r\n\t\t\t\t\t<Login />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/signup\">\r\n\t\t\t\t\t<Signup />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/verify_email\">\r\n\t\t\t\t\t<VerifyEmail />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/change_password\">\r\n\t\t\t\t\t<ChangePassword />\r\n\t\t\t\t</Route>\r\n\r\n\t\t\t\t<Route path=\"/\">\r\n\t\t\t\t\t{\r\n                        localStorage.getItem('redirectTo') ? <Redirect to={localStorage.getItem('redirectTo')} /> \r\n                        : null\r\n                        \r\n                    }\r\n\t\t\t\t\t<AuthRouter />\r\n\t\t\t\t</Route>\r\n\t\t\t\t\r\n\t\t\t</Switch>\r\n\t\t</Router>\r\n\t)\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    isLogged: false,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    var newState;\r\n    switch (action.type) {\r\n        case 'AR_SET_LOGGED':\r\n            newState = {...action.payload};\r\n            newState.isLogged = true;\r\n            return newState;\r\n        \r\n        case 'AR_LOGOUT':\r\n            newState = {};\r\n            newState.isLogged = false;\r\n            return newState;\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","const initialState = {\r\n    myRooms: [],\r\n    enrolledRooms: [],\r\n    myRoomsLoading: true,\r\n    enrolledRoomsLoading: true,\r\n    breadcrumb: [],\r\n}\r\n\r\nconst roomsDataReducer = (state = initialState, action) => {\r\n    var newState;\r\n    switch (action.type) {\r\n        case 'RDR_SET_MYROOMS_LOADING':\r\n            newState = {...state};\r\n            newState.myRoomsLoading = true;\r\n            return newState;\r\n        case 'RDR_REMOVE_MYROOMS_LOADING':\r\n            newState = {...state};\r\n            newState.myRoomsLoading = false;\r\n            return newState;\r\n\r\n        case 'RDR_SET_ENROLLED_LOADING':\r\n            newState = {...state};\r\n            newState.enrolledRoomsLoading = true;\r\n            return newState;\r\n        case 'RDR_REMOVE_ENROLLED_LOADING':\r\n            newState = {...state};\r\n            newState.enrolledRoomsLoading = false;\r\n            return newState;\r\n        \r\n        case 'RDR_SET_MYROOMS':\r\n            newState = {...state};\r\n            newState.myRooms = action.payload;\r\n            return newState;\r\n\r\n        case 'RDR_SET_ENROLLED':\r\n            newState = {...state};\r\n            newState.enrolledRooms = action.payload;\r\n            return newState;\r\n\r\n        case 'RDR_SET_BREADCRUMB':\r\n            newState = {...state};\r\n            newState.breadcrumb = action.payload;\r\n            return newState;\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default roomsDataReducer;","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./AuthReducer\";\r\nimport roomsDataReducer from \"./RoomsDataReducer\";\r\n\r\nconst ReduxCombined = combineReducers({\r\n    authReducer,\r\n    roomsDataReducer\r\n})\r\n\r\nexport default ReduxCombined;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from 'react-redux';\r\nimport ReduxCombined from './Redux/ReduxCombined';\r\nimport axios from 'axios';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport { backendURL } from './Constants';\r\n\r\n\r\naxios.defaults.baseURL = backendURL;\r\naxios.defaults.headers.common['Authorization'] = localStorage.getItem('JWTtoken');\r\n\r\nconst store = createStore(\r\n    ReduxCombined,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n  \t\t<Provider store={store}>\r\n\t\t  \t<SnackbarProvider\r\n\t\t\t\tmaxSnack={3}\r\n\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\thorizontal: 'left',\r\n\t\t\t\t}}\r\n\t\t\t\tautoHideDuration={4000}\r\n\t\t\t>\r\n\t\t\t<App />\r\n\t\t\t</SnackbarProvider>\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n\r\n\r\n//   const temp = () => {\r\n//     axios.get(\"/\")\r\n//     .then(res => {\r\n//         alert(\"LOGINNNN\");\r\n\t\t\r\n//     })\r\n//     .catch(err => {\r\n//         if(!err.response){\r\n//             // enqueueSnackbar(\"Some Error occurred while getting \" + route, {variant: 'error'});\r\n//             return;\r\n//         }\r\n//         if(err.response.status === 401){\r\n//             dispatch(logoutUser());\r\n//         }\r\n//         else{\r\n//             // enqueueSnackbar(\"Some Error occurred while getting \" + route, {variant: 'error'})\r\n//         }\r\n//     })\r\n//   }"],"sourceRoot":""}