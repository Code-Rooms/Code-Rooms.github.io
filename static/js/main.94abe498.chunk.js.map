{"version":3,"sources":["Authentication/Login.js","Redux/Actions/AuthActions.js","Redux/Actions/RoomsDataActions.js","Components/Home.js","Components/MyDivider.js","Navbar/NavbarDrawer.js","Navbar/MyNavbar.js","MyRooms/AllRooms/RenderRooms.js","MyRooms/AllRooms/AllRooms.js","MyRooms/RoomByRoomId/RoomSettings.js","MyRooms/RoomByRoomId/RenderQuestions.js","MyRooms/RoomByRoomId/RoomEnrolled.js","MyRooms/RoomByRoomId/RoomWaiting.js","MyRooms/RoomByRoomId/OneRoom.js","EnrolledRooms/AllEnrolled/RenderEnrolled.js","EnrolledRooms/AllEnrolled/AllEnrolled.js","Components/Analytics.js","EnrolledRooms/JoinRoom.js","EnrolledRooms/EnrolledById/RenderQuestions.js","EnrolledRooms/EnrolledById/EnrolledRoom.js","TextEditor/MyTextEditor.js","MyRooms/EditQuestion/QuestionTemplate.js","Components/WindowDimensions.js","MyRooms/EditQuestion/QuestionPreview.js","MyRooms/EditQuestion/QuestionCases.js","MyRooms/EditQuestion/QuestionSettings.js","MyRooms/EditQuestion/EditQuestion.js","CodePlayground/EditorNavbar.js","CodePlayground/RenderSaved.js","CodePlayground/MyEditor.js","CodePlayground/CodePlayground.js","EnrolledRooms/ViewQuestion/EditorNavbar.js","EnrolledRooms/ViewQuestion/CodeType.js","Constants.js","EnrolledRooms/ViewQuestion/FileType.js","EnrolledRooms/ViewQuestion/ViewQuestion.js","MyRooms/CheckSubmissions/CodeType.js","MyRooms/CheckSubmissions/ManageSelected.js","MyRooms/CheckSubmissions/FileType.js","MyRooms/CheckSubmissions/CheckSubmissions.js","Components/UserSettings.js","Components/AboutUs.js","AuthRouter.js","Authentication/VerifyEmail.js","Authentication/Signup.js","Authentication/ChangePassword.js","App.js","reportWebVitals.js","Redux/AuthReducer.js","Redux/RoomsDataReducer.js","Redux/ReduxCombined.js","serviceWorkerRegistration.js","index.js"],"names":["Login","document","title","useState","loading","setLoading","userName","setUserName","useHistory","useSnackbar","enqueueSnackbar","closeSnackbar","resendEmail","key","a","axios","get","params","username","then","res","variant","catch","err","response","data","detail","error","action","Fragment","onClick","style","background","border","cursor","color","paddingRight","textDecoration","fontWeight","onFinish","values","post","password","localStorage","setItem","access_token","window","location","href","status","persist","className","src","alignSelf","width","boxShadow","name","labelCol","span","wrapperCol","initialValues","remember","onFinishFailed","errorInfo","errorFields","errors","autoComplete","Item","label","rules","required","message","Password","htmlType","backgroundColor","fontSize","height","marginTop","loginUser","details","type","payload","logoutUser","removeItem","setMyRooms","setEnrolled","setBreadcrumb","Home","due","setDue","dispatch","useDispatch","useEffect","timeConditions","question","moment","endTime","diff","format","display","valueStyle","value","reload","position","size","length","paddingTop","map","to","questionId","marginLeft","minWidth","roomName","_type","MyDivider","margin","SubMenu","Menu","NavbarDrawer","drawerOpen","setDrawerOpen","authReducer","useSelector","state","roomsDataReducer","history","pushLink","link","push","alignItems","MenuOutlined","marginRight","footer","mode","theme","selectable","icon","target","keyboard","placement","closable","onClose","visible","bodyStyle","padding","headerStyle","borderBottom","footerStyle","borderTop","defaultSelectedKeys","defaultOpenKeys","HomeOutlined","BookOutlined","onTitleClick","enrolledRoomsLoading","enrolledRooms","room","roomId","accountType","AppstoreOutlined","myRoomsLoading","myRooms","PlusCircleOutlined","CodeOutlined","SettingOutlined","InfoCircleFilled","LogoutOutlined","MyNavbar","breadcrumb","page","url","fontStyle","RenderRooms","createNewRoom","extra","breakpointCols","default","columnClassName","enrolled","questions","visibility","AllRooms","getMyRoomsData","loadingMessage","setLoadingMessage","queryParams","URLSearchParams","useLocation","search","has","firstName","newRoomId","RoomSettings","settingsVisible","setSettingsVisible","roomInfo","setRoomInfo","specialFields","setSpecialFields","handleSave","newData","undefined","waitingRoomEnabled","newRoomInfo","destroyOnClose","onCancel","Radius","layout","console","log","labelAlign","defaultValue","Option","defaultChecked","justifyContent","marginBottom","hidden","waitingRoomCount","field","index","onChange","e","changeSpecialField","readOnly","filter","i","removeField","danger","disabled","RenderQuestions","getInitialData","deleteQuestion","id","renderVisibility","isVisible","isAfter","onConfirm","okText","cancelText","overlayInnerStyle","maxWidth","top","right","left","submitted","lineWidth","paddingAngle","RoomEnrolled","noOfQuestions","enrolledTable","setEnrolledTable","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","ref","node","placeholder","onPressEnter","handleSearch","SearchOutlined","handleReset","closeDropdown","setSearchText","setSearchedColumn","filterIcon","filtered","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","render","text","searchedColumn","highlightStyle","searchWords","searchText","autoEscape","textToHighlight","tableLoading","setTableLoading","members","deleteMember","userId","tableId","columns","sorter","b","device_code","sortDirections","children","row","item","textAlign","xlsx","require","toPush","content","student","email","questionsSubmitted","sheet","fileName","extraLength","dataSource","pagination","RoomWaiting","waitingTable","setWaitingTable","acceptMember","TabPane","Tabs","OneRoom","setQuestions","useParams","replace","createNewQuestion","newQuestionId","deleteRoom","toCopy","origin","temp","createElement","tempMsg","createTextNode","appendChild","body","select","execCommand","removeChild","CopyOutlined","overlay","defaultActiveKey","tab","RenderEnrolled","AllEnrolled","getEnrolledRoomsData","sendAnalytics","category","ReactGA","event","JoinRoom","specialInfo","setSpecialInfo","joinRoom1","Countdown","Statistic","isSubmitted","submissionTime","EnrolledRoom","getRoomData","leaveRoom","host","DescriptionEditor","props","focus","refs","editor","editorState","setState","handleKeyCommand","_handleKeyCommand","bind","mapKeyToEditorCommand","_mapKeyToEditorCommand","toggleBlockType","_toggleBlockType","toggleInlineStyle","_toggleInlineStyle","command","newState","RichUtils","this","keyCode","getDefaultKeyBinding","newEditorState","onTab","blockType","inlineStyle","contentState","getCurrentContent","hasText","getBlockMap","first","getType","onToggle","blockStyleFn","getBlockStyle","customStyleMap","styleMap","keyBindingFn","spellCheck","React","Component","CODE","fontFamily","block","StyleButton","preventDefault","active","onMouseDown","BLOCK_TYPES","BlockStyleControls","selection","getSelection","getBlockForKey","getStartKey","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","QuestionTemplate","setTitle","description","setDescription","sample","setSample","handleSampleChange","newSample","saveQuestionTemplate","template","convertToRaw","input","output","explanation","getWindowDimensions","innerWidth","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","QuestionPreview","whiteSpace","QuestionCases","testCases","setTestCases","handleChange","newCases","saveCases","paddingBottom","tcase","QuestionSettings","questionSettings","setQuestionSettings","date","setDate","handleDateChange","saveSettings","disabledDate","current","allowClear","checked","EditQuestion","questionDetails","EditorState","createWithContent","convertFromRaw","add","endOf","minSize","maxSize","defaultSize","split","Select","EditorNavbar","savedCodes","setSavedCodes","selectedCode","setSelectedCode","getEditorCode","setOutput","saveOpen","setSaveOpen","handleRun","code","language","JSON","parse","newSaved","setTimeout","onOk","CaretRightOutlined","SaveFilled","RenderSaved","setInput","handleNew","Math","floor","random","PlusCircleFilled","loadSavedCode","handleDelete","MyEditor","editorRef","useRef","centered","getValue","onMount","monaco","borderRight","CodePlayground","savedPlaygroundCodes","getItem","stringify","setQuestionDetails","handleSubmit","noOfCases","casesPassed","submittedAt","SendOutlined","CodeType","overlayLoading","setOverlayLoading","savedCode","widht","backendURL","FileType","setSrc","file","setFile","deleteSubmission","submissionId","handleSubmitFile","formData","FormData","append","config","headers","fetch","blob","URL","createObjectURL","download","click","fileType","filePath","listType","beforeUpload","maxCount","multiple","accept","fileList","UploadOutlined","controls","ViewQuestion","roomDetails","setRoomDetails","selected","setSelected","setLanguage","getUserCode","newSelected","options","ManageSelected","showTable","setShowTable","noOfTCases","tCasesPassed","handleSelected","paddingLeft","CheckSubmissions","UserSettings","submitUsername","decoded","jwt_decode","isLogged","lastName","tabBarExtraContent","destroyInactiveTabPane","QuestionCircleOutlined","pattern","RegExp","Meta","Card","AboutUs","smooth","cover","alt","actions","AuthRouter","pageview","pathname","handleError","JWTtoken","token","currentTime","Date","now","exp","exact","path","from","VerifyEmail","countdown","setCountdown","result","setResult","statusColor","setStatusColor","otp","Signup","rePassword","warningOnly","offset","ChangePassword","showPasswordAndOTP","setShowPasswordAndOTP","requestOTP","changePassword","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","ReduxCombined","combineReducers","Boolean","hostname","match","initialize","defaults","baseURL","common","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","StrictMode","maxSnack","anchorOrigin","vertical","horizontal","autoHideDuration","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.94abe498.chunk.js","sourcesContent":["import { Form, Input, Button } from \"antd\";\r\nimport axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nexport default function Login() {\r\n    document.title = \"Login | Code Rooms\"\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [userName, setUserName] = useState(\"\");\r\n    const history = useHistory();\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n    const resendEmail = async(key) => {\r\n        closeSnackbar(key);\r\n        setLoading(true);\r\n        await axios.get(\"/auth/resend_verification_link\", {\r\n            params: {\r\n                username: userName\r\n            }\r\n        })\r\n            .then(res => {\r\n                enqueueSnackbar(\"Verification link sent.\", {variant: 'success'});\r\n            })\r\n            .catch(err => {\r\n                try {\r\n                    enqueueSnackbar(err.response.data.detail, {\r\n                        variant: \"error\",\r\n                    });\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some Error occurred.\", {\r\n                        variant: \"error\",\r\n                    });\r\n                }\r\n            })\r\n        setLoading(false);\r\n    }\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <>\r\n            <div onClick={() => { resendEmail(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", paddingRight:\"8px\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Resend Email\r\n            </div>\r\n            <div onClick={() => { closeSnackbar(key) }} style={{background:\"transparent\", border:\"none\", cursor:\"pointer\", color:\"#fc28b2\", textDecoration:\"underline\", fontWeight:\"bolder\" }}>\r\n                Dismiss\r\n            </div>\r\n            </>\r\n        </React.Fragment>\r\n    );\r\n\r\n    const onFinish = async values => {\r\n        setLoading(true);\r\n        setUserName(values.userName);\r\n        await axios\r\n            .post(\"/auth/login\", {\r\n                username: values.userName,\r\n                password: values.password,\r\n            })\r\n            .then(res => {\r\n                // console.log(res);\r\n                localStorage.setItem(\"JWTtoken\", res.data.access_token);\r\n                // try {\r\n                //     window.location.href = history.location.state.from;\r\n                // } catch (error) {\r\n                window.location.href = \"/\";\r\n                // }\r\n            })\r\n            .catch(err => {\r\n                try {\r\n                    if(err.response.status === 406){\r\n                        enqueueSnackbar(err.response.data.detail, {\r\n                            variant: 'warning',\r\n                            persist: true,\r\n                            action,\r\n                        });\r\n                    }\r\n                    else{\r\n                        enqueueSnackbar(err.response.data.detail, {\r\n                            variant: \"error\",\r\n                        });\r\n                    }\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some Error occurred.\", {\r\n                        variant: \"error\",\r\n                    });\r\n                }\r\n            });\r\n        setLoading(false);\r\n    };\r\n\r\n    const onFinishFailed = errorInfo => {\r\n        // console.log(errorInfo);\r\n        try {\r\n            enqueueSnackbar(errorInfo.errorFields[0].errors[0], {\r\n                variant: \"error\",\r\n            });\r\n        } catch (error) {\r\n            enqueueSnackbar(\"Some Error occurred.\", {\r\n                variant: \"error\",\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-outer-div\">\r\n            <img\r\n                src=\"./Logo.PNG\"\r\n                style={{ alignSelf: \"center\", width: '250px', boxShadow: \"20px 20px 2px rgba(0, 0, 0, 0.3)\" }}\r\n            />\r\n            <div className=\"login-header-div\">Login</div>\r\n\r\n            <Form\r\n                name=\"basic\"\r\n                labelCol={{\r\n                    span: 24,\r\n                }}\r\n                wrapperCol={{\r\n                    span: 24,\r\n                }}\r\n                initialValues={{\r\n                    remember: true,\r\n                }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                autoComplete=\"off\"\r\n                className=\"login-form\"\r\n            >\r\n                <Form.Item\r\n                    label={<label style={{ color: \"var(--primaryText)\" }}>Username / Email</label>}\r\n                    name=\"userName\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your username/email !\",\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label={<label style={{ color: \"var(--primaryText)\" }}>Password</label>}\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your password!\",\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n                <div>\r\n                    <a href=\"/#/change_password\"> Forgot password. </a>\r\n                </div>\r\n                <a href=\"/#/signup\"> Dont have an account ? Create one. </a>\r\n                \r\n                <Form.Item>\r\n                    <Button\r\n                        htmlType=\"submit\"\r\n                        loading={loading}\r\n                        style={{\r\n                            backgroundColor: \"var(--success)\",\r\n                            // width: \"100px\",\r\n                            fontSize: \"20px\",\r\n                            height: \"auto\",\r\n                            marginTop: \"10px\",\r\n                        }}\r\n                    >\r\n                        Log in\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n","export const loginUser = details => {\r\n    return {\r\n        type: \"AR_SET_LOGGED\",\r\n        payload: details,\r\n    };\r\n};\r\n\r\nexport const logoutUser = () => {\r\n    localStorage.removeItem(\"JWTtoken\");\r\n    return {\r\n        type: \"AR_LOGOUT\",\r\n    };\r\n};\r\n","export const setMyRoomsLoading = () => {\r\n    return {\r\n        type: \"RDR_SET_MYROOMS_LOADING\"\r\n    };\r\n};\r\n\r\nexport const removeMyRoomsLoading = () => {\r\n    return {\r\n        type: \"RDR_REMOVE_MYROOMS_LOADING\"\r\n    };\r\n};\r\n\r\nexport const setMyRooms = (data) => {\r\n    return {\r\n        type: \"RDR_SET_MYROOMS\",\r\n        payload: data\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const setEnrolledLoading = () => {\r\n    return {\r\n        type: \"RDR_SET_ENROLLED_LOADING\"\r\n    };\r\n};\r\n\r\nexport const removeEnrolledLoading = () => {\r\n    return {\r\n        type: \"RDR_REMOVE_ENROLLED_LOADING\"\r\n    };\r\n};\r\n\r\nexport const setEnrolled = (data) => {\r\n    return {\r\n        type: \"RDR_SET_ENROLLED\",\r\n        payload: data\r\n    };\r\n};\r\n\r\n\r\nexport const setBreadcrumb = (data) => {\r\n    return {\r\n        type: \"RDR_SET_BREADCRUMB\",\r\n        payload: data\r\n    };\r\n};\r\n","import Countdown from \"antd/lib/statistic/Countdown\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { RiCodeLine, RiFileAddLine } from \"react-icons/ri\";\r\nimport SemipolarLoading from \"react-loadingg/lib/SemipolarLoading\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logoutUser } from \"../Redux/Actions/AuthActions\";\r\nimport { setBreadcrumb } from \"../Redux/Actions/RoomsDataActions\";\r\n\r\nexport default function Home() {\r\n    document.title = \"Home | Code Rooms\";\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [due, setDue] = useState([]);\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(async () => {\r\n        dispatch(setBreadcrumb([]));\r\n        setLoading(true);\r\n        await axios\r\n            .get(\"/due_questions\")\r\n            .then(res => {\r\n                setDue(res.data.due);\r\n            })\r\n            .catch(err => {\r\n                if (!err.response) {\r\n                    enqueueSnackbar(\"Some Error occurred while getting due questions.\", { variant: \"error\" });\r\n                    return;\r\n                }\r\n                if (err.response.status === 401) {\r\n                    dispatch(logoutUser());\r\n                } else {\r\n                    enqueueSnackbar(\"Some Error occurred while getting due questions\", { variant: \"error\" });\r\n                }\r\n            });\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    const timeConditions = (question) => {\r\n        if(moment(question.endTime).diff(moment().format(), 'seconds') < 0 ){\r\n            return(\r\n                <div style={{color: 'var(--error)', fontSize: '22px'}}>\r\n                    Due date over\r\n                </div>\r\n            )\r\n        }\r\n        if(moment(question.endTime).diff(moment().format(), 'hours') > 48){\r\n            return(\r\n                <span style={{ fontSize: \"20px\", display: \"inline-flex\", color: \"var(--privateRoom)\" }}>\r\n                    Due : {moment(question.endTime).format(\"Do MMM\")}\r\n                </span>\r\n            )\r\n        }\r\n        if(moment(question.endTime).diff(moment().format(), 'hours') > 24){\r\n            return(\r\n                <span style={{ fontSize: \"20px\", display: \"inline-flex\", color: \"var(--privateRoom)\" }}>\r\n                    Due : Tommorow\r\n                </span>\r\n            )\r\n        }\r\n        if(moment(question.endTime).diff(moment().format(), 'hours') > 10){\r\n            return(\r\n                <span style={{ fontSize: \"20px\", display: \"inline-flex\", color: \"var(--privateRoom)\" }}>\r\n                    Due : Today\r\n                </span>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div>\r\n    \r\n                    <Countdown\r\n                        valueStyle={{color: 'var(--privateRoom)', fontSize: '22px'}}\r\n                        value={question.endTime}\r\n                        onFinish={() => {\r\n                            window.location.reload();\r\n                        }}\r\n                        format=\"[Due] : H[h] : m[m] : s[s]\"\r\n                    />\r\n                </div> \r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    return loading ? (\r\n        <div className=\"VerifyEmail-heading-div\">\r\n            <div>Getting Your Data ....</div>\r\n            <div style={{marginTop: \"40px\", position: 'relative'}}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\"  />\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        due.length === 0 ? (\r\n            <div className=\"playground-code-title\" style={{paddingTop: '20px'}}>No Questions Due !!</div> \r\n            ) : (\r\n            <>\r\n                <div className=\"playground-code-title\" style={{paddingTop: '20px'}}>Questions Due</div> \r\n                <div style={{ fontSize: \"20px\", color: \"#fff\" }}>\r\n                    {due.map(question => (\r\n                        <Link to={\"/question?qId=\" + question.questionId} key={\"room.roomId\"}>\r\n                            <div className=\"myRooms-cards-box\">\r\n                                <div className=\"myRooms-cards-info\">\r\n                                    <div className=\"myRooms-cards-title\">\r\n                                        <span>{question.title}</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <div className=\"myRooms-cards-description\">\r\n                                        <span\r\n                                            style={{\r\n                                                marginLeft: \"10px\",\r\n                                                display: \"inline-flex\",\r\n                                                minWidth: \"70px\",\r\n                                                fontWeight: \"bolder\",\r\n                                            }}\r\n                                        >\r\n                                            Room\r\n                                        </span>\r\n                                        : {question.roomName}\r\n                                    </div>\r\n                                    <div className=\"myRooms-cards-description\" style={{marginLeft: '8px'}}>\r\n                                    {\r\n                                        question._type === \"code\" ? (\r\n                                            <>\r\n                                                <RiCodeLine />\r\n                                                <span style={{ marginLeft: \"10px\", display: \"inline-flex\" }}>\r\n                                                    Code Type\r\n                                                </span>\r\n                                            </>\r\n                                        ) :(\r\n                                            <>\r\n                                                <RiFileAddLine />\r\n                                                <span style={{ marginLeft: \"10px\", display: \"inline-flex\" }}>\r\n                                                    File Type\r\n                                                </span>\r\n                                            </>\r\n                                        )\r\n                                    }\r\n                                    </div>\r\n                                    <div className=\"myRooms-card-bottom-bar\">\r\n                                        {timeConditions(question)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    ))}\r\n                </div>\r\n            </>\r\n        )\r\n    )   \r\n}\r\n","import { Divider } from 'antd'\r\nimport React from 'react'\r\n\r\nexport default function MyDivider() {\r\n    return (\r\n        <Divider style={{margin: \"0px\"}} />\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Menu, Tooltip } from 'antd';\r\nimport { BsPersonSquare } from \"react-icons/bs\";\r\nimport { VscVersions } from \"react-icons/vsc\";\r\nimport {\r\n    MenuOutlined,\r\n    AppstoreOutlined,\r\n    HomeOutlined,\r\n    InfoCircleFilled,\r\n    LogoutOutlined,\r\n    BookOutlined,\r\n    PlusCircleOutlined,\r\n    CodeOutlined,\r\n    SettingOutlined\r\n} from '@ant-design/icons';\r\nimport { logoutUser } from \"../Redux/Actions/AuthActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MyDivider from \"../Components/MyDivider\";\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nexport default function NavbarDrawer() {\r\n    const [drawerOpen, setDrawerOpen] = useState(false);\r\n\r\n    const authReducer = useSelector(state => state.authReducer);\r\n    const roomsDataReducer = useSelector(state => state.roomsDataReducer);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const openDrawer = () => {\r\n        setDrawerOpen(true);\r\n    };\r\n    const closeDrawer = () => {\r\n        setDrawerOpen(false);\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        dispatch(logoutUser());\r\n    }\r\n\r\n    const pushLink = (link) => {\r\n        setDrawerOpen(false);\r\n        history.push(link)\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <MenuOutlined style={{ fontSize: \"25px\", color: \"var(--primaryText)\" }} onClick={openDrawer} />\r\n\r\n            <Drawer\r\n                title={\r\n                    // <Tooltip title={authReducer.accountType > 0 ? \"Teacher account\" : \"Student account\"} placement=\"bottomLeft\" >\r\n                        <div style={{ width: \"100%\", display: \"inline-flex\", alignItems: \"center\" }}>\r\n                            <BsPersonSquare style={{ fontSize: \"20px\", marginRight: \"20px\" }} />\r\n                            <div style={{ fontSize: \"20px\" }}>{authReducer.userName}</div>\r\n                        </div>\r\n                    // </Tooltip>\r\n                }\r\n                footer={\r\n                    <Menu style={{  background: 'var(--primaryBackground)'}} mode=\"vertical\" theme=\"dark\" selectable={false}>\r\n                        <MyDivider />\r\n\r\n                        <Menu.Item key=\"2\" icon={<VscVersions />}>\r\n                            Version 0.1\r\n                        </Menu.Item>\r\n\r\n                        <MyDivider />\r\n                        <Menu.Item key=\"3\">\r\n                            <a href=\"https://smartiam.in/\" target=\"_blank\">\r\n                                Hosted :- SmartIAM\r\n                            </a>\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                }\r\n                keyboard={true}\r\n                placement=\"left\"\r\n                closable={false}\r\n                onClose={closeDrawer}\r\n                visible={drawerOpen}\r\n                key=\"left\"\r\n                bodyStyle={{ \r\n                    backgroundColor: \"var(--primaryBackground)\",\r\n                    padding: '0px'\r\n                }}\r\n                headerStyle={{\r\n                    backgroundColor: \"var(--primaryBackground)\",\r\n                    height: \"61px\",\r\n                    borderBottom: \"2px solid var(--primaryText)\",\r\n                }}\r\n                footerStyle={{\r\n                    backgroundColor: \"var(--primaryBackground)\",\r\n                    borderTop: \"None\",\r\n                    padding: '0px'\r\n                    // fontSize: \"18px\",\r\n                }}\r\n                defaultSelectedKeys={['home']}\r\n                defaultOpenKeys={['home']}\r\n            >\r\n                <Menu style={{  background: 'var(--primaryBackground)'}} mode=\"vertical\" theme=\"dark\" selectable={false}>\r\n\r\n                    <Menu.Item key=\"home\" className=\"navbar-drawer-item\" icon={<HomeOutlined/>} onClick={() => {pushLink(`/`)}}>\r\n                        Home\r\n                    </Menu.Item>\r\n\r\n                    <MyDivider />\r\n                    \r\n                    <SubMenu icon={<BookOutlined />} title=\"Enrolled Rooms\" key=\"sub1\" onTitleClick={() => {pushLink(`/enrolled_rooms`)}}>\r\n                        {  \r\n                            roomsDataReducer.enrolledRoomsLoading ? (\r\n                                <Menu.Item >Loading .....</Menu.Item>\r\n                            ) : (\r\n                                roomsDataReducer.enrolledRooms.length === 0 ? (\r\n                                    <Menu.Item >No Rooms</Menu.Item>\r\n                                ) : (\r\n                                    roomsDataReducer.enrolledRooms.map(room => (\r\n                                        <Menu.Item key={room.roomId} onClick={() => {pushLink(`/enrolled_rooms/${room.roomId}`)}}>\r\n                                            {room.roomName}\r\n                                        </Menu.Item>\r\n                                    ))\r\n                                )\r\n                            )\r\n                        }\r\n                    </SubMenu>\r\n\r\n                    {authReducer.accountType > 0 ? (\r\n                        <>\r\n                            <MyDivider />\r\n\r\n                            <SubMenu icon={<AppstoreOutlined/>} title=\"My Rooms\" key=\"sub2\" onTitleClick={() => {pushLink(`/my_rooms`)}} >\r\n                                {  \r\n                                    roomsDataReducer.myRoomsLoading ? (\r\n                                        <Menu.Item >Loading .....</Menu.Item>\r\n                                    ) : (\r\n                                        roomsDataReducer.myRooms.length === 0 ? (\r\n                                            <Menu.Item >No Rooms</Menu.Item>\r\n                                        ) : (\r\n                                            roomsDataReducer.myRooms.map(room => (\r\n                                                <Menu.Item key={room.roomId} onClick={() => {pushLink(`/my_rooms/${room.roomId}`)}}>\r\n                                                    {room.roomName}\r\n                                                </Menu.Item>\r\n                                            ))\r\n                                        )\r\n                                    )\r\n                                }\r\n\r\n                                <MyDivider />\r\n\r\n                                <Menu.Item icon={<PlusCircleOutlined />} onClick={() =>{pushLink(\"/my_rooms?createNewRoom=true\")}}>\r\n                                    Create New\r\n                                </Menu.Item>\r\n                            </SubMenu>\r\n                        </>\r\n                        ) : (<></>)\r\n                    }\r\n\r\n                    <MyDivider />\r\n\r\n                    <Menu.Item icon={<CodeOutlined />} key=\"code\" onClick={() =>{pushLink(\"/code\")}}>\r\n                        Code Playground\r\n                    </Menu.Item>\r\n\r\n                    <MyDivider />\r\n\r\n                    <Menu.Item icon={<SettingOutlined />} key=\"settings\" onClick={() =>{pushLink(\"/user_settings\")}}>\r\n                        Settings\r\n                    </Menu.Item>\r\n\r\n                   \r\n                    <MyDivider />\r\n\r\n                    <Menu.Item icon={<InfoCircleFilled />} key=\"about\" onClick={() =>{pushLink(\"/about\")}} >\r\n                        About\r\n                    </Menu.Item>\r\n\r\n                    <MyDivider />\r\n\r\n                    <Menu.Item icon={<LogoutOutlined />} key=\"logout\" onClick={handleLogout}>\r\n                        Logout\r\n                    </Menu.Item>\r\n                    \r\n                    <MyDivider />\r\n                    \r\n                </Menu>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport NavbarDrawer from \"./NavbarDrawer\";\r\nimport { Breadcrumb, Tooltip } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function MyNavbar() {\r\n    const roomsDataReducer = useSelector(state => state.roomsDataReducer);\r\n\r\n    return (\r\n        <div className=\"navbar-outer-div\">\r\n            <div style={{ display: \"inline-flex\" }}>\r\n                <NavbarDrawer />\r\n                <Breadcrumb style={{display: 'flex', alignItems: 'center', marginLeft: '20px', fontSize: '18px'}}>\r\n                    <Breadcrumb.Item href=\"\">\r\n                        <Link to=\"/\" >\r\n                            {/* <HomeOutlined style={{fontSize: '16px'}} /> */}\r\n                            <span style={{marginLeft: '3px'}}>Home</span>\r\n                        </Link>\r\n                    </Breadcrumb.Item>\r\n\r\n                    {\r\n                        roomsDataReducer.breadcrumb.map(page => (\r\n                            <Breadcrumb.Item href=\"\">\r\n                                <Link to={page.url} >\r\n                                    <span style={{marginLeft: '3px'}}>{page.name}</span>\r\n                                </Link>\r\n                            </Breadcrumb.Item>\r\n                        ))\r\n                    }\r\n\r\n\r\n                </Breadcrumb>\r\n            </div>\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <Tooltip title=\"coderooms.sr@gmail.com\">\r\n                    <div style={{ fontSize: \"25px\", margin: \"0px 20px\", fontStyle: \"italic\", cursor: \"pointer\" }}>\r\n                        Code Rooms\r\n                    </div>\r\n                </Tooltip>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { Button, Result } from \"antd\";\r\nimport React from \"react\";\r\nimport { BsPeople, BsPatchQuestion } from \"react-icons/bs\";\r\nimport Masonry from \"react-masonry-css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function RenderRooms({createNewRoom}) {\r\n    const breakpoints = {\r\n        default: 5,\r\n        1900: 4,\r\n        1520: 3,\r\n        1180: 2,\r\n        830: 1,\r\n    };\r\n    const roomsDataReducer = useSelector(state => state.roomsDataReducer);\r\n\r\n    const getVisblity = (visibility) => {\r\n        if(visibility === \"public\"){\r\n            return(\r\n                <div className=\"myRooms-room-visibility myRooms-public-room\">\r\n                    Public\r\n                </div>\r\n            )\r\n        }\r\n        else if(visibility === \"private\"){\r\n            return(\r\n                <div className=\"myRooms-room-visibility myRooms-private-room\">\r\n                    Private\r\n                </div>\r\n            )\r\n        }\r\n        else if(visibility === \"hidden\"){\r\n            return(\r\n                <div className=\"myRooms-room-visibility myRooms-hidden-room\">\r\n                    Hidden\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return roomsDataReducer.myRooms.length === 0 ? (\r\n        <Result\r\n            title=\"No Rooms created.\"\r\n            extra={\r\n                <Button type=\"primary\" key=\"console\" onClick={createNewRoom}>\r\n                    Create First Room\r\n                </Button>\r\n            }\r\n        />\r\n    ) : (\r\n        <div className=\"myRooms-cards-outer\">\r\n            <Masonry breakpointCols={breakpoints} className=\"my-masonry-grid\" columnClassName=\"my-masonry-grid_column\">\r\n                {roomsDataReducer.myRooms.map(room => (\r\n                    <Link to={\"/my_rooms/\" + room.roomId} key={room.roomId}>\r\n                        <div className=\"myRooms-cards-box\">\r\n                            <div className=\"myRooms-cards-info\">\r\n                                <div className=\"myRooms-cards-title\">\r\n                                    {/* <AppstoreOutlined /> */}\r\n                                    <span>{room.roomName}</span>\r\n                                </div>\r\n                                <div className=\"myRooms-cards-description\">\r\n                                    <BsPeople />\r\n                                    <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"150px\" }}>\r\n                                        Enrolled\r\n                                    </span>\r\n                                    {room.enrolled}\r\n                                </div>\r\n                                <div className=\"myRooms-cards-description\">\r\n                                    <BsPatchQuestion />\r\n                                    <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"150px\" }}>\r\n                                        Questions\r\n                                    </span>\r\n                                    {room.questions}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"myRooms-card-bottom-bar\">\r\n                                {getVisblity(room.visibility)}\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                ))}\r\n            </Masonry>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Divider } from \"antd\";\r\nimport SemipolarLoading from \"react-loadingg/lib/SemipolarLoading\";\r\nimport RenderRooms from \"./RenderRooms\";\r\nimport { removeMyRoomsLoading, setBreadcrumb, setMyRooms, setMyRoomsLoading } from \"../../Redux/Actions/RoomsDataActions\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { logoutUser } from \"../../Redux/Actions/AuthActions\";\r\n\r\nexport default function AllRooms({getMyRoomsData}) {\r\n    document.title = \"My Rooms | Code Rooms\";\r\n\r\n    const [loadingMessage, setLoadingMessage] = useState(\"Getting Your Rooms Data ....\");\r\n    \r\n    const roomsDataReducer = useSelector(state => state.roomsDataReducer);\r\n    const authReducer = useSelector(state => state.authReducer);\r\n    const dispatch = useDispatch();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const history = useHistory();\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n\r\n    const createBreadcrumb = () => {\r\n        getMyRoomsData()\r\n        dispatch(setBreadcrumb( [\r\n            {\r\n                \"name\": \"My Rooms\",\r\n                \"url\": \"/my_rooms\"\r\n            }\r\n        ] ));\r\n    }\r\n\r\n    useEffect(() => {\r\n        createBreadcrumb();\r\n        if(queryParams.has(\"createNewRoom\")){\r\n            createNewRoom();\r\n        }\r\n    }, [queryParams.get(\"createNewRoom\")])\r\n\r\n    const createNewRoom = async() => {\r\n        setLoadingMessage(\"Creating a new Room, please wait ....\");\r\n        dispatch(setMyRoomsLoading());\r\n        await axios.post(\"/create_room\", {\r\n            roomName: authReducer.firstName + \"'s Room \" + (roomsDataReducer.myRooms.length + 1)\r\n        })\r\n            .then(res => {\r\n                dispatch(setMyRooms(res.data.myRooms))\r\n                history.push(\"/my_rooms/\" + res.data.newRoomId + \"?settingsOpen=true\");\r\n            })\r\n            .catch(err => {\r\n                if(!err.response){\r\n                    enqueueSnackbar(\"Some Error occurred while creating room\", {variant: 'error'});\r\n                    return;\r\n                }\r\n                if(err.response.status === 401){\r\n                    dispatch(logoutUser());\r\n                }\r\n                else{\r\n                    enqueueSnackbar(\"Some Error occurred while creating room\", {variant: 'error'})\r\n                }\r\n            })\r\n        dispatch(removeMyRoomsLoading());\r\n    }\r\n\r\n    \r\n\r\n    return roomsDataReducer.myRoomsLoading ? (\r\n        <div className=\"VerifyEmail-heading-div\">\r\n            <div>{loadingMessage}</div>\r\n            <div style={{marginTop: \"40px\", position: 'relative'}}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\"  />\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div className=\"myRooms-outer-div\">\r\n\r\n            <div className=\"myRooms-header\">\r\n                <span>Your Rooms</span>\r\n                <div className=\"myRooms-createNew-button\" onClick={createNewRoom}>\r\n                    <PlusCircleOutlined />\r\n                    <span style={{marginLeft: '5px'}}> Create New </span>\r\n                </div>\r\n            </div>\r\n\r\n            <Divider />\r\n\r\n            <RenderRooms createNewRoom={createNewRoom} />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useDebugValue, useState } from \"react\";\r\nimport { Modal, Button, Input, Form, Switch, Select, Divider, Tooltip } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { setMyRooms } from \"../../Redux/Actions/RoomsDataActions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { BsFillQuestionDiamondFill } from \"react-icons/bs\";\r\n\r\nexport default function RoomSettings({ settingsVisible, setSettingsVisible, roomInfo, setRoomInfo }) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [specialFields, setSpecialFields] = useState(roomInfo.specialFields || []);\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n\r\n    const onFinish = values => {\r\n        console.log(values);\r\n        handleSave(values);\r\n    };\r\n\r\n    const handleSave = async newData => {\r\n        setLoading(true);\r\n        await axios.post(\"/update_room_settings\", {\r\n            roomId: roomInfo.roomId,\r\n            roomName: newData.roomName === undefined ? roomInfo.roomName : newData.roomName,\r\n            visibility: newData.visibility === undefined ? roomInfo.visibility : newData.visibility,\r\n            waitingRoomEnabled: newData.waitingRoomEnabled === undefined ? roomInfo.waitingRoomEnabled : newData.waitingRoomEnabled,\r\n            specialFields: specialFields,\r\n        })\r\n            .then(res => {\r\n                // console.log(res);\r\n                dispatch(setMyRooms(res.data.myRooms));\r\n                var newRoomInfo = { ...roomInfo };\r\n                newRoomInfo.roomName = res.data.roomInfo.roomName;\r\n                newRoomInfo.visibility = res.data.roomInfo.visibility;\r\n                newRoomInfo.waitingRoomEnabled = res.data.roomInfo.waitingRoomEnabled;\r\n                newRoomInfo.enrolled = res.data.roomInfo.enrolled;\r\n                setRoomInfo(newRoomInfo);\r\n                setSettingsVisible(false);\r\n                enqueueSnackbar(\"Settings Updated\", { variant: \"success\" });\r\n            })\r\n            .catch(err => {\r\n                // console.log(err);\r\n                enqueueSnackbar(\"Error while updating Settings\", { variant: \"error\" });\r\n\r\n            });\r\n        setLoading(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setSettingsVisible(false);\r\n    };\r\n\r\n    const changeSpecialField = (e, index) => {\r\n        const newData = [...specialFields];\r\n        newData[index] = e.target.value;\r\n        setSpecialFields(newData);\r\n    };\r\n    const removeField = index => {\r\n        const newData = specialFields.filter((field, i) => index !== i);\r\n        setSpecialFields(newData);\r\n    };\r\n\r\n    const addField = () => {\r\n        const newData = [...specialFields];\r\n        newData.push(\"New Field\");\r\n        setSpecialFields(newData);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            title={<div className=\"myRooms-header\">Settings</div>}\r\n            visible={settingsVisible}\r\n            destroyOnClose={true}\r\n            onCancel={handleCancel}\r\n            style={{ Radius: \"20px\" }}\r\n            footer={null}\r\n        >\r\n            <Form layout=\"horizontal\" onFinish={onFinish}>\r\n                <Form.Item name=\"roomName\" labelCol={{ span: 5 }} wrapperCol={{ span: 10 }} label=\"Room Name\" labelAlign=\"right\">\r\n                    <Input defaultValue={roomInfo.roomName} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    wrapperCol={{ span: 10 }}\r\n                    labelCol={{ span: 5 }}\r\n                    label=\"Visibility\"\r\n                    name=\"visibility\"\r\n                    labelAlign=\"right\"\r\n                >\r\n                    <Select defaultValue={roomInfo.visibility}>\r\n                        {/* <Select.Option value=\"public\">Public</Select.Option> */}\r\n                        <Select.Option value=\"private\">Private</Select.Option>\r\n                        <Select.Option value=\"hidden\">Hidden</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item wrapperCol={{ span: 2 }} label=\"Waiting room\" name=\"waitingRoomEnabled\">\r\n                    <Switch defaultChecked={roomInfo.waitingRoomEnabled} />\r\n                </Form.Item>\r\n\r\n                <Divider />\r\n\r\n                <div\r\n                    style={{\r\n                        fontSize: \"23px\",\r\n                        display: \"inline-flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"space-between\",\r\n                        width: \"100%\",\r\n                        marginBottom: \"10px\",\r\n                    }}\r\n                >\r\n                    <div>\r\n                        <span style={{ marginRight: \"10px\" }}>Special Fields</span>\r\n                        <Tooltip title=\"Special Field take extra inputs from user to identify them better. It can only be used when there are 0 users enrolled.\">\r\n                            <BsFillQuestionDiamondFill />\r\n                        </Tooltip>\r\n                    </div>\r\n                    <div>\r\n                        <Button onClick={addField} hidden={roomInfo.enrolled > 0 || roomInfo.waitingRoomCount > 0}>\r\n                            Add\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                {roomInfo.enrolled > 0 || roomInfo.waitingRoomCount > 0 ? \r\n                    <span></span> :\r\n                    <span style={{color: 'var(--error)'}}> Note !! Name, email and username are already collected .. </span>\r\n                }\r\n\r\n                {specialFields.length === 0 ? <span>No fields</span> : <></> }\r\n\r\n                {specialFields.map((field, index) => (\r\n                    <div style={{ margin: \"10px\" }}>\r\n                        <div style={{ display: \"inline-flex\" }}>\r\n                            <Input\r\n                                value={field}\r\n                                onChange={e => {\r\n                                    changeSpecialField(e, index);\r\n                                }}\r\n                                readOnly={roomInfo.enrolled > 0 || roomInfo.waitingRoomCount > 0}\r\n                            />\r\n                            <Button\r\n                                onClick={() => {\r\n                                    removeField(index);\r\n                                }}\r\n                                danger={true}\r\n                                style={{ marginLeft: \"10px\" }}\r\n                                hidden={roomInfo.enrolled > 0 || roomInfo.waitingRoomCount > 0}\r\n                            >\r\n                                Remove\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n\r\n                <Divider />\r\n                <Button htmlType=\"submit\" type=\"primary\" disabled={loading}>\r\n                    {loading ? \"Loading ...\" : \"Save and Close\"}\r\n                </Button>\r\n            </Form>\r\n\r\n        </Modal>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Popconfirm, Result, Tooltip } from \"antd\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Masonry from \"react-masonry-css\";\r\nimport moment from \"moment\";\r\nimport { RiDeleteBin5Line, RiCodeLine, RiFileAddLine } from \"react-icons/ri\";\r\nimport axios from \"axios\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logoutUser } from \"../../Redux/Actions/AuthActions\";\r\n\r\nexport default function RenderQuestions({getInitialData, questions, enrolled }) {\r\n    const breakpoints = {\r\n        default: 5,\r\n        1900: 4,\r\n        1520: 3,\r\n        1180: 2,\r\n        830: 1,\r\n    };\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n\r\n    const deleteQuestion = async (id) => {\r\n        await axios.post(\"/delete_question\", {\r\n            questionId: id,\r\n        })\r\n            .then(res => {\r\n                enqueueSnackbar(\"Question deleted succesfully!\", { variant: \"info\" });\r\n                getInitialData();\r\n            })\r\n            .catch(err => {\r\n                try {\r\n                    if (err.response.status === 401) {\r\n                        dispatch(logoutUser());\r\n                        return;\r\n                    }\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some error occured while deleting this room\", { variant: \"error\" });\r\n                }\r\n            });\r\n     };\r\n\r\n\r\n    const renderVisibility = (question) => {\r\n\r\n        if(!question.isVisible){\r\n            return(\r\n                <div className={\"myRooms-room-visibility myRooms-hidden-room\" } >\r\n                    Hidden\r\n                </div>\r\n            )\r\n        }\r\n        if( moment(moment().format()).isAfter(moment(question.endTime)) ){\r\n            return(\r\n                <div className={\"myRooms-room-visibility myRooms-private-room\" } >\r\n                    Due Over\r\n                </div>\r\n            )\r\n        }\r\n        if(question.isVisible){\r\n            return(\r\n                <div className={\"myRooms-room-visibility myRooms-public-room\" } >\r\n                    Visible\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div className={\"myRooms-room-visibility myRooms-hidden-room\" } >\r\n                    Hidden\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    return questions.length === 0 ? (\r\n        <Result title=\"No Questions in this room.\"/>\r\n    ) : (\r\n        <>\r\n            <Masonry breakpointCols={breakpoints} className=\"my-masonry-grid\" columnClassName=\"my-masonry-grid_column\">\r\n                {questions.map(question => (\r\n                    <>\r\n                        <div className=\"myRooms-cards-box\" style={{cursor: 'auto'}}>\r\n                            <Popconfirm\r\n                                title={\r\n                                    <>\r\n                                        Are you sure you want to delete this Question?\r\n                                        <br />\r\n                                        Deleting this question will remove all its data and will be lost forever.\r\n                                    </>\r\n                                }\r\n                                onConfirm={() => {deleteQuestion(question.questionId);}}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"Cancel\"\r\n                                overlayInnerStyle={{\r\n                                    maxWidth: \"400px\",\r\n                                    backgroundColor: \"var(--primaryBackground)\",\r\n                                    border: \"2px solid var(--primaryText)\",\r\n                                }}\r\n                            >\r\n                                <div style={{ position: \"absolute\", top: \"2%\", right: \"2%\", fontSize: \"25px\", cursor: 'pointer' }}>\r\n                                    <RiDeleteBin5Line />\r\n                                </div>\r\n                            </Popconfirm>   \r\n\r\n                            <Tooltip title={\"Type : \" + question.type} >\r\n                                <div style={{ position: \"absolute\", top: \"2%\", left: \"2%\", fontSize: \"25px\", cursor: 'pointer' }}>\r\n                                    {question.type === \"code\" ? <RiCodeLine /> : <RiFileAddLine />}\r\n                                </div>\r\n                            </Tooltip>\r\n\r\n                            <div className=\"myRooms-cards-info\">\r\n                                <div className=\"myRooms-cards-title\">\r\n                                    <span>{question.title}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{display: \"inline-flex\", justifyContent: \"space-between\", width: \"100%\", padding: \"0px 15px\"}} >\r\n                                <div>\r\n                                    <div className=\"myRooms-cards-description\">\r\n                                        <div className=\"questions-submitted-div\" />\r\n                                        <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"120px\" }}>\r\n                                            Submitted\r\n                                        </span>\r\n                                        {question.submitted}\r\n                                    </div>\r\n                                    <div className=\"myRooms-cards-description\">\r\n                                        <div className=\"questions-remaining-div\" />\r\n                                        <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"120px\" }}>Remaining</span>\r\n                                        {enrolled - question.submitted}\r\n                                    </div>\r\n                                </div>\r\n                                <PieChart\r\n                                    style={{ width: \"70px\" }}\r\n                                    lineWidth={35}\r\n                                    paddingAngle={5}\r\n                                    data={[\r\n                                        { \r\n                                            title: \"Submitted (\" + question.submitted + \")\",\r\n                                            value: question.submitted, \r\n                                            color: \"var(--success)\" \r\n                                        },\r\n                                        { \r\n                                            title: \"Not Submitted (\" + (enrolled - question.submitted) + \")\", \r\n                                            value: enrolled === 0 ? 1 : (enrolled - question.submitted), \r\n                                            color: \"var(--error)\"\r\n                                        },\r\n                                    ]}\r\n                                />\r\n                            </div>\r\n                            <div className=\"myRooms-card-bottom-bar\" style={{margin: '15px 0px'}}>\r\n                                {renderVisibility(question)}\r\n                            </div>\r\n                            <div>\r\n                                <Link className=\"myRooms-cards-buttons\" to={\"/edit_question?qId=\" + question.questionId}>\r\n                                    Edit\r\n                                </Link>\r\n                                <Link className=\"myRooms-cards-buttons\" to={\"/submissions?qId=\" + question.questionId}>\r\n                                    Submissions\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                ))}\r\n            </Masonry>\r\n        </>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Button, Input, Space, Popconfirm } from \"antd\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { TransverseLoading } from \"react-loadingg\";\r\nimport axios from \"axios\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { SiMicrosoftexcel } from \"react-icons/si\"\r\n\r\nexport default function RoomEnrolled({noOfQuestions, roomInfo, setRoomInfo, enrolledTable, setEnrolledTable }) {\r\n    const getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    ref={node => {\r\n                        var searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                    style={{ marginBottom: 8, display: \"block\" }}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined />}\r\n                        size=\"small\"\r\n                        style={{ width: 90 }}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                        Reset\r\n                    </Button>\r\n                    <Button\r\n                        type=\"link\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            confirm({ closeDropdown: false });\r\n\r\n                            setSearchText(selectedKeys[0]);\r\n                            setSearchedColumn(dataIndex);\r\n                        }}\r\n                    >\r\n                        Filter\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />,\r\n        onFilter: (value, record) =>\r\n            record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : \"\",\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n            }\r\n        },\r\n        render: text =>\r\n            searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                    highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n                    searchWords={[searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : \"\"}\r\n                />\r\n            ) : (\r\n                text\r\n            ),\r\n    });\r\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n\r\n        setSearchText(selectedKeys[0]);\r\n        setSearchedColumn(dataIndex);\r\n    };\r\n    const handleReset = clearFilters => {\r\n        clearFilters();\r\n        setSearchText(\"\");\r\n    };\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [searchedColumn, setSearchedColumn] = useState(\"\");\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [tableLoading, setTableLoading] = useState(false);\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    useEffect(async () => {\r\n        await axios.get(`/room_enrolled_members/${roomInfo.roomId}`)\r\n            .then(res => {\r\n                setEnrolledTable(res.data.members);\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Some Error occurred while getting room members.\", { variant: \"error\" });\r\n            });\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    const deleteMember = async (userId, tableId) => {\r\n        setTableLoading(true);\r\n        await axios.post(\"/reject_room_member\", {\r\n            roomId: roomInfo.roomId,\r\n            userId: userId,\r\n        })\r\n            .then(res => {\r\n                setEnrolledTable(enrolledTable.filter(data => data.tableId !== tableId));\r\n                var newRoomInfo = { ...roomInfo };\r\n                newRoomInfo.enrolled -= 1;\r\n                setRoomInfo(newRoomInfo);\r\n            })\r\n            .catch(err => {\r\n                try {\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Couldn't delete user.\", { variant: \"error\" });\r\n                }\r\n            });\r\n        setTableLoading(false);\r\n    };\r\n\r\n    const exportToExcel = () => {\r\n        let xlsx = require('json-as-xlsx');\r\n        var columns = [\r\n            { label: 'Username', value: 'userName' },\r\n            { label: 'Email', value: 'email' },\r\n            { label: 'Name', value: 'name' },\r\n        ]\r\n        var i;\r\n        for (i = 0; i < roomInfo.specialFields.length; i ++){\r\n            columns.push(\r\n                { label: roomInfo.specialFields[i], value: 'special_' + i }\r\n            )\r\n        }\r\n        columns.push(\r\n            { label: \"Submissions (\" + noOfQuestions + \")\", value: 'questionsSubmitted' },\r\n        )\r\n\r\n        var content = [], toPush;\r\n        for (var student of enrolledTable){\r\n            toPush = {\r\n                userName: student.userName,\r\n                email: student.email,\r\n                name: student.name,\r\n                questionsSubmitted: student.questionsSubmitted,\r\n            }\r\n            for(i = 0; i < roomInfo.specialFields.length; i ++){\r\n                toPush['special_' + i] = student.specialFields[i];\r\n            }\r\n            content.push(toPush);\r\n        }\r\n\r\n        let data = [\r\n            {\r\n                sheet: 'Sheet 1',\r\n                columns: columns,\r\n                content: content\r\n            }\r\n        ]\r\n\r\n        let settings = {\r\n            fileName: roomInfo.roomName + \" Students Data\", // Name of the spreadsheet\r\n            extraLength: 3, // A bigger number means that columns will be wider\r\n        }\r\n\r\n        xlsx(data, settings) // Will download the excel file\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: \"Username\",\r\n            dataIndex: \"userName\",\r\n            key: \"userName\",\r\n            ...getColumnSearchProps(\"userName\"),\r\n            // sorter: (a, b) => a.device_code.length - b.device_code.length,\r\n            // sortDirections: [\"descend\", \"ascend\"],\r\n        },\r\n        {\r\n            title: \"Name\",\r\n            dataIndex: \"name\",\r\n            key: \"name\",\r\n            ...getColumnSearchProps(\"name\"),\r\n            // sorter: (a, b) => a.device_code.length - b.device_code.length,\r\n            // sortDirections: [\"descend\", \"ascend\"],\r\n        },\r\n        {\r\n            title: \"Email\",\r\n            dataIndex: \"email\",\r\n            key: \"email\",\r\n            ...getColumnSearchProps(\"email\"),\r\n            // sorter: (a, b) => a.device_code.length - b.device_code.length,\r\n            // sortDirections: [\"descend\", \"ascend\"],\r\n        },\r\n        {\r\n            title: \"Submissions (\" + noOfQuestions + \")\",\r\n            dataIndex: \"questionsSubmitted\",\r\n            key: \"questionsSubmitted\",\r\n            sorter: (a, b) => a.device_code.length - b.device_code.length,\r\n            sortDirections: [\"descend\", \"ascend\"],\r\n            hidden: noOfQuestions === 0,\r\n            width: \"150px\",\r\n        },\r\n        {\r\n            title: \"SpecialFields\",\r\n            children: roomInfo.specialFields.map((field, index) => {\r\n                return{\r\n                    title: field,\r\n                    // dataIndex: field,\r\n                    key: field,\r\n                    render: row => (row.specialFields[index])\r\n                }\r\n            }),\r\n            hidden: roomInfo.specialFields.length === 0,\r\n        },\r\n        {\r\n            title: \"Remove\",\r\n            key: \"delete\",\r\n            width: \"100px\",\r\n            render: row => (\r\n                <Popconfirm\r\n                    title={\r\n                        <>\r\n                            Are you sure you want to remove {row.name} ?\r\n                        </>\r\n                    }\r\n                    onConfirm={() => {deleteMember(row.userId, row.tableId);}}\r\n                    okText=\"Yes\"\r\n                    cancelText=\"Cancel\"\r\n                    overlayInnerStyle={{\r\n                        maxWidth: \"440px\",\r\n                        backgroundColor: \"var(--primaryBackground)\",\r\n                        border: \"2px solid var(--primaryText)\",\r\n                    }}\r\n                >\r\n                    <Button danger={true}>Remove</Button>\r\n                </Popconfirm>\r\n            ),\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    return loading ? (\r\n        <div style={{ position: \"relative\", height: \"120px\", fontSize: \"25px\" }}>\r\n            <span style={{ marginBottom: \"100px\" }}>Loading ...</span>\r\n            <span>\r\n                <TransverseLoading color=\"var(--loadingColor)\" size=\"large\" />\r\n            </span>\r\n        </div>\r\n    ) : (\r\n        <div>\r\n            <div style={{textAlign: 'right', marginBottom: '10px'}}>\r\n                <Button icon={<SiMicrosoftexcel style={{marginRight: '10px'}} />} onClick={exportToExcel} >\r\n                    Export to excel\r\n                </Button>\r\n            </div>\r\n            <Table \r\n                loading={tableLoading} \r\n                columns={columns} \r\n                dataSource={enrolledTable} \r\n                size=\"small\" \r\n                pagination={false} \r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Button, Input, Space, Popconfirm } from \"antd\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { TransverseLoading } from \"react-loadingg\";\r\nimport axios from \"axios\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nexport default function RoomWaiting({ roomInfo, setRoomInfo, waitingTable, setWaitingTable, enrolledTable, setEnrolledTable }) {\r\n    const getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    ref={node => {\r\n                        var searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                    style={{ marginBottom: 8, display: \"block\" }}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined />}\r\n                        size=\"small\"\r\n                        style={{ width: 90 }}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                        Reset\r\n                    </Button>\r\n                    <Button\r\n                        type=\"link\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            confirm({ closeDropdown: false });\r\n\r\n                            setSearchText(selectedKeys[0]);\r\n                            setSearchedColumn(dataIndex);\r\n                        }}\r\n                    >\r\n                        Filter\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />,\r\n        onFilter: (value, record) =>\r\n            record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : \"\",\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n            }\r\n        },\r\n        render: text =>\r\n            searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                    highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n                    searchWords={[searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : \"\"}\r\n                />\r\n            ) : (\r\n                text\r\n            ),\r\n    });\r\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n\r\n        setSearchText(selectedKeys[0]);\r\n        setSearchedColumn(dataIndex);\r\n    };\r\n    const handleReset = clearFilters => {\r\n        clearFilters();\r\n        setSearchText(\"\");\r\n    };\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [searchedColumn, setSearchedColumn] = useState(\"\");\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [tableLoading, setTableLoading] = useState(false);\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    useEffect(async () => {\r\n        await axios.get(`/room_waiting_members/${roomInfo.roomId}`)\r\n            .then(res => {\r\n                setWaitingTable(res.data.members);\r\n                setLoading(false);\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Some Error occurred while getting room members.\", { variant: \"error\" });\r\n            });\r\n    }, []);\r\n\r\n    const deleteMember = async (userId, tableId) => {\r\n        // alert(userId);\r\n        setTableLoading(true);\r\n        await axios.post(\"/reject_room_member\", {\r\n                roomId: roomInfo.roomId,\r\n                userId: userId,\r\n        })\r\n            .then(res => {\r\n                setWaitingTable(waitingTable.filter(data => data.tableId !== tableId));\r\n                var newRoomInfo = { ...roomInfo };\r\n                newRoomInfo.waitingRoomCount -= 1;\r\n                setRoomInfo(newRoomInfo);\r\n            })\r\n            .catch(err => {\r\n                try {\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Couldn't delete user.\", { variant: \"error\" });\r\n                }\r\n            });\r\n        setTableLoading(false);\r\n    };\r\n\r\n    const acceptMember = async (userId, tableId) => {\r\n        // alert(userId);\r\n        setTableLoading(true);\r\n        await axios.post(\"/accept_room_member\", {\r\n            roomId: roomInfo.roomId,\r\n            userId: userId,\r\n        })\r\n            .then(res => {\r\n                setEnrolledTable([...enrolledTable, (waitingTable.filter(data => data.tableId === tableId))[0] ]);\r\n                setWaitingTable(waitingTable.filter(data => data.tableId !== tableId));\r\n                var newRoomInfo = { ...roomInfo };\r\n                newRoomInfo.enrolled += 1;\r\n                newRoomInfo.waitingRoomCount -= 1;\r\n                setRoomInfo(newRoomInfo);\r\n                // console.log(waitingTable);\r\n            })\r\n            .catch(err => {\r\n                // console.log(err);\r\n                try {\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Couldn't delete user.\", { variant: \"error\" });\r\n                }\r\n            });\r\n        setTableLoading(false);\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: \"Username\",\r\n            dataIndex: \"userName\",\r\n            key: \"userName\",\r\n            ...getColumnSearchProps(\"userName\"),\r\n            // sorter: (a, b) => a.device_code.length - b.device_code.length,\r\n            // sortDirections: [\"descend\", \"ascend\"],\r\n        },\r\n        {\r\n            title: \"Name\",\r\n            dataIndex: \"name\",\r\n            key: \"name\",\r\n            ...getColumnSearchProps(\"name\"),\r\n            // sorter: (a, b) => a.device_code.length - b.device_code.length,\r\n            // sortDirections: [\"descend\", \"ascend\"],\r\n        },\r\n        {\r\n            title: \"Email\",\r\n            dataIndex: \"email\",\r\n            key: \"email\",\r\n            ...getColumnSearchProps(\"email\"),\r\n            // sorter: (a, b) => a.device_code.length - b.device_code.length,\r\n            // sortDirections: [\"descend\", \"ascend\"],\r\n        },\r\n        {\r\n            title: \"SpecialFields\",\r\n            children: roomInfo.specialFields.map((field, index) => {\r\n                return{\r\n                    title: field,\r\n                    // dataIndex: field,\r\n                    key: field,\r\n                    // ...getColumnSearchProps(field),\r\n                    render: row => (row.specialFields[index])\r\n\r\n                }\r\n            }),\r\n            hidden: roomInfo.specialFields.length === 0,\r\n        },\r\n        {\r\n            title: \"Actions\",\r\n            key: \"actions\",\r\n            width: \"200px\",\r\n            render: row => (\r\n                <>\r\n                    <Button onClick={() => {acceptMember(row.userId, row.tableId);}} style={{marginRight: '15px'}}>\r\n                        Accept\r\n                    </Button>\r\n                    <Popconfirm\r\n                        title={\r\n                            <>\r\n                                Are you sure you want to remove {row.name} ?\r\n                            </>\r\n                        }\r\n                        onConfirm={() => {deleteMember(row.userId, row.tableId);}}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"Cancel\"\r\n                        overlayInnerStyle={{\r\n                            maxWidth: \"440px\",\r\n                            backgroundColor: \"var(--primaryBackground)\",\r\n                            border: \"2px solid var(--primaryText)\",\r\n                        }}\r\n                    >\r\n                        <Button danger={true}>Remove</Button>\r\n                    </Popconfirm>\r\n                </>\r\n            ),\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    return loading ? (\r\n        <div style={{ position: \"relative\", height: \"120px\", fontSize: \"25px\" }}>\r\n            <span style={{ marginBottom: \"100px\" }}>Loading ...</span>\r\n            <span>\r\n                <TransverseLoading color=\"var(--loadingColor)\" size=\"large\" />\r\n            </span>\r\n        </div>\r\n    ) : (\r\n        <div>\r\n            <Table \r\n                loading={tableLoading} \r\n                columns={columns} \r\n                dataSource={waitingTable} \r\n                size=\"small\" \r\n                pagination={false} \r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation, useParams } from \"react-router\";\r\nimport { CopyOutlined, PlusCircleOutlined, SettingOutlined } from \"@ant-design/icons\";\r\nimport { BsPeople, BsPatchQuestion } from \"react-icons/bs\";\r\nimport { MdOutlineEmojiPeople } from \"react-icons/md\";\r\nimport { RiDeleteBin5Line, RiCodeLine, RiFileAddLine } from \"react-icons/ri\";\r\nimport RoomSettings from \"./RoomSettings\";\r\nimport { Popconfirm, Tabs, Tooltip, Menu, Dropdown } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport SemipolarLoading from \"react-loadingg/lib/SemipolarLoading\";\r\n\r\nimport { logoutUser } from \"../../Redux/Actions/AuthActions\";\r\nimport RenderQuestions from \"./RenderQuestions\";\r\nimport RoomEnrolled from \"./RoomEnrolled\";\r\nimport RoomWaiting from \"./RoomWaiting\";\r\nimport { setBreadcrumb } from \"../../Redux/Actions/RoomsDataActions\";\r\nimport MyDivider from \"../../Components/MyDivider\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nexport default function OneRoom({getMyRoomsData}) {\r\n    document.title = \"My Room | Code Rooms\";\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [loadingMessage, setLoadingMessage] = useState(\"Getting Data ....\");\r\n    const [settingsVisible, setSettingsVisible] = useState(false);\r\n    const [questions, setQuestions] = useState([]);\r\n    const [roomInfo, setRoomInfo] = useState({});\r\n    const [enrolledTable, setEnrolledTable] = useState([]);\r\n    const [waitingTable, setWaitingTable] = useState([]);\r\n    \r\n    let { id } = useParams();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n\r\n    const showSettings = () => {\r\n        setSettingsVisible(true);\r\n    };\r\n\r\n    const getInitialData = async () => {\r\n        setLoading(true);\r\n        // setLoadingMessage(\"Refreshing data ....\")\r\n        await axios.get(\"/my_rooms/\" + id)\r\n            .then((res) => {\r\n                // console.log(res)\r\n                setRoomInfo(res.data.roomInfo);\r\n                setQuestions(res.data.questions);\r\n            })\r\n            .catch((err) => {\r\n                if (!err.response) {\r\n                    enqueueSnackbar(\"Some Error occurred while getting room data.\", { variant: \"error\" });\r\n                } else if (err.response.status === 401) {\r\n                    dispatch(logoutUser());\r\n                } else {\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                    history.replace(\"/my_rooms\");\r\n                }\r\n            });\r\n        if (queryParams.has(\"settingsOpen\")) {\r\n            setSettingsVisible(true);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getInitialData();\r\n    }, [id]);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(setBreadcrumb( [\r\n            {\r\n                \"name\": \"My Rooms\",\r\n                \"url\": \"/my_rooms\"\r\n            },\r\n            {\r\n                \"name\": roomInfo.roomName,\r\n                \"url\": \"/my_rooms/\" + roomInfo.roomId\r\n            },\r\n        ] ));\r\n    }, [roomInfo.roomId]);\r\n\r\n\r\n    const createNewQuestion = async(type) => {\r\n        setLoadingMessage(\"Setting up new question template .....\");\r\n        setLoading(true);\r\n\r\n        await axios.post(\"/create_question\", {\r\n            roomId: id,\r\n            type: type, // code or file\r\n        })\r\n            .then(res => {\r\n                history.push(\"/edit_question?qId=\" + res.data.newQuestionId);\r\n            })\r\n            .catch(err => {\r\n                try {\r\n                    if(err.response.status === 401){\r\n                        dispatch(logoutUser());\r\n                        return;\r\n                    }\r\n                    enqueueSnackbar(err.response.data.detail, {variant: \"error\"});\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some error occured while creating new question\", {variant: \"error\"});\r\n                }\r\n            });\r\n        setLoading(false);\r\n    }\r\n\r\n    const copyToClipboard = () =>{\r\n        var toCopy = window.location.origin + \"/#/join_room?roomId=\" + roomInfo.roomId;\r\n\r\n        var temp = document.createElement(\"textarea\");\r\n        var tempMsg = document.createTextNode(toCopy);\r\n        temp.appendChild(tempMsg);\r\n\r\n        document.body.appendChild(temp);\r\n        temp.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(temp);\r\n\r\n        var message = \"Link copied to clipboard.\";\r\n        enqueueSnackbar(message, {\r\n            variant: 'success',\r\n        })\r\n    }\r\n\r\n    const deleteRoom = async () => {\r\n        setLoadingMessage(\"Deleting room ....\");\r\n        setLoading(true);\r\n        await axios.post(\"/delete_room\", {\r\n            roomId: id,\r\n        })\r\n            .then(() => {\r\n                    enqueueSnackbar(\"Room deleted succesfully!\", { variant: \"info\" });\r\n                    getMyRoomsData()\r\n                    history.replace(\"/my_rooms\");\r\n            })\r\n            .catch((err) => {\r\n                try {\r\n                    if (err.response.status === 401) {\r\n                        dispatch(logoutUser());\r\n                        return;\r\n                    }\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some error occured while deleting this room\", { variant: \"error\" });\r\n                }\r\n            });\r\n        setLoading(false);\r\n\r\n    };\r\n\r\n   \r\n\r\n    return loading ? (\r\n        <div className=\"VerifyEmail-heading-div\">\r\n            <div>{loadingMessage}</div>\r\n            <div style={{marginTop: \"40px\", position: 'relative'}}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\"  />\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div className=\"myRooms-outer-div\">\r\n            <div className=\"myRooms-header\">\r\n                <span style={{borderBottom: '2px solid '}}>\r\n                    {roomInfo.roomName}\r\n                </span>\r\n                <div style={{ display: \"inline-flex\" }}>\r\n                    <div className=\"myRooms-createNew-button\" style={{ marginLeft: \"15px\" }} onClick={copyToClipboard}>\r\n                        <Tooltip title=\"Copy joining link\">\r\n                            <CopyOutlined />\r\n                        </Tooltip>\r\n                    </div>\r\n                    \r\n                    <Dropdown \r\n                        overlay={\r\n                            <Menu style={{background: \"var(--secondaryBackground)\"}}>\r\n                                <Menu.Item \r\n                                    icon={<RiCodeLine style={{fontSize: '20px'}} />} \r\n                                    style={{fontSize: '16px'}}\r\n                                    onClick={() => {createNewQuestion(\"code\")}}\r\n                                >\r\n                                    Code Type Question\r\n                                </Menu.Item>\r\n                                <MyDivider />\r\n                                <Menu.Item \r\n                                    icon={<RiFileAddLine style={{fontSize: '20px'}} />} \r\n                                    style={{fontSize: '16px'}}\r\n                                    onClick={() => {createNewQuestion(\"file\")}}\r\n                                >\r\n                                    File Type Question\r\n                                </Menu.Item>\r\n                            </Menu>\r\n                        } \r\n                        placement=\"bottomCenter\"\r\n                    >\r\n                        <div className=\"myRooms-createNew-button\" style={{ marginLeft: \"15px\" }} >\r\n                            <PlusCircleOutlined />\r\n                            <span style={{ marginLeft: \"5px\" }}> Create Question </span>\r\n                            {/* <DownOutlined style={{marginLeft: '5px', fontSize: '18px'}} /> */}\r\n                        </div>\r\n                    </Dropdown>\r\n\r\n                    <div className=\"myRooms-createNew-button\" style={{ marginLeft: \"15px\" }} onClick={showSettings}>\r\n                        <SettingOutlined />\r\n                        <span style={{ marginLeft: \"5px\" }}> Settings </span>\r\n                    </div>\r\n                    <Popconfirm\r\n                        title={\r\n                            <>\r\n                                Are you sure you want to delete this Room?<br /> \r\n                                Deleting this room will remove all its data and will be lost forever !\r\n                            </>\r\n                        }\r\n                        onConfirm={deleteRoom}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"Cancel\"\r\n                        overlayInnerStyle={{maxWidth: '400px', backgroundColor: 'var(--primaryBackground)', border: '2px solid var(--primaryText)'}}\r\n                    >\r\n                        <div className=\"myRooms-createNew-button\" style={{ marginLeft: \"15px\" }}>\r\n                            <RiDeleteBin5Line />\r\n                        </div>\r\n                    </Popconfirm>\r\n                    <RoomSettings \r\n                        settingsVisible={settingsVisible} \r\n                        setSettingsVisible={setSettingsVisible} \r\n                        roomInfo={roomInfo}\r\n                        setRoomInfo={setRoomInfo}    \r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* <Divider /> */}\r\n\r\n            <Tabs defaultActiveKey={queryParams.get(\"tab\") || \"questions\"} >\r\n                <TabPane\r\n                    tab={\r\n                        <div className=\"myRooms-cards-description\" style={{fontSize: '15px'}}>\r\n                            <BsPatchQuestion />\r\n                            <span style={{ margin: \"0px 6px\", display: \"inline-flex\"}}>\r\n                                Questions\r\n                            </span>\r\n                            ({questions.length})\r\n                        </div>\r\n                    }\r\n                    key=\"questions\"\r\n                >\r\n                    <RenderQuestions \r\n                        getInitialData={getInitialData}\r\n                        questions={questions} \r\n                        enrolled={roomInfo.enrolled}\r\n                    />\r\n                </TabPane>\r\n                <TabPane\r\n                    tab={\r\n                        <div className=\"myRooms-cards-description\" style={{fontSize: '15px', padding: \"0px\", margin: '0px'}}>\r\n                            <BsPeople />\r\n\r\n                            <span style={{ margin: \"0px 6px\", display: \"inline-flex\"}}>\r\n                            Members\r\n                            </span>\r\n                            ({roomInfo.enrolled})\r\n                        </div>\r\n                    }\r\n                    key=\"members\"\r\n                >\r\n                    <RoomEnrolled \r\n                        noOfQuestions={questions.length} \r\n                        roomInfo={roomInfo} \r\n                        setRoomInfo={setRoomInfo} \r\n                        enrolledTable={enrolledTable}    \r\n                        setEnrolledTable={setEnrolledTable}    \r\n                    />\r\n                </TabPane>\r\n                {\r\n                    roomInfo.waitingRoomEnabled ? (\r\n                        <TabPane\r\n                            tab={\r\n                                <div className=\"myRooms-cards-description\" style={{fontSize: '15px'}}>\r\n                                    <MdOutlineEmojiPeople />\r\n                                    <span style={{ margin: \"0px 6px\", display: \"inline-flex\"}}>\r\n                                        Waiting Room\r\n                                    </span>\r\n                                    ({roomInfo.waitingRoomCount})\r\n                                </div>\r\n                            }\r\n                            key=\"waitingRoom\"\r\n                        >\r\n                            <RoomWaiting\r\n                                roomInfo={roomInfo} \r\n                                setRoomInfo={setRoomInfo} \r\n                                waitingTable={waitingTable}    \r\n                                setWaitingTable={setWaitingTable}    \r\n                                enrolledTable={enrolledTable}\r\n                                setEnrolledTable={setEnrolledTable}\r\n                            />\r\n                        </TabPane>\r\n                    ) : <></>\r\n                }\r\n            </Tabs>\r\n\r\n            \r\n        </div>\r\n    );\r\n}\r\n","import { Result } from \"antd\";\r\nimport React from \"react\";\r\nimport { BsPatchQuestion } from \"react-icons/bs\";\r\nimport { MdOutlineDoneAll } from \"react-icons/md\";\r\nimport Masonry from \"react-masonry-css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function RenderEnrolled() {\r\n    const breakpoints = {\r\n        default: 5,\r\n        1900: 4,\r\n        1520: 3,\r\n        1180: 2,\r\n        830: 1,\r\n    };\r\n    const roomsDataReducer = useSelector(state => state.roomsDataReducer);\r\n\r\n\r\n    return roomsDataReducer.enrolledRooms.length === 0 ? (\r\n        <Result\r\n            title=\"No Rooms enrolled.\"\r\n        />\r\n    ) : (\r\n        <div className=\"myRooms-cards-outer\">\r\n            <Masonry breakpointCols={breakpoints} className=\"my-masonry-grid\" columnClassName=\"my-masonry-grid_column\">\r\n                {roomsDataReducer.enrolledRooms.map(room => (\r\n                    <Link to={\"/enrolled_rooms/\" + room.roomId} key={room.roomId}>\r\n                        <div className=\"myRooms-cards-box\" >\r\n                            <div className=\"myRooms-cards-info\">\r\n                                <div className=\"myRooms-cards-title\">\r\n                                    {/* <AppstoreOutlined /> */}\r\n                                    <span>{room.roomName}</span>\r\n                                </div>\r\n                                <div className=\"myRooms-cards-description\">\r\n                                    <BsPatchQuestion />\r\n                                    <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"150px\" }}>\r\n                                        Questions\r\n                                    </span>\r\n                                    {room.questions}\r\n                                </div>\r\n                                <div className=\"myRooms-cards-description\">\r\n                                    <MdOutlineDoneAll />\r\n                                    <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"150px\" }}>\r\n                                        Submitted\r\n                                    </span>\r\n                                    {room.submitted}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                ))}\r\n            </Masonry>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Divider } from \"antd\";\r\nimport SemipolarLoading from \"react-loadingg/lib/SemipolarLoading\";\r\nimport RenderEnrolled from \"./RenderEnrolled\";\r\nimport { setBreadcrumb } from \"../../Redux/Actions/RoomsDataActions\";\r\n\r\nexport default function AllEnrolled({getEnrolledRoomsData}) {\r\n    document.title = \"Enrolled Rooms | Code Rooms\";\r\n\r\n    const roomsDataReducer = useSelector(state => state.roomsDataReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        getEnrolledRoomsData()\r\n        dispatch(setBreadcrumb( [\r\n            {\r\n                \"name\": \"Enrolled Rooms\",\r\n                \"url\": \"/enrolled_rooms\"\r\n            }\r\n        ] ));\r\n    }, [])\r\n\r\n\r\n    return roomsDataReducer.myRoomsLoading ? (\r\n        <div className=\"VerifyEmail-heading-div\">\r\n            <div>Getting Your Rooms Data ....</div>\r\n            <div style={{marginTop: \"40px\", position: 'relative'}}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\"  />\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div className=\"myRooms-outer-div\">\r\n\r\n            <div className=\"myRooms-header\">\r\n                <span>Enrolled Rooms</span>\r\n            </div>\r\n\r\n            <Divider />\r\n\r\n            <RenderEnrolled />\r\n        </div>\r\n    );\r\n}\r\n","import ReactGA from 'react-ga';\r\n\r\nexport const sendAnalytics = (category, action, label) => {\r\n    ReactGA.event({\r\n        category,\r\n        action,\r\n        label,\r\n    });\r\n}","import { Button, Input } from 'antd';\r\nimport axios from 'axios'\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect, useState } from 'react'\r\nimport PointSpreadLoading from 'react-loadingg/lib/PointSpreadLoading';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { sendAnalytics } from '../Components/Analytics';\r\nimport { logoutUser } from '../Redux/Actions/AuthActions';\r\nimport { setEnrolled } from '../Redux/Actions/RoomsDataActions';\r\n\r\nexport default function JoinRoom() {\r\n    document.title = \"Join Room | Code Rooms\";\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [specialFields, setSpecialFields] = useState([]);\r\n    const [specialInfo, setSpecialInfo] = useState([]);\r\n\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const joinRoom1 = () => {\r\n        setLoading(true);\r\n        if(!queryParams.has(\"roomId\")){\r\n            enqueueSnackbar(\"Invalid Room\", {variant: 'error'});\r\n            history.replace('/enrolled_rooms');\r\n            return;\r\n        }\r\n        axios.post(\"/join_room\", {\r\n            roomId: queryParams.get(\"roomId\"),\r\n            specialFields: specialInfo\r\n        })\r\n            .then(res => {\r\n                if(res.data.specialFields){\r\n                    setSpecialFields(res.data.specialFields);\r\n                    var data = []\r\n                    for(var i = 0; i < res.data.specialFields.length; i ++){\r\n                        data.push(\"\");\r\n                    }\r\n                    setSpecialInfo(data);\r\n                    setLoading(false);\r\n                    return;\r\n                }\r\n\r\n                if(res.data.waitingRoomEnabled){\r\n                    enqueueSnackbar(`You are now in waiting Room for ${res.data.roomName}.`, {variant: 'info'});\r\n                }\r\n                else{\r\n                    enqueueSnackbar(`Joined Room - ${res.data.roomName} successfully.`, {variant: 'success'});\r\n                }\r\n\r\n                sendAnalytics(\"CodeRooms\", \"Joined Room\", `Joined room ${queryParams.get(\"roomId\")}`);\r\n\r\n                dispatch(setEnrolled(res.data.enrolledRooms));\r\n                history.replace('/enrolled_rooms');\r\n            })\r\n            .catch(err => {\r\n                try {\r\n\r\n                    if(!err.response){\r\n                        history.replace('/enrolled_rooms');\r\n                        enqueueSnackbar(\"Some Error occurred while joining room\", {variant: 'warning'});\r\n                        return;\r\n                    }\r\n                    if(err.response.status === 401){\r\n                        enqueueSnackbar(\"Please login first.\", {variant: 'info'})\r\n                        dispatch(logoutUser());\r\n                        return;\r\n                    }\r\n\r\n                    enqueueSnackbar(err.response.data.detail, {variant: 'warning'});\r\n                    history.replace('/enrolled_rooms');\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some Error occurred while joining room\", {variant: 'warning'});\r\n                    history.replace('/enrolled_rooms');\r\n                }\r\n            })\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(async() => {\r\n        joinRoom1();\r\n    }, [])\r\n\r\n    const changeSpecialField = (e, index) => {\r\n        const newData = [...specialInfo];\r\n        newData[index] = e.target.value;\r\n        setSpecialInfo(newData);\r\n    };\r\n\r\n\r\n    return loading ? (\r\n        <div className=\"VerifyEmail-outer-div\">\r\n            <div className=\"VerifyEmail-heading-div\">\r\n                Joining room ...\r\n            </div>\r\n            <div style={{marginTop: \"20px\", position: 'relative'}}>\r\n                <PointSpreadLoading color=\"var(--loadingColor)\" />\r\n            </div>\r\n        </div>\r\n    ) : ( \r\n        specialFields.length > 0 ? (\r\n            <div className=\"VerifyEmail-outer-div\">\r\n                <div className=\"VerifyEmail-heading-div\">\r\n                    Enter details to continue ... \r\n                </div>\r\n                <div>\r\n                    {\r\n                        specialFields.map((name, index) => (\r\n                            <div>\r\n                                <div style={{ display: \"inline-flex\", margin: '10px', alignItems: 'center' }}>\r\n                                    <span style={{minWidth: '100px'}}>{name} : </span>\r\n                                    <Input value={specialInfo[index]} onChange={(e) => {changeSpecialField(e, index)}} />\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <Button htmlType=\"submit\" type=\"primary\" onClick={() => {joinRoom1()}} >\r\n                    Submit\r\n                </Button>\r\n            </div>\r\n        ) : (<></>)\r\n    )\r\n}\r\n","import { Button, Result, Statistic } from \"antd\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Masonry from \"react-masonry-css\";\r\nimport { IoMdDoneAll } from \"react-icons/io\";\r\nimport { BsPatchExclamation } from \"react-icons/bs\";\r\nimport moment from \"moment\";\r\nimport { RiCodeLine, RiFileAddLine } from \"react-icons/ri\";\r\n\r\n\r\nconst { Countdown } = Statistic;\r\n\r\nexport default function RenderQuestions({ questions }) {\r\n    const breakpoints = {\r\n        default: 5,\r\n        1900: 4,\r\n        1520: 3,\r\n        1180: 2,\r\n        830: 1,\r\n    };\r\n\r\n    const timeConditions = (question) => {\r\n        if(question.isSubmitted){\r\n            return(\r\n                <div style={{fontSize: '18px', color: \"var(--success)\"}}>\r\n                    At {moment(question.submissionTime).format(\"Do MMM hh:mm a\")}\r\n                </div>\r\n            )\r\n        }\r\n        if(moment(question.endTime).diff(moment().format(), 'seconds') < 0 ){\r\n            return(\r\n                <div style={{color: 'var(--privateRoom)', fontSize: '22px'}}>\r\n                    Due date over\r\n                </div>\r\n            )\r\n        }\r\n        if(moment(question.endTime).diff(moment().format(), 'hours') > 48){\r\n            return(\r\n                <span style={{ fontSize: \"20px\", display: \"inline-flex\", color: \"var(--privateRoom)\" }}>\r\n                    Due : {moment(question.endTime).format(\"Do MMM\")}\r\n                </span>\r\n            )\r\n        }\r\n        if(moment(question.endTime).diff(moment().format(), 'hours') > 24){\r\n            return(\r\n                <span style={{ fontSize: \"20px\", display: \"inline-flex\", color: \"var(--privateRoom)\" }}>\r\n                    Due : Tommorow\r\n                </span>\r\n            )\r\n        }\r\n        if(moment(question.endTime).diff(moment().format(), 'hours') > 10){\r\n            return(\r\n                <span style={{ fontSize: \"20px\", display: \"inline-flex\", color: \"var(--privateRoom)\" }}>\r\n                    Due : Today\r\n                </span>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div>\r\n    \r\n                    <Countdown\r\n                        valueStyle={{color: 'var(--privateRoom)', fontSize: '22px'}}\r\n                        value={question.endTime}\r\n                        onFinish={() => {\r\n                            window.location.reload();\r\n                        }}\r\n                        format=\"[Due] : H[h] : m[m] : s[s]\"\r\n                    />\r\n                </div> \r\n            )\r\n        }\r\n    }\r\n\r\n    return questions.length === 0 ? (\r\n        <Result\r\n            title=\"No Questions in this room.\"\r\n            extra={\r\n                <Button type=\"primary\" key=\"console\">\r\n                    No Questions in this room.\r\n                </Button>\r\n            }\r\n        />\r\n    ) : (\r\n        <Masonry breakpointCols={breakpoints} className=\"my-masonry-grid\" columnClassName=\"my-masonry-grid_column\">\r\n            {questions.map(question => (\r\n                <Link to={\"/question?qId=\" + question.questionId } key={\"room.roomId\"}>\r\n                    <div className=\"myRooms-cards-box\">\r\n                        <div className=\"myRooms-cards-info\">\r\n                            <div className=\"myRooms-cards-title\">\r\n                                <span>{question.title}</span>\r\n                            </div>\r\n                            <div className=\"myRooms-cards-description\">\r\n                                {\r\n                                    question._type === \"code\" ? (\r\n                                        <>\r\n                                            <RiCodeLine />\r\n                                            <span style={{ marginLeft: \"10px\", display: \"inline-flex\" }}>\r\n                                                Code Type\r\n                                            </span>\r\n                                        </>\r\n                                    ) :(\r\n                                        <>\r\n                                            <RiFileAddLine />\r\n                                            <span style={{ marginLeft: \"10px\", display: \"inline-flex\" }}>\r\n                                                File Type\r\n                                            </span>\r\n                                        </>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                            {\r\n                                question.isSubmitted ? (\r\n                                    <div className=\"myRooms-cards-description\">\r\n                                        <IoMdDoneAll style={{color: \"var(--success)\"}} />\r\n                                        <span style={{ marginLeft: \"10px\", display: \"inline-flex\", color: \"var(--success)\" }}>\r\n                                            Submitted\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                ) : (\r\n                                    <div className=\"myRooms-cards-description\">\r\n                                        <BsPatchExclamation style={{color: \"var(--privateRoom)\"}} />\r\n                                        <span style={{ marginLeft: \"10px\", display: \"inline-flex\", color: \"var(--privateRoom)\" }}>\r\n                                            Not Submitted\r\n                                        </span>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            <div className=\"myRooms-card-bottom-bar\">\r\n                                {timeConditions(question)}\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n            ))}\r\n        </Masonry>\r\n    );\r\n}\r\n\r\n\r\n// () => {\r\n//     \r\n//     }","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Button, Popconfirm } from \"antd\";\r\nimport RenderQuestions from \"./RenderQuestions\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport SemipolarLoading from \"react-loadingg/lib/SemipolarLoading\";\r\nimport { logoutUser } from \"../../Redux/Actions/AuthActions\";\r\nimport { setBreadcrumb } from \"../../Redux/Actions/RoomsDataActions\";\r\nimport MyDivider from \"../../Components/MyDivider\";\r\n\r\n\r\nexport default function EnrolledRoom() {\r\n    document.title = \"Enrolled Room | Code Rooms\";\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [loadingMessage, setLoadingMessage] = useState(\"Getting Data ....\");\r\n    const [questions, setQuestions] = useState([]);\r\n    const [roomInfo, setRoomInfo] = useState([]);\r\n\r\n    let { id } = useParams();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const getRoomData = async() => {\r\n        setLoading(true);\r\n        await axios\r\n            .get(\"/enrolled_rooms/\" + id)\r\n            .then(res => {\r\n                setRoomInfo(res.data.roomInfo);\r\n                setQuestions(res.data.questions);\r\n            })\r\n            .catch(err => {\r\n                // console.log(err)\r\n                if (!err.response) {\r\n                    enqueueSnackbar(\"Some Error occurred while getting room data.\", { variant: \"error\" });\r\n                    history.replace(\"/enrolled_rooms\");\r\n                } else if (err.response.status === 401) {\r\n                    dispatch(logoutUser());\r\n                } else {\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                    history.replace(\"/enrolled_rooms\");\r\n                }\r\n            });\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getRoomData();\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        dispatch(setBreadcrumb( [\r\n            {\r\n                \"name\": \"Enrolled Rooms\",\r\n                \"url\": \"/enrolled_rooms\"\r\n            },\r\n            {\r\n                \"name\": roomInfo.roomName,\r\n                \"url\": \"/enrolled_rooms/\" + roomInfo.roomId\r\n            },\r\n        ] ));\r\n    }, [roomInfo.roomId]);\r\n\r\n    const leaveRoom = async() => {\r\n        await axios.post(\"/leave_room\", {\r\n            roomId: roomInfo.roomId,\r\n        })\r\n            .then(() => {\r\n                history.replace(\"/enrolled_rooms\")\r\n            })\r\n            .catch(err => {\r\n                // console.log(err)\r\n                if (!err.response) {\r\n                    enqueueSnackbar(\"Some Error occurred while leaving room.\", { variant: \"error\" });\r\n                    history.replace(\"/enrolled_rooms\");\r\n                } else if (err.response.status === 401) {\r\n                    dispatch(logoutUser());\r\n                } else {\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                    history.replace(\"/enrolled_rooms\");\r\n                }\r\n            })\r\n    }\r\n\r\n    return loading ? (\r\n        <div className=\"VerifyEmail-heading-div\">\r\n            <div>{loadingMessage}</div>\r\n            <div style={{ marginTop: \"40px\", position: \"relative\" }}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\" />\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div className=\"myRooms-outer-div\">\r\n            <div className=\"myRooms-header\">\r\n                <span >\r\n                    <span>{roomInfo.roomName}</span>\r\n                    <div style={{ }}>\r\n                        <span style={{fontSize: '20px'}}>Host : {roomInfo.host}</span>\r\n                    </div>\r\n                </span>\r\n                <Popconfirm\r\n                    title={\r\n                        <>\r\n                            Are you sure you want to leave the room?<br /> \r\n                            This will delete all the submissions in this room and data will be lost forever.\r\n                        </>\r\n                    }\r\n                    onConfirm={leaveRoom}\r\n                    okText=\"Yes\"\r\n                    cancelText=\"Cancel\"\r\n                    overlayInnerStyle={{maxWidth: '400px', backgroundColor: 'var(--primaryBackground)', border: '2px solid var(--primaryText)'}}\r\n                >\r\n                    <Button danger={true} type=\"primary\"  >\r\n                        Leave Room\r\n                    </Button>\r\n                </Popconfirm>\r\n            </div>\r\n\r\n            <MyDivider />\r\n\r\n            <RenderQuestions questions={questions} />\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Editor, getDefaultKeyBinding, RichUtils } from \"draft-js\";\r\nimport \"draft-js/dist/Draft.css\";\r\nimport \"./EditorCss.css\";\r\nimport { Divider } from \"antd\";\r\n\r\nclass DescriptionEditor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //   this.state = {editorState: props.data};\r\n\r\n        this.focus = () => this.refs.editor.focus();\r\n        this.onChange = editorState => {\r\n            // this.setState({editorState});\r\n            props.setState(editorState);\r\n            // console.log(this.state.editorState);\r\n        };\r\n\r\n        this.handleKeyCommand = this._handleKeyCommand.bind(this);\r\n        this.mapKeyToEditorCommand = this._mapKeyToEditorCommand.bind(this);\r\n        this.toggleBlockType = this._toggleBlockType.bind(this);\r\n        this.toggleInlineStyle = this._toggleInlineStyle.bind(this);\r\n    }\r\n\r\n    _handleKeyCommand(command, editorState) {\r\n        const newState = RichUtils.handleKeyCommand(editorState, command);\r\n        if (newState) {\r\n            this.onChange(newState);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    _mapKeyToEditorCommand(e) {\r\n        if (e.keyCode === 9 /* TAB */) {\r\n            const newEditorState = RichUtils.onTab(e, this.props.state, 4 /* maxDepth */);\r\n            if (newEditorState !== this.props.state) {\r\n                this.onChange(newEditorState);\r\n            }\r\n            return;\r\n        }\r\n        return getDefaultKeyBinding(e);\r\n    }\r\n\r\n    _toggleBlockType(blockType) {\r\n        this.onChange(RichUtils.toggleBlockType(this.props.state, blockType));\r\n    }\r\n\r\n    _toggleInlineStyle(inlineStyle) {\r\n        this.onChange(RichUtils.toggleInlineStyle(this.props.state, inlineStyle));\r\n    }\r\n\r\n    render() {\r\n        const editorState = this.props.state;\r\n\r\n        // If the user changes block type before entering any text, we can\r\n        // either style the placeholder or hide it. Let's just hide it now.\r\n        let className = \"RichEditor-editor\";\r\n        var contentState = editorState.getCurrentContent();\r\n        if (!contentState.hasText()) {\r\n            if (contentState.getBlockMap().first().getType() !== \"unstyled\") {\r\n                className += \" RichEditor-hidePlaceholder\";\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"RichEditor-root\" style={this.props.readOnly ? {padding: '4px', border: \"none\", width: '95%'} : {}}>\r\n                {this.props.readOnly ? (\r\n                    <></>\r\n                ) : (\r\n                    <>\r\n                        <div style={{display: 'inline-flex'}}>\r\n                            <span style={{marginRight: '30px'}}>\r\n                            <BlockStyleControls editorState={editorState} onToggle={this.toggleBlockType} />\r\n                            </span>\r\n                            <InlineStyleControls editorState={editorState} onToggle={this.toggleInlineStyle} />\r\n                            </div>\r\n                        <Divider style={{ margin: \"0px\" }} />\r\n                    </>\r\n                )}\r\n                <div className={className} style={{ borderTop: \"None\" }} onClick={this.focus}>\r\n                    <Editor\r\n                        blockStyleFn={getBlockStyle}\r\n                        customStyleMap={styleMap}\r\n                        editorState={editorState}\r\n                        handleKeyCommand={this.handleKeyCommand}\r\n                        keyBindingFn={this.mapKeyToEditorCommand}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Enter Question description\"\r\n                        ref=\"editor\"\r\n                        readOnly={this.props.readOnly}\r\n                        spellCheck={false}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// Custom overrides for \"code\" style.\r\nconst styleMap = {\r\n    CODE: {\r\n        backgroundColor: \"rgba(0, 0, 0, 0.05)\",\r\n        fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\r\n        fontSize: 16,\r\n        padding: 2,\r\n    },\r\n};\r\n\r\nfunction getBlockStyle(block) {\r\n    switch (block.getType()) {\r\n        case \"blockquote\":\r\n            return \"RichEditor-blockquote\";\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nclass StyleButton extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.onToggle = e => {\r\n            e.preventDefault();\r\n            this.props.onToggle(this.props.style);\r\n        };\r\n    }\r\n\r\n    render() {\r\n        let className = \"RichEditor-styleButton\";\r\n        if (this.props.active) {\r\n            className += \" RichEditor-activeButton\";\r\n        }\r\n\r\n        return (\r\n            <span className={className} onMouseDown={this.onToggle}>\r\n                {this.props.label}\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nconst BLOCK_TYPES = [\r\n    // {label: 'H1', style: 'header-one'},\r\n    // {label: 'H2', style: 'header-two'},\r\n    // {label: 'H3', style: 'header-three'},\r\n    { label: \"H4\", style: \"header-four\" },\r\n    { label: \"H5\", style: \"header-five\" },\r\n    { label: \"H6\", style: \"header-six\" },\r\n    { label: \"Blockquote\", style: \"blockquote\" },\r\n    { label: \"UL\", style: \"unordered-list-item\" },\r\n    // {label: 'OL', style: 'ordered-list-item'},\r\n    { label: \"Code Block\", style: \"code-block\" },\r\n];\r\n\r\nconst BlockStyleControls = props => {\r\n    const { editorState } = props;\r\n    const selection = editorState.getSelection();\r\n    const blockType = editorState.getCurrentContent().getBlockForKey(selection.getStartKey()).getType();\r\n\r\n    return (\r\n        <div className=\"RichEditor-controls\">\r\n            {BLOCK_TYPES.map(type => (\r\n                <StyleButton\r\n                    key={type.label}\r\n                    active={type.style === blockType}\r\n                    label={type.label}\r\n                    onToggle={props.onToggle}\r\n                    style={type.style}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nvar INLINE_STYLES = [\r\n    { label: \"Bold\", style: \"BOLD\" },\r\n    { label: \"Italic\", style: \"ITALIC\" },\r\n    { label: \"Underline\", style: \"UNDERLINE\" },\r\n    { label: \"Monospace\", style: \"CODE\" },\r\n];\r\n\r\nconst InlineStyleControls = props => {\r\n    const currentStyle = props.editorState.getCurrentInlineStyle();\r\n\r\n    return (\r\n        <div className=\"RichEditor-controls\">\r\n            {INLINE_STYLES.map(type => (\r\n                <StyleButton\r\n                    key={type.label}\r\n                    active={currentStyle.has(type.style)}\r\n                    label={type.label}\r\n                    onToggle={props.onToggle}\r\n                    style={type.style}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DescriptionEditor;\r\n","import { Button } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { convertToRaw } from \"draft-js\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { logoutUser } from \"../../Redux/Actions/AuthActions\";\r\nimport DescriptionEditor from \"../../TextEditor/MyTextEditor\";\r\n\r\nexport default function QuestionTemplate({ title, setTitle, description, setDescription, sample, setSample, _type }) {\r\n    const [loading, setLoading] = useState(false);\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const handleTitleChange = e => {\r\n        setTitle(e.target.value);\r\n    };\r\n    const handleDescChange = e => {\r\n       setDescription(e);\r\n    };\r\n\r\n    const handleSampleChange = e => {\r\n        const newSample = {...sample};\r\n        newSample[e.target.name] = e.target.value;\r\n        setSample(newSample);\r\n    };\r\n    \r\n    const saveQuestionTemplate = async() => {\r\n        setLoading(true);\r\n        await axios.post(\"/save_question_template\", {\r\n            questionId: queryParams.get(\"qId\"),\r\n            title: title,\r\n            template: {\r\n                description: convertToRaw(description.getCurrentContent()),\r\n                sample: sample\r\n            },\r\n        })\r\n            .then(res => {\r\n                enqueueSnackbar(\"Saved successfully !\", {variant: \"success\"})\r\n            })\r\n            .catch(err => {\r\n                try {\r\n                    if (err.response.status === 401) {\r\n                        dispatch(logoutUser());\r\n                        return;\r\n                    }\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                    history.replace(\"/my_rooms\");\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some error occured while saving !!\", { variant: \"error\" });\r\n                    // history.replace(\"/my_rooms\");\r\n                }\r\n        });\r\n        setLoading(false);\r\n    }\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <span style={{width: '95%', display: 'inline-flex', justifyContent: 'space-between'}}>\r\n                <span style={{fontSize: '20px'}}>Type : {_type}</span>\r\n                <Button type=\"primary\" onClick={saveQuestionTemplate} loading={loading}>\r\n                    Save\r\n                </Button>\r\n            </span>\r\n            <div className=\"outer-scroll-div\">\r\n                <input value={title} onChange={handleTitleChange} className=\"question-title\" />\r\n                \r\n                <h2 style={{ textAlign: \"left\", marginLeft: \"10px\" }}>\r\n                    Description\r\n                </h2>\r\n                <span style={{ padding: \"10px\" }}>\r\n                    <DescriptionEditor state={description} setState={handleDescChange} readOnly={false} />\r\n                </span>\r\n\r\n                {\r\n                    _type === \"code\" ? (\r\n                        <div className=\"question-sample-case-outer\">\r\n                            <h2>Sample Case</h2>\r\n                            \r\n                            <h3 className=\"question-sample-case-title\">Sample Input</h3>\r\n                            <textarea\r\n                                className=\"question-sample-case-input\"\r\n                                value={sample.input}\r\n                                name=\"input\"\r\n                                onChange={handleSampleChange}\r\n                            />\r\n                            <h3 className=\"question-sample-case-title\">Sample Output</h3>\r\n                            <textarea\r\n                                className=\"question-sample-case-input\"\r\n                                value={sample.output}\r\n                                name=\"output\"\r\n                                onChange={handleSampleChange}\r\n                            />\r\n                            <h3 className=\"question-sample-case-title\">Explanation</h3>\r\n                            <textarea\r\n                                className=\"question-sample-case-input\"\r\n                                value={sample.explanation}\r\n                                name=\"explanation\"\r\n                                onChange={handleSampleChange}\r\n                            />\r\n                        </div>\r\n                    ) : (<></>)\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n","import React from 'react'\r\nimport useWindowDimensions from '../../Components/WindowDimensions';\r\nimport DescriptionEditor from '../../TextEditor/MyTextEditor';\r\n\r\nexport default function QuestionPreview({title, description, sample}) {\r\n    const { height, width } = useWindowDimensions();\r\n\r\n    return (\r\n        <div style={{height: (height - 70) + \"px\", padding: '10px' }}>\r\n            <div className=\"outer-scroll-div\">\r\n                <div className=\"question-title\" style={{width: '90%', borderBottom: 'none', marginBottom: \"0px\"}}> \r\n                    {title} \r\n                </div>\r\n                <DescriptionEditor state={description} setState={() => {}} readOnly={true} />\r\n\r\n                <h3 className=\"question-sample-case-title\" style={{marginTop: '10px'}} hidden={sample.input.length === 0}>Sample Input</h3>\r\n                <div className=\"question-sample-case-input\" style={{whiteSpace: 'pre'}} hidden={sample.input.length === 0} >\r\n                    {sample.input}\r\n                </div>\r\n                <h3 className=\"question-sample-case-title\" hidden={sample.output.length === 0} >Sample Output</h3>\r\n                <div className=\"question-sample-case-input\" style={{whiteSpace: 'pre'}} hidden={sample.output.length === 0}>\r\n                    {sample.output}\r\n                </div>\r\n                <h3 className=\"question-sample-case-title\" hidden={sample.explanation.length === 0}>Explanation</h3>\r\n                <div className=\"question-sample-case-input\" style={{whiteSpace: 'pre'}} hidden={sample.explanation.length === 0}>\r\n                    {sample.explanation}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Button } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { logoutUser } from \"../../Redux/Actions/AuthActions\";\r\n\r\n\r\nexport default function QuestionCases({testCases, setTestCases}) {\r\n    const [loading, setLoading] = useState(false);\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    \r\n\r\n    const removeCase = (i) => {\r\n        setTestCases( testCases.filter((tcase, index) => index !== i ) );\r\n    }\r\n\r\n    const addCase = () => {\r\n        if(testCases.length >= 5){\r\n            enqueueSnackbar(\"Can add upto only 5 cases !\", {variant: \"info\"});\r\n            return;\r\n        }\r\n        setTestCases( [...testCases, {\r\n            input: \"\",\r\n            output: \"\"\r\n        }] )\r\n    }\r\n\r\n    const handleChange = (e, index, name) => {\r\n        const newCases = [...testCases];\r\n        newCases[index][name] = e.target.value;\r\n\r\n        setTestCases(newCases);\r\n    }\r\n\r\n    const saveCases = async() => {\r\n        setLoading(true);\r\n        await axios.post(\"/save_question_tcases\", {\r\n            questionId: queryParams.get(\"qId\"),\r\n            testCases: testCases,\r\n        })\r\n        .then(res => {\r\n            // console.log(res);\r\n            enqueueSnackbar(\"Saved successfully !\", {variant: \"success\"})\r\n        })\r\n        .catch(err => {\r\n            // console.log(err);\r\n            try {\r\n                if (err.response.status === 401) {\r\n                    dispatch(logoutUser());\r\n                    return;\r\n                }\r\n                enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                history.replace(\"/my_rooms\");\r\n            } catch (error) {\r\n                enqueueSnackbar(\"Some error occured while saving !!\", { variant: \"error\" });\r\n                // history.replace(\"/my_rooms\");\r\n            }\r\n        });\r\n        setLoading(false);\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <span style={{width: '95%', display: 'inline-flex', justifyContent: 'space-between', marginBottom: '30px'}}>\r\n                <span></span>\r\n                <span>\r\n                    <Button onClick={addCase} disabled={loading}>\r\n                        Add\r\n                    </Button>\r\n                    <Button style={{marginLeft: '10px'}} type=\"primary\" onClick={saveCases} loading={loading}>\r\n                        Save\r\n                    </Button>\r\n                </span>\r\n            </span>\r\n            <div className=\"outer-scroll-div\" style={{paddingBottom: '250px'}}>\r\n                {\r\n                    testCases.map((tcase, index) => (\r\n                        <>\r\n                            <span style={{width: '95%', display: 'inline-flex', justifyContent: 'space-between', margin: '20px 0px 0px 0px'}}>\r\n                                <span>Case #{index + 1}</span>\r\n                                <span>\r\n                                    <Button onClick={() => {removeCase(index)}} danger={true} disabled={loading}>\r\n                                        Remove\r\n                                    </Button>\r\n                                </span>\r\n                            </span>\r\n\r\n                            <div style={{width: '100%', display: 'inline-flex'}}>\r\n                                <textarea \r\n                                    placeholder=\"Case Input\"\r\n                                    className=\"question-sample-case-input\"\r\n                                    style={{width: '100%', margin: '5px'}}\r\n                                    value={tcase.input}\r\n                                    onChange={(e) => {handleChange(e, index, \"input\")}}\r\n                                />\r\n                                <textarea \r\n                                    placeholder=\"Expected Output\"\r\n                                    className=\"question-sample-case-input\"\r\n                                    style={{width: '100%', margin: '5px'}}\r\n                                    value={tcase.output}\r\n                                    onChange={(e) => {handleChange(e, index, \"output\")}}\r\n                                />\r\n                            </div>\r\n                        </>\r\n                    ))\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { Button, DatePicker, Switch, TimePicker } from \"antd\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { logoutUser } from \"../../Redux/Actions/AuthActions\";\r\n\r\nexport default function QuestionSettings({ questionSettings, setQuestionSettings }) {\r\n    // console.log(\"dddd\", questionSettings);\r\n    const [date, setDate] = useState(moment(questionSettings.endTime));\r\n    const [loading, setLoading] = useState(false);\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const handleDateChange = e => {\r\n        // console.log(moment(e).format());\r\n        setDate(e);\r\n    };\r\n\r\n    const changeVisiblity = (e) => {\r\n        setQuestionSettings({\r\n            ...questionSettings,\r\n            isVisible: !questionSettings.isVisible\r\n        })\r\n        // console.log(e);\r\n    }\r\n\r\n    const saveSettings = async() => {\r\n        setLoading(true);\r\n        await axios.post(\"/save_question_settings\", {\r\n            questionId: queryParams.get(\"qId\"),\r\n            endTime: moment(date).format(\"YYYY-MM-DD HH:mm:ss\"),\r\n            isVisible: questionSettings.isVisible\r\n        })\r\n            .then(res => {\r\n                // console.log(res);\r\n                enqueueSnackbar(\"Saved successfully !\", {variant: \"success\"})\r\n            })\r\n            .catch(err => {\r\n                // console.log(err);\r\n                try {\r\n                    if (err.response.status === 401) {\r\n                        dispatch(logoutUser());\r\n                        return;\r\n                    }\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                    history.replace(\"/my_rooms\");\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some error occured while saving !!\", { variant: \"error\" });\r\n                }\r\n        });\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{width: '100%', fontSize: '20px', textAlign: 'left', marginLeft: '20px'}}>\r\n                <span style={{display: 'inline-flex', marginRight: '20px', minWidth: '150px'}}>\r\n                    End Time \r\n                </span>\r\n                <DatePicker\r\n                    disabledDate={current => {\r\n                        return current && current < moment(moment().format());\r\n                    }}\r\n                    allowClear={false}\r\n                    value={date}\r\n                    onChange={handleDateChange}\r\n                />\r\n                <TimePicker \r\n                    allowClear={false}\r\n                    value={date} \r\n                    onChange={handleDateChange}\r\n                />\r\n            </div>           \r\n            <div style={{width: '100%', fontSize: '20px', textAlign: 'left', marginLeft: '20px'}}>\r\n                <span style={{display: 'inline-flex', marginRight: '20px', minWidth: '150px'}}>\r\n                    Is Visible \r\n                </span>\r\n                <Switch onChange={changeVisiblity} checked={questionSettings.isVisible} />\r\n            </div>\r\n            <div style={{width: '100%', fontSize: '20px', marginTop: '20px'}}>\r\n                <Button type=\"primary\" onClick={saveSettings} loading={loading}>\r\n                    Save\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { VscSymbolArray } from \"react-icons/vsc\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { FiSettings } from \"react-icons/fi\";\r\nimport { Tabs } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport SemipolarLoading from \"react-loadingg/lib/SemipolarLoading\";\r\nimport { logoutUser } from \"../../Redux/Actions/AuthActions\";\r\nimport SplitPane, { Pane } from \"react-split-pane\";\r\nimport { convertFromRaw, EditorState } from \"draft-js\";\r\nimport QuestionTemplate from \"./QuestionTemplate\";\r\nimport QuestionPreview from \"./QuestionPreview\";\r\nimport QuestionCases from \"./QuestionCases\";\r\nimport QuestionSettings from \"./QuestionSettings\";\r\nimport moment from \"moment\";\r\nimport { setBreadcrumb } from \"../../Redux/Actions/RoomsDataActions\";\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default function EditQuestion() {\r\n    document.title = \"Edit Question | Code Rooms\";\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [title, setTitle] = useState(\"Title\");\r\n    const [description, setDescription] = useState({});\r\n    const [sample, setSample] = useState({});\r\n    \r\n    const [testCases, setTestCases] = useState([]);\r\n    const [questionSettings, setQuestionSettings] = useState({});\r\n    const [roomInfo, setRoomInfo] = useState({});\r\n\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n\r\n    \r\n    useEffect(async () => {\r\n        setLoading(true);\r\n        if (!queryParams.has(\"qId\")) {\r\n            enqueueSnackbar(\"Invalid question.\", { variant: \"warning\" });\r\n            history.replace(\"/my_rooms\");\r\n        }\r\n        await axios\r\n            .get(\"/get_question_details\", {\r\n                params: {\r\n                    questionId: queryParams.get(\"qId\"),\r\n                },\r\n            })\r\n            .then(res => {\r\n                setTitle(res.data.questionDetails.title);\r\n                setDescription(EditorState.createWithContent(convertFromRaw(res.data.questionDetails.template.description)));\r\n                setSample(res.data.questionDetails.template.sample);\r\n\r\n                setTestCases(res.data.questionDetails.testCases || []);\r\n\r\n                setQuestionSettings({\r\n                    _type: res.data.questionDetails._type,\r\n                    endTime: !res.data.questionDetails.endTime ? moment(moment().format()).add(7, 'days').endOf('day').format() : res.data.questionDetails.endTime,\r\n                    isVisible: res.data.questionDetails.isVisible,\r\n                });\r\n                \r\n                setRoomInfo({\r\n                    roomId: res.data.questionDetails.roomId,\r\n                    roomName: res.data.questionDetails.roomName,\r\n                })\r\n                \r\n            })\r\n            .catch(err => {\r\n                // console.log(err);\r\n                try {\r\n                    if (err.response.status === 401) {\r\n                        dispatch(logoutUser());\r\n                        return;\r\n                    }\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                    history.replace(\"/my_rooms\");\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some error occured while creating new question\", { variant: \"error\" });\r\n                    history.replace(\"/my_rooms\");\r\n                }\r\n            });\r\n            setLoading(false);\r\n        }, []);\r\n        \r\n\r\n        useEffect(() => {\r\n            dispatch(setBreadcrumb( [\r\n                {\r\n                    \"name\": \"My Rooms\",\r\n                    \"url\": \"/my_rooms\"\r\n                },\r\n                {\r\n                    \"name\": roomInfo.roomName,\r\n                    \"url\": \"/my_rooms/\" + roomInfo.roomId\r\n                },\r\n                {\r\n                    \"name\": \"Edit Question\",\r\n                    \"url\": \"/question?qId=/\" + queryParams.get(\"qId\")\r\n                },\r\n            ] ));\r\n        }, [roomInfo.roomId]);\r\n\r\n        \r\n    return loading ? (\r\n        <div className=\"VerifyEmail-heading-div\">\r\n            <div>Getting Question Data ....</div>\r\n            <div style={{ marginTop: \"40px\", position: \"relative\" }}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\" />\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div >\r\n            <SplitPane style={{ position: \"absolute\" }} minSize={350} maxSize={620} defaultSize={400} split=\"vertical\">\r\n                <Pane className=\"shlokOP\">\r\n                    <QuestionPreview \r\n                        title={title}\r\n                        description={description}\r\n                        sample={sample}\r\n                    />\r\n                </Pane>\r\n                    <div>\r\n                    <Tabs defaultActiveKey={queryParams.get(\"tab\") || \"edit\"} >\r\n                        <TabPane\r\n                            tab={\r\n                                <div className=\"myRooms-cards-description\" style={{fontSize: '15px'}}>\r\n                                    <FaEdit />\r\n                                    <span style={{ margin: \"0px 6px\", display: \"inline-flex\"}}>\r\n                                        Edit Question\r\n                                    </span>\r\n                                </div>\r\n                            }\r\n                            key=\"edit\"\r\n                        >\r\n                            <QuestionTemplate \r\n                                title={title}\r\n                                setTitle={setTitle}\r\n                                description={description}\r\n                                setDescription={setDescription}\r\n                                sample={sample}\r\n                                setSample={setSample}\r\n                                _type={questionSettings._type}\r\n                            />\r\n                        </TabPane>\r\n                        {\r\n                            questionSettings._type === \"code\" ? (\r\n                                <TabPane\r\n                                    tab={\r\n                                        <div className=\"myRooms-cards-description\" style={{fontSize: '15px', padding: \"0px\", margin: '0px'}}>\r\n                                            <VscSymbolArray />\r\n                                            <span style={{ margin: \"0px 6px\", display: \"inline-flex\"}}>\r\n                                            Test cases\r\n                                            </span>\r\n                                        </div>\r\n                                    }\r\n                                    key=\"cases\"\r\n                                >\r\n                                    <QuestionCases \r\n                                        testCases={testCases}\r\n                                        setTestCases={setTestCases}\r\n                                    />\r\n                                </TabPane>\r\n                            ) : (<></>)\r\n                        }\r\n                        <TabPane\r\n                            tab={\r\n                                <div className=\"myRooms-cards-description\" style={{fontSize: '15px'}}>\r\n                                    <FiSettings />\r\n                                    <span style={{ margin: \"0px 6px\", display: \"inline-flex\"}}>\r\n                                        Settings\r\n                                    </span>\r\n                                </div>\r\n                            }\r\n                            key=\"settings\"\r\n                        >\r\n                            <QuestionSettings \r\n                                questionSettings={questionSettings}\r\n                                setQuestionSettings={setQuestionSettings}\r\n                            />\r\n\r\n                        </TabPane>\r\n                    </Tabs>\r\n\r\n                    </div>\r\n            </SplitPane>\r\n        </div>\r\n    );\r\n}\r\n","import { CaretRightOutlined, SaveFilled } from \"@ant-design/icons\";\r\nimport { Button, Input, Modal, Select } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport React, { useState } from \"react\";\r\nimport { sendAnalytics } from \"../Components/Analytics\";\r\nconst { Option } = Select;\r\n\r\nexport default function EditorNavbar({savedCodes, setSavedCodes, selectedCode, setSelectedCode, loading ,setLoading, getEditorCode, input, setOutput}) {\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [saveOpen, setSaveOpen] = useState(false);\r\n    \r\n    const handleLanguageChange = value => {\r\n        const newData = { ...selectedCode };\r\n        newData.language = value;\r\n        setSelectedCode(newData);\r\n    };\r\n\r\n\r\n    const handleRun = async() => {\r\n        sendAnalytics(\"CodeRooms\", \"Run Code\", \"\");\r\n\r\n        setLoading(true);\r\n        setOutput(\"\");\r\n        await axios.post(\"/run_code\", {\r\n                code: getEditorCode(),\r\n                language: selectedCode.language,\r\n                input: input,\r\n            })\r\n            .then(res => {\r\n                setOutput(JSON.parse( res.data).output)\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Error while running!\", {variant: \"error\"});\r\n            });\r\n        setLoading(false);\r\n    };\r\n\r\n    const handleSave = async() => {\r\n        setLoading(true);\r\n\r\n        var newSaved = savedCodes.filter(code => code.id !== selectedCode.id);\r\n        newSaved.push({\r\n            id: selectedCode.id,\r\n            name: selectedCode.name,\r\n            code: getEditorCode(),\r\n            language: selectedCode.language,\r\n        });\r\n        setSavedCodes(newSaved);\r\n        setSaveOpen(false);\r\n        \r\n        setTimeout(() => {\r\n            setLoading(false);\r\n            enqueueSnackbar(\"Code saved !\", {variant: \"success\"});\r\n        }, 500);\r\n           \r\n    };\r\n\r\n    const changeName = (e) => {\r\n        const newData = { ...selectedCode };\r\n        newData.name = e.target.value;\r\n        setSelectedCode(newData);\r\n    };\r\n\r\n    return (\r\n        <div className=\"code-editor-nav\">\r\n            <Modal\r\n                title=\"Save Code to local device\"\r\n                visible={saveOpen}\r\n                // footer={[null]}\r\n                // style={{border: '2px solid var(--primaryText)'}}\r\n                onCancel={() => {setSaveOpen(false)}}\r\n                onOk={handleSave}\r\n            >\r\n                Name &nbsp;&nbsp; : \t&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <Input value={selectedCode.name} onChange={changeName} style={{width: '200px'}} />\r\n            </Modal>\r\n            <span>\r\n                <Button\r\n                    style={{ color: \"var(--primaryText)\", backgroundColor: \"none\", width: \"auto\" }}\r\n                    onClick={handleRun}\r\n                    disabled={loading}\r\n                >\r\n                    <CaretRightOutlined />\r\n                    Run\r\n                </Button>\r\n                <Button style={{ color: \"var(--primaryText)\", backgroundColor: \"none\", width: \"auto\" }} onClick={() => {setSaveOpen(true)}}>\r\n                    <SaveFilled />\r\n                    Save\r\n                </Button>\r\n            </span>\r\n            <span>\r\n                <span style={{color: '#fff', marginRight: '10px'}}>\r\n                    Language : \r\n                </span>\r\n                <Select value={selectedCode.language} style={{ width: 120 }} onChange={handleLanguageChange}>\r\n                    <Option value=\"cpp\">CPP</Option>\r\n                    <Option value=\"c\">C</Option>\r\n                    <Option value=\"java\">Java</Option>\r\n                    <Option value=\"python\">Python</Option>\r\n                </Select>\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n","import { MdDeleteForever } from \"react-icons/md\";\r\nimport { BsFillArrowUpRightCircleFill } from \"react-icons/bs\";\r\nimport React from \"react\";\r\nimport { Button, Tooltip } from \"antd\";\r\nimport { PlusCircleFilled } from \"@ant-design/icons\";\r\n\r\nexport default function RenderSaved({ savedCodes, setSavedCodes, setSelectedCode, setLoading, setOutput, setInput }) {\r\n    const loadSavedCode = (index) => {\r\n        setLoading(true);\r\n        setInput(\"\");\r\n        setOutput(\"\");\r\n        setSelectedCode(savedCodes[index]);\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 500);\r\n    }\r\n    const handleDelete = (index) => {\r\n        setLoading(true);\r\n        setSavedCodes( [...savedCodes.filter((code, i) => i !== index)] );\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 500);\r\n    }\r\n    const handleNew = () => {\r\n        setLoading(true);\r\n        setInput(\"\");\r\n        setOutput(\"\");\r\n\r\n        setSelectedCode({\r\n            id: Math.floor(Math.random() * 100000),\r\n            name: \"\",\r\n            code: \"// code goes here\",\r\n            language: \"cpp\"\r\n        });\r\n\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 500);\r\n    }\r\n\r\n    return savedCodes.length === 0 ? (\r\n        <>\r\n            <div className=\"playground-code-title\">\r\n                No Codes Saved !\r\n            </div>\r\n            <Button type=\"primary\" style={{margin: '20px 0px', fontSize: '20px', height: '100%'}} icon={<PlusCircleFilled />} onClick={handleNew}>\r\n                New\r\n            </Button>\r\n        </>\r\n    ) : (\r\n        <>\r\n            <div className=\"playground-code-title\" >\r\n                Saved Codes ...\r\n            </div>\r\n            <Button type=\"primary\" style={{margin: '20px 0px', fontSize: '20px', height: '100%'}} icon={<PlusCircleFilled />} onClick={handleNew}>\r\n                New\r\n            </Button>\r\n            <div className=\"outer-scroll-div\" style={{height: '600px'}}>\r\n                {savedCodes.map((code, index) => (\r\n                    <div className=\"playground-saved-codes\">\r\n                        <div className=\"playground-saved-codes-inner\">\r\n                            <span style={{alignItems: 'center', marginRight: '8px'}}>{code.name}</span>\r\n                            <span style={{display: 'inline-flex', alignItems: 'center'}}>\r\n                                <span style={{display: 'inline-flex', alignItems: 'center'}} onClick={() => {loadSavedCode(index)}} >\r\n                                    <Tooltip title=\"Load saved code to editor\">\r\n                                        <BsFillArrowUpRightCircleFill style={{fontSize: '25px', marginRight: '8px'}} />\r\n                                    </Tooltip>\r\n                                </span>\r\n                                <span style={{display: 'inline-flex', alignItems: 'center'}} onClick={() => {handleDelete(index)}}>\r\n                                    <Tooltip title=\"Delete saved code\">\r\n                                        <MdDeleteForever style={{fontSize: '25px'}} />\r\n                                    </Tooltip>\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport SplitPane, { Pane } from \"react-split-pane\";\r\nimport Editor from \"@monaco-editor/react\";\r\nimport { Modal } from \"antd\";\r\nimport SemipolarLoading from \"react-loadingg/lib/SemipolarLoading\";\r\nimport EditorNavbar from \"./EditorNavbar\";\r\nimport useWindowDimensions from \"../Components/WindowDimensions\";\r\nimport RenderSaved from \"./RenderSaved\";\r\n\r\n\r\nexport default function MyEditor({ savedCodes, setSavedCodes, selectedCode, setSelectedCode }) {\r\n    const editorRef = useRef(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [input, setInput] = useState(\"\");\r\n    const [output, setOutput] = useState(\"\");\r\n\r\n    function handleEditorDidMount(editor, monaco) {\r\n        editorRef.current = editor;\r\n    }\r\n\r\n    const getEditorCode = () => {\r\n        return editorRef.current.getValue()\r\n    }\r\n\r\n    const { height, width } = useWindowDimensions();\r\n\r\n    return (\r\n        <div className=\"questionEverything-outer-div\">\r\n            <Modal\r\n                centered\r\n                visible={loading}\r\n                footer={null}\r\n                bodyStyle={{padding: '0px'}}\r\n                closable={false}\r\n            >\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\" />\r\n            </Modal>\r\n\r\n            <SplitPane style={{ position: \"absolute\" }} minSize={330} maxSize={620} defaultSize={400} split=\"vertical\">\r\n                <Pane>\r\n                    <RenderSaved \r\n                        savedCodes={savedCodes}\r\n                        setSavedCodes={setSavedCodes}\r\n                        setSelectedCode={setSelectedCode}\r\n                        setLoading={setLoading}\r\n                        setOutput={setOutput}\r\n                        setInput={setInput}\r\n                    />\r\n                </Pane>\r\n                <SplitPane minSize={height - 65 - 270} maxSize={height - 75} defaultSize={height - 65 - 170} split=\"horizontal\">\r\n                    <Pane style={{ height: \"100%\", width: \"100%\"}} >\r\n                        <EditorNavbar\r\n                            savedCodes={savedCodes}\r\n                            setSavedCodes={setSavedCodes}\r\n                            selectedCode={selectedCode}\r\n                            setSelectedCode={setSelectedCode}\r\n                            loading={loading}\r\n                            setLoading={setLoading}\r\n                            getEditorCode={getEditorCode}\r\n                            input={input}\r\n                            setOutput={setOutput}\r\n                        />\r\n                        <Editor\r\n                            theme=\"vs-dark\"\r\n                            language={selectedCode.language}\r\n                            value={selectedCode.code}\r\n                            onMount={handleEditorDidMount}\r\n                            width=\"100%\"\r\n                        />\r\n                    </Pane>\r\n                    <Pane style={{ height: \"100%\", width: \"100%\"}} >\r\n                        <div style={{display: 'inline-flex', width: '100%', height: '100%'}}>\r\n                            <div style={{width: '100%', background: \"var(--primaryBackground)\", padding: '6px', borderRight: '2px solid var(--primaryText)'}}>\r\n                                <div className=\"code-editor-input-title\">Input</div>\r\n                                <textarea \r\n                                    value={input} \r\n                                    onChange={(e) => {setInput(e.target.value); setOutput(\"\")}} \r\n                                    className=\"code-editor-input-textarea\"\r\n                                />\r\n                            </div>\r\n                            <div style={{width: '100%', background: \"var(--primaryBackground)\", padding: '6px'}}>\r\n                                <div className=\"code-editor-input-title\">Output </div>\r\n                                <div \r\n                                    style={{whiteSpace: 'pre', textAlign: 'left', fontSize: '17px'}}\r\n                                    className=\"outer-scroll-div\"\r\n                                >\r\n                                    {output}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Pane>\r\n                </SplitPane>\r\n            </SplitPane>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { setBreadcrumb } from '../Redux/Actions/RoomsDataActions';\r\nimport MyEditor from './MyEditor';\r\n\r\nexport default function CodePlayground() {\r\n    document.title = \"Code Playground | Code Rooms\"\r\n\r\n    const [savedCodes, setSavedCodes] = useState( localStorage.savedPlaygroundCodes ?\r\n        JSON.parse(localStorage.getItem(\"savedPlaygroundCodes\")) : [] );\r\n\r\n    const [selectedCode, setSelectedCode] = useState({\r\n        id: Math.floor(Math.random() * 100000),\r\n        name: \"\",\r\n        code: \"\",\r\n        language: \"cpp\"\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(setBreadcrumb([\r\n            {\r\n                name: \"Code Playground\",\r\n                url: \"/code\"\r\n            }\r\n        ]))\r\n        localStorage.setItem(\"savedPlaygroundCodes\", JSON.stringify(savedCodes));\r\n    }, [savedCodes])\r\n\r\n    return (\r\n        <MyEditor \r\n            savedCodes={savedCodes}\r\n            setSavedCodes={setSavedCodes}\r\n            selectedCode={selectedCode}\r\n            setSelectedCode={setSelectedCode}\r\n        />\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { CaretRightOutlined, SaveFilled, SendOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport { Select } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport moment from \"moment\";\r\nimport { sendAnalytics } from \"../../Components/Analytics\";\r\nconst { Option } = Select;\r\n\r\nexport default function EditorNavbar({questionDetails, setQuestionDetails, loading ,setLoading, getEditorCode, input, setOutput}) {\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    \r\n    const handleLanguageChange = value => {\r\n        const newData = { ...questionDetails };\r\n        newData.language = value;\r\n        setQuestionDetails(newData);\r\n    };\r\n\r\n\r\n    const handleRun = async() => {\r\n        sendAnalytics(\"CodeRooms\", \"Run Code\", \"\");\r\n\r\n        setLoading(true);\r\n        setOutput(\"\");\r\n        await axios.post(\"/run_code\", {\r\n                code: getEditorCode(),\r\n                language: questionDetails.language,\r\n                input: input,\r\n            })\r\n            .then(res => {\r\n                // console.log(JSON.parse(res.data));\r\n                setOutput(JSON.parse( res.data).output)\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Some issue while run.\", {variant: 'error'});\r\n            });\r\n        setLoading(false);\r\n    };\r\n\r\n    const handleSave = async() => {\r\n        sendAnalytics(\"CodeRooms\", \"Save Code\", \"\");\r\n        setLoading(true);\r\n        await axios.post(\"/save_question_code\", {\r\n                questionId: queryParams.get(\"qId\"),\r\n                code: getEditorCode() ,\r\n                language: questionDetails.language,\r\n            })\r\n            .then(res => {\r\n                enqueueSnackbar(\"Saved successfully.\", {variant: 'success'});\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Some issue while saving.\", {variant: 'error'});\r\n            });\r\n        setLoading(false);\r\n           \r\n    };\r\n    const handleSubmit = async() => {\r\n        sendAnalytics(\"CodeRooms\", \"Submit Code\", \"\");\r\n        setLoading(true);\r\n        await axios.post(\"/submit_question_code\", {\r\n                questionId: queryParams.get(\"qId\"),\r\n                code: getEditorCode() ,\r\n                language: questionDetails.language,\r\n            })\r\n            .then(res => {\r\n                if(res.data.noOfCases === 0){\r\n                    enqueueSnackbar(\"Submitted successfully.\", {variant: 'success'});\r\n                }\r\n                else if(res.data.casesPassed === res.data.noOfCases){\r\n                    enqueueSnackbar(\"Submitted successfully. \" + res.data.casesPassed + \" out of \" + res.data.noOfCases + \" cases passes\", {variant: 'success'});\r\n                }\r\n                else{\r\n                    enqueueSnackbar(\"Submitted successfully. \" + res.data.casesPassed + \" out of \" + res.data.noOfCases + \" cases passes\", {variant: 'warning'});\r\n                }\r\n                setQuestionDetails({\r\n                    ...questionDetails,\r\n                    submitted: true,\r\n                    submittedAt: moment().format()\r\n                })\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Some issue while submitting.\", {variant: 'error'});\r\n            });\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"code-editor-nav\">\r\n            <span>\r\n                <Button\r\n                    style={{ color: \"var(--primaryText)\", backgroundColor: \"none\", width: \"auto\" }}\r\n                    onClick={handleRun}\r\n                    disabled={loading}\r\n                >\r\n                    <CaretRightOutlined />\r\n                    Run\r\n                </Button>\r\n                <Button style={{ color: \"var(--primaryText)\", backgroundColor: \"none\", width: \"auto\" }} onClick={handleSave}>\r\n                    <SaveFilled />\r\n                    Save\r\n                </Button>\r\n                {\r\n                    moment(questionDetails.endTime).isAfter(moment().format()) ? (\r\n                        <Button\r\n                            style={{ color: \"var(--primaryText)\", backgroundColor: \"none\", width: \"auto\" }}\r\n                            onClick={handleSubmit}\r\n                        >\r\n                            <SendOutlined />\r\n                            Submit\r\n                        </Button>\r\n                    ) : (<></>)\r\n                }\r\n            </span>\r\n            <span>\r\n                <span style={{color: '#fff', margin: '0px 10px 0px 10px'}}>\r\n                    Language : \r\n                </span>\r\n                <Select value={questionDetails.language} style={{ width: 120 }} onChange={handleLanguageChange}>\r\n                    <Option value=\"cpp\">CPP</Option>\r\n                    <Option value=\"c\">C</Option>\r\n                    <Option value=\"java\">Java</Option>\r\n                    <Option value=\"python\">Python</Option>\r\n                </Select>\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport SplitPane, { Pane } from \"react-split-pane\";\r\nimport Editor from \"@monaco-editor/react\";\r\nimport useWindowDimensions from \"../../Components/WindowDimensions\";\r\nimport EditorNavbar from \"./EditorNavbar\";\r\n\r\nexport default function CodeType({overlayLoading, setOverlayLoading, questionDetails, setQuestionDetails }) {\r\n    const editorRef = useRef(null);\r\n    const [input, setInput] = useState(\"\");\r\n    const [output, setOutput] = useState(\"\");\r\n\r\n    function handleEditorDidMount(editor, monaco) {\r\n        editorRef.current = editor;\r\n    }\r\n\r\n    const getEditorCode = () => {\r\n        return editorRef.current.getValue();\r\n    };\r\n\r\n    const { height, width } = useWindowDimensions();\r\n\r\n    return (\r\n        <SplitPane minSize={height - 65 - 270} maxSize={height - 75} defaultSize={height - 65 - 170} split=\"horizontal\">\r\n            <Pane style={{ height: \"100%\", width: \"100%\"}} >\r\n                <EditorNavbar\r\n                    questionDetails={questionDetails}\r\n                    setQuestionDetails={setQuestionDetails}\r\n                    loading={overlayLoading}\r\n                    setLoading={setOverlayLoading}\r\n                    getEditorCode={getEditorCode}\r\n                    input={input}\r\n                    setOutput={setOutput}\r\n                />\r\n                <Editor\r\n                    theme=\"vs-dark\"\r\n                    language={questionDetails.language}\r\n                    defaultValue={questionDetails.savedCode}\r\n                    onMount={handleEditorDidMount}\r\n                />\r\n            </Pane>\r\n            <Pane style={{ height: \"100%\", widht: \"100%\" }}>\r\n                <div style={{ display: \"inline-flex\", width: \"100%\", height: \"100%\" }}>\r\n                    <div\r\n                        style={{\r\n                            width: \"100%\",\r\n                            background: \"var(--primaryBackground)\",\r\n                            padding: \"6px\",\r\n                            borderRight: \"2px solid var(--primaryText)\",\r\n                        }}\r\n                    >\r\n                        <div className=\"code-editor-input-title\">Input</div>\r\n\r\n                        <textarea\r\n                            value={input}\r\n                            onChange={e => {\r\n                                setInput(e.target.value);\r\n                                setOutput(\"\");\r\n                            }}\r\n                            className=\"code-editor-input-textarea\"\r\n                        />\r\n                    </div>\r\n                    <div style={{ width: \"100%\", background: \"var(--primaryBackground)\", padding: \"6px\" }}>\r\n                        <div className=\"code-editor-input-title\">Output </div>\r\n                        <div\r\n                            style={{ whiteSpace: \"pre\", textAlign: \"left\", fontSize: \"17px\" }}\r\n                            className=\"outer-scroll-div\"\r\n                        >\r\n                            {output}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Pane>\r\n        </SplitPane>\r\n    )\r\n}\r\n","// export const backendURL = \"http://localhost:8000\";\r\nexport const backendURL = \"https://api.smart-iam.com/api/coderooms\";\r\n","import { UploadOutlined } from '@ant-design/icons';\r\nimport { Button, Popconfirm, Upload } from 'antd';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect, useState } from 'react';\r\nimport FileViewer from 'react-file-viewer';\r\nimport { useLocation } from 'react-router';\r\nimport { sendAnalytics } from '../../Components/Analytics';\r\nimport { backendURL } from '../../Constants';\r\n\r\n\r\nexport default function FileType({setOverlayLoading, questionDetails, setQuestionDetails}) {\r\n    const [src, setSrc] = useState(\"\");\r\n    const [file, setFile] = useState(null);\r\n\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    useEffect(() => {\r\n        if(!questionDetails.submitted){\r\n            enqueueSnackbar(\"File should be .pdf type and file size should not exceed 7MB\", {variant: 'warning'})\r\n        } \r\n    }, [questionDetails.submitted])\r\n\r\n\r\n    const deleteSubmission = async() => {\r\n        sendAnalytics(\"CodeRooms\", \"Delete File Submission\", \"\");\r\n        setOverlayLoading(true);\r\n        await axios.post(\"/delete_submitted_file\", {\r\n            questionId:  queryParams.get(\"qId\"),\r\n            submissionId: questionDetails.submissionId\r\n        })\r\n            .then(res => {\r\n                setQuestionDetails({\r\n                    ...questionDetails,\r\n                    submitted: false,\r\n                })\r\n                setFile(null);\r\n                setSrc(\"\");\r\n                enqueueSnackbar(\"Deleted Submission!\", {variant: 'info'})\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Some error occurred while deleting !\", {variant: 'error'})\r\n            })\r\n        setOverlayLoading(false);\r\n\r\n    }\r\n\r\n\r\n    const handleBeforeUpload = (e) => {\r\n        try{\r\n            setSrc(URL.createObjectURL(e))\r\n            setFile(e);\r\n            return false;\r\n        }\r\n        catch(err) {\r\n            setFile(null);\r\n            setSrc(\"\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        if(e.fileList.length === 0){\r\n            setFile(null);\r\n            setSrc(\"\");\r\n            return;\r\n        }\r\n\r\n        try{\r\n            setSrc(URL.createObjectURL(e.file))\r\n            setFile(e.file);\r\n        }\r\n        catch(err) {\r\n            setFile(null);\r\n            setSrc(\"\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    const handleSubmitFile = async() => {\r\n        sendAnalytics(\"CodeRooms\", \"Submit File\", \"\");\r\n        setOverlayLoading(true);\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        if(formData !== null){\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'multipart/form-data'\r\n                }\r\n            }\r\n            await axios.post(\"/submit_question_file/\" + queryParams.get(\"qId\") , formData, config)\r\n                .then(res => {\r\n                    setQuestionDetails({\r\n                        ...questionDetails,\r\n                        submitted: true,\r\n                        submittedAt: moment().format(),\r\n                        submissionId: res.data.submissionId\r\n                    })\r\n                    enqueueSnackbar(\"File submitted successfully !\", {variant: 'success'})\r\n                })\r\n                .catch(err => {\r\n                    try {\r\n                        enqueueSnackbar(err.response.data.detail, {variant: 'error'});\r\n                    } catch (error) {\r\n                        enqueueSnackbar(\"Some issue while submitting.\", {variant: 'error'});    \r\n                    }\r\n                })\r\n        }\r\n        setOverlayLoading(false);\r\n    }\r\n\r\n\r\n    const downloadPDF = () => {\r\n\t\tfetch(`${backendURL}/get_submitted_file?questionId=${queryParams.get(\"qId\")}&submissionId=${questionDetails.submissionId}&token=${localStorage.getItem('JWTtoken')}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\tresponse.blob().then(blob => {\r\n\t\t\t\t\tlet url = window.URL.createObjectURL(blob);\r\n\t\t\t\t\tlet a = document.createElement('a');\r\n\t\t\t\t\ta.href = url;\r\n\t\t\t\t\ta.download = \"Submission.pdf\" ;\r\n\t\t\t\t\ta.click();\r\n\t\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\r\n    return questionDetails.submitted ? (\r\n        <>\r\n        {\r\n            moment(questionDetails.endTime).isAfter(moment().format()) ? (\r\n                <Popconfirm\r\n                    title={\r\n                        <>\r\n                            Are you sure you want to submit again?<br /> \r\n                            This will delete your previous submission.\r\n                        </>\r\n                    }\r\n                    onConfirm={deleteSubmission}\r\n                    okText=\"Yes\"\r\n                    cancelText=\"Cancel\"\r\n                    overlayInnerStyle={{maxWidth: '400px', backgroundColor: 'var(--primaryBackground)', border: '2px solid var(--primaryText)'}}\r\n                >\r\n                    <Button \r\n                        style={{marginTop: \"10px\"}}\r\n                        type=\"primary\" \r\n                        danger={true}\r\n                    >\r\n                        Change Submission\r\n                    </Button>\r\n                </Popconfirm>\r\n            ) : (<></>)\r\n        }\r\n            <Button onClick={downloadPDF} style={{marginTop: \"10px\", marginLeft: '10px'}} type=\"primary\"  >\r\n                Download PDF\r\n            </Button>\r\n            <FileViewer\r\n                fileType={\"pdf\"}\r\n                filePath={`${backendURL}/get_submitted_file?questionId=${queryParams.get(\"qId\")}&submissionId=${questionDetails.submissionId}&token=${localStorage.getItem('JWTtoken')}`}\r\n            />\r\n        </>\r\n    ) : moment(questionDetails.endTime).isAfter(moment().format()) ? (\r\n        <>\r\n            <div style={{height: 'auto', display: 'flex', alignItems: \"center\", justifyContent: 'space-between', margin: '10px 0px 30px 0px'}}>\r\n                <Upload\r\n                    listType=\"picture\"\r\n                    beforeUpload={handleBeforeUpload}\r\n                    maxCount={1}\r\n                    multiple={false}\r\n                    type=\"file\"\r\n                    accept=\"application/pdf\"\r\n                    onChange={handleChange}\r\n                    className=\"upload-list-inline\"\r\n                >\r\n                    <Button icon={<UploadOutlined />} style={{height: '66px'}} >Upload</Button>\r\n                </Upload>\r\n                {/* <img src={src} style={{border: '2px solid white', width: '100%'}} /> */}\r\n                <Button \r\n                    onClick={handleSubmitFile} \r\n                    type=\"primary\" \r\n                    style={{margin: '0px 30px 0px 0px', height: \"66px\"}}\r\n                    disabled={file === null}\r\n                >\r\n                    Submit\r\n                </Button>\r\n            </div>\r\n            {\r\n                file !== null ? (\r\n                    <>\r\n                    <FileViewer\r\n                        controls={true}\r\n                        fileType={\"pdf\"}\r\n                        filePath={src}\r\n                        key={src}\r\n                    />\r\n                    </>\r\n                ) : (<></>)\r\n            }\r\n        </>\r\n    ) : (\r\n        <div className=\"playground-code-title\" style={{color: 'var(--privateRoom)'}}>\r\n            Due Date Over\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n","import { Modal } from 'antd';\r\nimport axios from 'axios';\r\nimport { convertFromRaw, EditorState } from 'draft-js';\r\nimport moment from 'moment';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect, useState } from 'react'\r\nimport SemipolarLoading from 'react-loadingg/lib/SemipolarLoading';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport SplitPane, { Pane } from 'react-split-pane';\r\nimport QuestionPreview from '../../MyRooms/EditQuestion/QuestionPreview';\r\nimport { logoutUser } from '../../Redux/Actions/AuthActions';\r\nimport { setBreadcrumb } from '../../Redux/Actions/RoomsDataActions';\r\nimport CodeType from './CodeType';\r\nimport FileType from './FileType';\r\n\r\nexport default function ViewQuestion() {\r\n    document.title = \"Question | Code Rooms\";\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [overlayLoading, setOverlayLoading] = useState(false);\r\n    const [questionDetails, setQuestionDetails] = useState({});\r\n    const [roomDetails, setRoomDetails] = useState({});\r\n\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    useEffect(async () => {\r\n        setLoading(true);\r\n        if (!queryParams.has(\"qId\")) {\r\n            enqueueSnackbar(\"Invalid question.\", { variant: \"warning\" });\r\n            history.replace(\"/enrolled_rooms\");\r\n        }\r\n        await axios\r\n            .get(\"/question_for_member\", {\r\n                params: {\r\n                    questionId: queryParams.get(\"qId\"),\r\n                },\r\n            })\r\n            .then(res => {\r\n                setQuestionDetails({\r\n                    _type: res.data.details._type,\r\n                    title: res.data.details.title,\r\n                    description: EditorState.createWithContent(convertFromRaw(res.data.details.template.description)),\r\n                    sample: res.data.details.template.sample,\r\n                    endTime: res.data.details.endTime,\r\n                    savedCode: res.data.details.savedCode,\r\n                    language: res.data.details.language || \"cpp\",\r\n                    submitted: res.data.details.submitted,\r\n                    submittedAt: res.data.details.submittedAt,\r\n                    submissionId: res.data.details.submissionId,\r\n                });\r\n\r\n                setRoomDetails({\r\n                    roomId: res.data.details.roomId,\r\n                    roomName: res.data.details.roomName\r\n                })\r\n\r\n            })\r\n            .catch(err => {\r\n                try {\r\n                    if (err.response.status === 401) {\r\n                        dispatch(logoutUser());\r\n                        return;\r\n                    }\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                    history.replace(\"/enrolled_rooms\");\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some error occured while getting question details.\", { variant: \"error\" });\r\n                    history.replace(\"/enrolled_rooms\");\r\n                }\r\n            });\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    useEffect(async() => {\r\n        dispatch(setBreadcrumb( [\r\n            {\r\n                \"name\": \"Enrolled Rooms\",\r\n                \"url\": \"/enrolled_rooms\"\r\n            },\r\n            {\r\n                \"name\": roomDetails.roomName,\r\n                \"url\": \"/enrolled_rooms/\" + roomDetails.roomId\r\n            },\r\n            {\r\n                \"name\": \"Question\",\r\n                \"url\": \"/question?qId=/\" + queryParams.get(\"qId\")\r\n            },\r\n        ] ));\r\n    }, [roomDetails.roomId]);\r\n\r\n\r\n    const renderRightPane = () => {\r\n        if(questionDetails._type === \"code\"){\r\n            return (\r\n                <CodeType \r\n                    overlayLoading={overlayLoading}\r\n                    setOverlayLoading={setOverlayLoading}\r\n                    questionDetails={questionDetails}\r\n                    setQuestionDetails={setQuestionDetails}\r\n                />\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <FileType \r\n                    setOverlayLoading={setOverlayLoading} \r\n                    questionDetails={questionDetails}\r\n                    setQuestionDetails={setQuestionDetails}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    return loading ? (\r\n        <div className=\"VerifyEmail-heading-div\">\r\n            <div>Loading Question ....</div>\r\n            <div style={{ marginTop: \"40px\", position: \"relative\" }}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\" />\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div>\r\n            <Modal centered visible={overlayLoading} footer={null} bodyStyle={{ padding: \"0px\" }} closable={false}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\" />\r\n            </Modal>\r\n\r\n            <SplitPane style={{ position: \"absolute\" }} minSize={300} maxSize={620} defaultSize={400} split=\"vertical\">\r\n                <Pane>\r\n                    <div style={{ padding: \"15px\", borderBottom: \"2px solid #fff\" }}>\r\n                        <div className=\"myRooms-cards-description\" style={{fontSize: '15px'}}>\r\n                            <span style={{display: \"inline-flex\", minWidth: \"170px\" }}>End Time</span>\r\n                            {moment(questionDetails.endTime).format(\"Do MMM HH:mm a\")}\r\n                        </div>\r\n                        {\r\n                            questionDetails.submitted ? (\r\n                                <div className=\"myRooms-cards-description\" style={{fontSize: '15px'}}>\r\n                                    <span style={{ display: \"inline-flex\", minWidth: \"170px\" }}>Submitted At</span>\r\n                                    {moment(questionDetails.submittedAt).format(\"Do MMM HH:mm a\")}\r\n                                </div>\r\n                            ) : (<></>)\r\n                        }\r\n                    </div>\r\n                    <QuestionPreview \r\n                        title={questionDetails.title} \r\n                        description={questionDetails.description} \r\n                        sample={questionDetails.sample}     \r\n                    />\r\n                </Pane>\r\n                {renderRightPane()}\r\n            </SplitPane>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport SplitPane, { Pane } from \"react-split-pane\";\r\nimport Editor from \"@monaco-editor/react\";\r\nimport { CaretRightOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport useWindowDimensions from \"../../Components/WindowDimensions\";\r\nimport { Select } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { sendAnalytics } from \"../../Components/Analytics\";\r\nconst { Option } = Select;\r\n\r\nexport default function CodeType({\r\n    setOverlayLoading,\r\n    selected,\r\n    setSelected,\r\n}) {\r\n    const [language, setLanguage] = useState(selected.language || \"cpp\");\r\n    const [input, setInput] = useState(\"\");\r\n    const [output, setOutput] = useState(\"\");\r\n\r\n    const editorRef = useRef(null);\r\n    const { height, width } = useWindowDimensions();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const getUserCode = async() => {\r\n        setOverlayLoading(true);\r\n        await axios\r\n            .get(\"/get_submitted_code\", {\r\n                params: {\r\n                    submissionId: selected.submissionId,\r\n                },\r\n            })\r\n            .then(res => {\r\n                var newSelected = { ...selected };\r\n                newSelected.code = res.data.data.code;\r\n                newSelected.language = res.data.data.language;\r\n\r\n                setLanguage(res.data.data.language);\r\n                setSelected(newSelected);\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Some error occured while getting submission\", { variant: \"error\" });\r\n            });\r\n\r\n        setOverlayLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!selected.submissionId) {\r\n            return;\r\n        }\r\n        getUserCode();\r\n    }, [selected.submissionId]);\r\n\r\n\r\n\r\n    function handleEditorDidMount(editor, monaco) {\r\n        editorRef.current = editor;\r\n        // editorRef.updateOptions({ readOnly: true })\r\n    }\r\n    const handleLanguageChange = value => {\r\n        setLanguage(value);\r\n    };\r\n\r\n    const getEditorCode = () => {\r\n        return editorRef.current.getValue();\r\n    };\r\n\r\n\r\n    const handleRun = async () => {\r\n        sendAnalytics(\"CodeRooms\", \"Run Code\", \"\");\r\n        setOverlayLoading(true);\r\n        setOutput(\"\");\r\n        await axios\r\n            .post(\"/run_code\", {\r\n                code: getEditorCode(),\r\n                language: language,\r\n                input: input,\r\n            })\r\n            .then(res => {\r\n                setOutput(JSON.parse(res.data).output);\r\n            })\r\n            .catch(err => {\r\n                enqueueSnackbar(\"Some error occured while run.\", { variant: \"error\" });\r\n                // console.log(err);\r\n            });\r\n        setOverlayLoading(false);\r\n    };\r\n\r\n    return (\r\n        <SplitPane minSize={height - 65 - 270} maxSize={height - 75} defaultSize={height - 65 - 170} split=\"horizontal\">\r\n            <Pane style={{ height: \"100%\", width: \"100%\"}} >\r\n                <div className=\"code-editor-nav\">\r\n                    <span>\r\n                        <Button\r\n                            style={{\r\n                                color: \"var(--primaryText)\",\r\n                                backgroundColor: \"none\",\r\n                                width: \"auto\",\r\n                            }}\r\n                            onClick={handleRun}\r\n                        >\r\n                            <CaretRightOutlined />\r\n                            Run\r\n                        </Button>\r\n                    </span>\r\n                    <span>\r\n                        <span style={{color: '#fff', marginRight: '10px'}}>\r\n                            Language : \r\n                        </span>\r\n                        <Select value={language} style={{ width: 120 }} onChange={handleLanguageChange}>\r\n                            <Option value=\"cpp\">CPP</Option>\r\n                            <Option value=\"c\">C</Option>\r\n                            <Option value=\"java\">Java</Option>\r\n                            <Option value=\"python\">Python</Option>\r\n                        </Select>\r\n                    </span>\r\n                </div>\r\n                <Editor\r\n                    key={selected.submissionId}\r\n                    options={{ readOnly: true }}\r\n                    value={selected.code || \"\"}\r\n                    theme=\"vs-dark\"\r\n                    readOnly={true}\r\n                    language={language}\r\n                    // defaultValue={selected.code}\r\n                    onMount={handleEditorDidMount}\r\n                />\r\n            </Pane>\r\n            <Pane style={{ height: \"100%\", widht: \"100%\" }}>\r\n                <div style={{ display: \"inline-flex\", width: \"100%\", height: \"100%\" }}>\r\n                    <div\r\n                        style={{\r\n                            width: \"100%\",\r\n                            background: \"var(--primaryBackground)\",\r\n                            padding: \"6px\",\r\n                            borderRight: \"2px solid var(--primaryText)\",\r\n                        }}\r\n                    >\r\n                        <div className=\"code-editor-input-title\">Input</div>\r\n                        <textarea\r\n                            value={input}\r\n                            onChange={e => {\r\n                                setInput(e.target.value);\r\n                                setOutput(\"\");\r\n                            }}\r\n                            className=\"code-editor-input-textarea\"\r\n                        />\r\n                    </div>\r\n                    <div style={{ width: \"100%\", background: \"var(--primaryBackground)\", padding: \"6px\" }}>\r\n                        <div className=\"code-editor-input-title\">Output </div>\r\n                        <div\r\n                            style={{ whiteSpace: \"pre\", textAlign: \"left\", fontSize: \"17px\" }}\r\n                            className=\"outer-scroll-div\"\r\n                        >\r\n                            {output}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Pane>\r\n        </SplitPane>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Table, Button, Input, Space, Modal } from \"antd\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport moment from \"moment\";\r\nimport { SiMicrosoftexcel } from \"react-icons/si\";\r\n\r\nexport default function ManageSelected({ questionDetails, roomDetails, enrolled, setEnrolled, selected, setSelected }) {\r\n    const getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    ref={node => {\r\n                        var searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                    style={{ marginBottom: 8, display: \"block\" }}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined />}\r\n                        size=\"small\"\r\n                        style={{ width: 90 }}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                        Reset\r\n                    </Button>\r\n                    <Button\r\n                        type=\"link\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            confirm({ closeDropdown: false });\r\n\r\n                            setSearchText(selectedKeys[0]);\r\n                            setSearchedColumn(dataIndex);\r\n                        }}\r\n                    >\r\n                        Filter\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />,\r\n        onFilter: (value, record) =>\r\n            record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : \"\",\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n            }\r\n        },\r\n        render: text =>\r\n            searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                    highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n                    searchWords={[searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : \"\"}\r\n                />\r\n            ) : (\r\n                text\r\n            ),\r\n    });\r\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n\r\n        setSearchText(selectedKeys[0]);\r\n        setSearchedColumn(dataIndex);\r\n    };\r\n    const handleReset = clearFilters => {\r\n        clearFilters();\r\n        setSearchText(\"\");\r\n    };\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [searchedColumn, setSearchedColumn] = useState(\"\");\r\n\r\n    const [showTable, setShowTable] = useState(true);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const handleSelected = row => {\r\n        if (selected.submissionId !== row.submissionId) {\r\n            setSelected(row);\r\n        }\r\n        setShowTable(false);\r\n    };\r\n\r\n    const exportToExcel = () => {\r\n        let xlsx = require('json-as-xlsx');\r\n        var columns = [\r\n            { label: 'Username', value: 'userName' },\r\n            { label: 'Email', value: 'email' },\r\n        ]\r\n        var i;\r\n        for (i = 0; i < roomDetails.specialFields.length; i ++){\r\n            columns.push(\r\n                { label: roomDetails.specialFields[i], value: 'special_' + i }\r\n            )\r\n        }\r\n        if(questionDetails.noOfTCases > 0){\r\n            columns.push(\r\n                { label: \"Cases Passed (\" + questionDetails.noOfTCases + \")\", value: row => (row.submissionId !== 0 ? row.tCasesPassed : \"\") }\r\n            )\r\n        }\r\n        columns.push(\r\n            { label: \"Submitted At\", value: row => (row.submissionId !== 0 ? moment(row.submittedAt).format(\"MMMM Do, h:mm a\") : \"\") }\r\n        )\r\n        \r\n\r\n        var content = [], toPush;\r\n        for (var student of enrolled){\r\n            toPush = {\r\n                submissionId: student.submissionId,\r\n                userName: student.userName,\r\n                email: student.email,\r\n                tCasesPassed: student.tCasesPassed,\r\n                submittedAt: student.submittedAt,\r\n            }\r\n            for(i = 0; i < roomDetails.specialFields.length; i ++){\r\n                toPush['special_' + i] = student.specialFields[i];\r\n            }\r\n            content.push(toPush);\r\n        }\r\n\r\n        let data = [\r\n            {\r\n                sheet: 'Sheet 1',\r\n                columns: columns,\r\n                content: content\r\n            }\r\n        ]\r\n\r\n        let settings = {\r\n            fileName: questionDetails.title + \" Submissions\", // Name of the spreadsheet\r\n            extraLength: 3, // A bigger number means that columns will be wider\r\n        }\r\n\r\n        xlsx(data, settings) // Will download the excel file\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: \"Username\",\r\n            dataIndex: \"userName\",\r\n            key: \"userName\",\r\n            ...getColumnSearchProps(\"userName\"),\r\n        },\r\n        {\r\n            title: \"Name\",\r\n            dataIndex: \"name\",\r\n            key: \"name\",\r\n            ...getColumnSearchProps(\"name\"),\r\n        },\r\n        {\r\n            title: \"SpecialFields\",\r\n            children: roomDetails.specialFields.map((field, index) => {\r\n                return {\r\n                    title: field,\r\n                    // dataIndex: field,\r\n                    key: field,\r\n                    render: row => row.specialFields[index],\r\n                };\r\n            }),\r\n            hidden: roomDetails.specialFields.length === 0,\r\n        },\r\n        {\r\n            title: \"Cases Passed (\" + questionDetails.noOfTCases + \")\",\r\n            key: \"cases\",\r\n            // width: \"100px\",\r\n            render: row => (row.submissionId !== 0 ? <> {row.tCasesPassed} </> : <></>),\r\n            hidden: questionDetails.noOfTCases === 0,\r\n        },\r\n        {\r\n            title: \"Submitted At\",\r\n            key: \"submittedAt\",\r\n            // width: \"100px\",\r\n            render: row => (row.submissionId !== 0 ? <> {moment(row.submittedAt).format(\"MMMM Do, h:mm a\")} </> : <></>),\r\n            // sorter: (a, b) => a.device_code.length - b.device_code.length,\r\n            // sortDirections: [\"descend\", \"ascend\"],\r\n        },\r\n        {\r\n            title: \"Submitted\",\r\n            key: \"submitted\",\r\n            width: \"100px\",\r\n            render: row =>\r\n                row.submissionId !== 0 ? (\r\n                    <Button\r\n                        onClick={() => {\r\n                            handleSelected(row);\r\n                        }}\r\n                    >\r\n                        View Submission\r\n                    </Button>\r\n                ) : (\r\n                    <>Not submitted</>\r\n                ),\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ textAlign: \"left\", paddingLeft: \"15px\", paddingBottom: \"15px\", borderBottom: \"2px solid #fff\" }}>\r\n                <Button\r\n                    onClick={() => {setShowTable(true);}}\r\n                    style={{ margin: \"20px 0px 0px 0px\" }}\r\n                    type=\"primary\"\r\n                >\r\n                    Open Submission Table\r\n                </Button>\r\n                <Button\r\n                    icon={<SiMicrosoftexcel style={{marginRight: '10px'}} />}\r\n                    onClick={exportToExcel}\r\n                    style={{ margin: \"20px 0px 0px 20px\" }}\r\n                >\r\n                    Export to excel\r\n                </Button>\r\n            </div>\r\n            <div style={{ padding: \"15px\", borderBottom: \"2px solid #fff\" }}>\r\n                <div className=\"myRooms-cards-description\">\r\n                    <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"170px\" }}>Username</span>\r\n                    {selected.userName}\r\n                </div>\r\n                <div className=\"myRooms-cards-description\">\r\n                    <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"170px\" }}>Name</span>\r\n                    {selected.name}\r\n                </div>\r\n                {selected.submissionId !== 0 ? (\r\n                    <div className=\"myRooms-cards-description\">\r\n                        <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"170px\" }}>Submitted At</span>\r\n                        {moment(selected.submittedAt).format(\"MMMM Do, h:mm a\")}\r\n                    </div>\r\n                ) : (<></>)}\r\n                {roomDetails.specialFields.map((field, index) => (\r\n                    <div className=\"myRooms-cards-description\">\r\n                        <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"170px\" }}>{field}</span>\r\n                        {selected.specialFields[index]}\r\n                    </div>\r\n                ))}\r\n                {questionDetails.noOfTCases !== 0 ? (\r\n                    <div className=\"myRooms-cards-description\">\r\n                        <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"170px\" }}>\r\n                            Cases passed\r\n                        </span>\r\n                        {/* <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"120px\" }}> */}\r\n\r\n                        {selected.tCasesPassed}/{questionDetails.noOfTCases}\r\n                        {/* </span> */}\r\n                    </div>\r\n                ) : (\r\n                    <></>\r\n                )}\r\n            </div>\r\n            <Modal\r\n                title={<div style={{ width: \"1000px\" }}>Submissions</div>}\r\n                centered\r\n                visible={showTable}\r\n                footer={null}\r\n                // bodyStyle={{width: \"80vw\"}}\r\n                closable={true}\r\n                onCancel={() => {\r\n                    setShowTable(false);\r\n                }}\r\n                width=\"80vw\"\r\n            >\r\n                {/* <div style={{width: '1000px'}}>hii</div> */}\r\n                <Table columns={columns} dataSource={enrolled} size=\"small\" pagination={false} />\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","import { Button } from 'antd';\r\nimport React from 'react'\r\nimport  FileViewer  from 'react-file-viewer';\r\nimport { useLocation } from 'react-router';\r\nimport { backendURL } from '../../Constants';\r\n\r\n\r\nexport default function FileType({selected}) {\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n\r\n    const downloadPDF = () => {\r\n\t\tfetch(`${backendURL}/get_submitted_file?questionId=${queryParams.get(\"qId\")}&submissionId=${selected.submissionId}&token=${localStorage.getItem('JWTtoken')}`)\r\n\t\t\t.then(response => {\r\n\t\t\t\tresponse.blob().then(blob => {\r\n\t\t\t\t\tlet url = window.URL.createObjectURL(blob);\r\n\t\t\t\t\tlet a = document.createElement('a');\r\n\t\t\t\t\ta.href = url;\r\n\t\t\t\t\ta.download = \"Submission.pdf\" ;\r\n\t\t\t\t\ta.click();\r\n\t\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n    return (\r\n        <>\r\n            <Button onClick={downloadPDF} style={{marginTop: \"10px\", marginLeft: '10px'}} type=\"primary\"  >\r\n                Download PDF\r\n            </Button>\r\n            <FileViewer\r\n                controls={true}\r\n                fileType={\"pdf\"}\r\n                filePath={`${backendURL}/get_submitted_file?questionId=${queryParams.get(\"qId\")}&submissionId=${selected.submissionId}&token=${localStorage.getItem('JWTtoken')}`}\r\n                key={selected.submissionId}\r\n            />\r\n        </>\r\n    )\r\n}","import { Modal } from 'antd';\r\nimport axios from 'axios';\r\nimport { convertFromRaw, EditorState } from 'draft-js';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect, useState } from 'react'\r\nimport SemipolarLoading from 'react-loadingg/lib/SemipolarLoading';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport SplitPane, { Pane } from 'react-split-pane';\r\nimport QuestionPreview from '../EditQuestion/QuestionPreview';\r\nimport { logoutUser } from '../../Redux/Actions/AuthActions';\r\nimport { setBreadcrumb } from '../../Redux/Actions/RoomsDataActions';\r\nimport CodeType from './CodeType';\r\nimport ManageSelected from './ManageSelected';\r\nimport FileType from './FileType';\r\n\r\nexport default function CheckSubmissions() {\r\n    document.title = \"Submissions | Code Rooms\";\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [overlayLoading, setOverlayLoading] = useState(false);\r\n    const [questionDetails, setQuestionDetails] = useState({});\r\n    const [roomDetails, setRoomDetails] = useState({});\r\n    const [enrolled, setEnrolled] = useState([])\r\n    const [selected, setSelected] = useState({})\r\n\r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n\r\n    useEffect(async() => {\r\n        dispatch(setBreadcrumb( [\r\n            {\r\n                \"name\": \"My Rooms\",\r\n                \"url\": \"/my_rooms\"\r\n            },\r\n            {\r\n                \"name\": roomDetails.roomName,\r\n                \"url\": \"/my_rooms/\" + roomDetails.roomId\r\n            },\r\n            {\r\n                \"name\": \"Submissions\",\r\n                \"url\": \"/submissions?qId=/\" + queryParams.get(\"qId\")\r\n            },\r\n        ] ));\r\n    }, [roomDetails.roomId]);\r\n\r\n    useEffect(async () => {\r\n        setLoading(true);\r\n        if (!queryParams.has(\"qId\")) {\r\n            enqueueSnackbar(\"Invalid question.\", { variant: \"warning\" });\r\n            history.replace(\"/my_rooms\");\r\n        }\r\n        await axios\r\n            .get(\"/question_submissions\", {\r\n                params: {\r\n                    questionId: queryParams.get(\"qId\"),\r\n                },\r\n            })\r\n            .then(res => {\r\n                setQuestionDetails({\r\n                    title: res.data.questionDetails.title,\r\n                    description: EditorState.createWithContent(convertFromRaw(res.data.questionDetails.template.description)),\r\n                    sample: res.data.questionDetails.template.sample,\r\n                    endTime: res.data.questionDetails.endTime,\r\n                    noOfTCases: res.data.questionDetails.testCases,\r\n                    _type: res.data.questionDetails._type\r\n                });\r\n\r\n                setRoomDetails({\r\n                    roomId: res.data.roomDetails.roomId,\r\n                    roomName: res.data.roomDetails.roomName,\r\n                    specialFields: res.data.roomDetails.specialFields,\r\n                });\r\n\r\n                setEnrolled(res.data.enrolled);\r\n\r\n                var select = {};\r\n                for(var i = 0; i < res.data.enrolled.length; i ++){\r\n                    if(res.data.enrolled[i].submissionId !== 0){\r\n                        select = res.data.enrolled[i];\r\n                        break;\r\n                    }\r\n                }\r\n                if(i === res.data.enrolled.length){\r\n                    enqueueSnackbar(\"No submissions recorded\", { variant: \"info\" });\r\n                    history.replace(\"/my_rooms/\" + res.data.roomDetails.roomId)\r\n                }\r\n                setSelected(select);\r\n\r\n            })\r\n            .catch(err => {\r\n                // console.log(err);\r\n                try {\r\n                    if (err.response.status === 401) {\r\n                        dispatch(logoutUser());\r\n                        return;\r\n                    }\r\n                    enqueueSnackbar(err.response.data.detail, { variant: \"error\" });\r\n                    history.replace(\"/my_rooms\");\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some error occured while getting submissions\", { variant: \"error\" });\r\n                    history.replace(\"/my_rooms\");\r\n                }\r\n            });\r\n            setTimeout(() => {\r\n                \r\n                setLoading(false);\r\n            }, 500);\r\n    }, []);\r\n\r\n    const renderRightPane = () => {\r\n        if(questionDetails._type === \"code\"){\r\n            return (\r\n                <CodeType \r\n                    setOverlayLoading={setOverlayLoading}\r\n                    selected={selected}\r\n                    setSelected={setSelected}\r\n                />\r\n            )\r\n        } \r\n        else{\r\n            return(\r\n                <FileType \r\n                    selected={selected}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    return loading ? (\r\n        <div className=\"VerifyEmail-heading-div\">\r\n            <div>Loading Submissions ....</div>\r\n            <div style={{ marginTop: \"40px\", position: \"relative\" }}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\" />\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div>\r\n            <Modal centered visible={overlayLoading} footer={null} bodyStyle={{ padding: \"0px\" }} closable={false}>\r\n                <SemipolarLoading size=\"large\" color=\"var(--loadingColor)\" />\r\n            </Modal>\r\n            <SplitPane style={{ position: \"absolute\" }} minSize={350} maxSize={620} defaultSize={400} split=\"vertical\">\r\n                    <Pane>\r\n                        <ManageSelected\r\n                            questionDetails={questionDetails}\r\n                            roomDetails={roomDetails}\r\n                            enrolled={enrolled}\r\n                            setEnrolled={setEnrolled}\r\n                            selected={selected}\r\n                            setSelected={setSelected}\r\n                        />\r\n                        <QuestionPreview\r\n                            title={questionDetails.title} \r\n                            description={questionDetails.description} \r\n                            sample={questionDetails.sample}     \r\n                        />\r\n                    </Pane>\r\n                    {renderRightPane()}\r\n            </SplitPane>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { RiUser6Line } from 'react-icons/ri';\r\nimport { FiUserCheck } from 'react-icons/fi';\r\nimport { Form, Input, Button, Tabs,Tooltip } from \"antd\";\r\nimport { AiOutlineMail } from 'react-icons/ai';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useSnackbar } from 'notistack';\r\nimport axios from 'axios';\r\nimport { loginUser } from '../Redux/Actions/AuthActions';\r\nimport { setBreadcrumb } from '../Redux/Actions/RoomsDataActions';\r\nimport {QuestionCircleOutlined} from \"@ant-design/icons\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nexport default function UserSettings() {\r\n    const [loading, setLoading] = useState(false);\r\n    const authReducer = useSelector(state => state.authReducer);\r\n    const {enqueueSnackbar} = useSnackbar();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        dispatch(setBreadcrumb([\r\n            {\r\n                name: \"Settings\",\r\n                url: \"/user_settings\"\r\n            }\r\n        ]))\r\n    }, [])\r\n\r\n    document.title = \"User Settings | Code Rooms\";\r\n\r\n    const submitUsername = async(values) => {\r\n        if(authReducer.userName === values.userName){\r\n            enqueueSnackbar(\"Username unchanged !\", {variant: 'info'});\r\n            return;\r\n        }\r\n        setLoading(true);\r\n\r\n        await axios.post(\"/auth/change_username\", {\r\n            userName: values.userName\r\n        })\r\n            .then(res => {\r\n                localStorage.setItem(\"JWTtoken\", res.data.access_token);\r\n                const decoded = jwt_decode(res.data.access_token);\r\n                const data = {\r\n                    isLogged: true,\r\n                    userId: decoded.userId,\r\n                    userName: decoded.userName,\r\n                    firstName: decoded.firstName,\r\n                    lastName: decoded.lastName,\r\n                    email: decoded.email,\r\n                };\r\n                dispatch(loginUser(data));\r\n                enqueueSnackbar(\"Username changed to \" + decoded.userName, {variant: 'success'});\r\n            })\r\n            .catch(err => {\r\n                // console.log(err);\r\n                if(!err.response){\r\n                    enqueueSnackbar(\"Some error while changing username!\", {variant: 'error'});\r\n                    setLoading(false);\r\n                    return;\r\n                }\r\n                if(err.response.status === 401){\r\n                    enqueueSnackbar(err.response.data.detail, {\r\n                        variant: \"error\",\r\n                    });\r\n                    history.replace(\"/login\");\r\n                }\r\n                else{\r\n                    enqueueSnackbar(err.response.data.detail, {\r\n                        variant: \"error\",\r\n                    });\r\n                }\r\n\r\n            })\r\n        setLoading(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <Tabs \r\n            defaultActiveKey={\"userInfo\"} \r\n            tabBarExtraContent={\r\n                <Link to=\"/change_password\" style={{marginRight: '20px'}}>\r\n                    <Button disabled={loading} danger>\r\n                        Change Password\r\n                    </Button>\r\n                </Link>\r\n            }\r\n            destroyInactiveTabPane={true}\r\n        >\r\n                <TabPane\r\n                    tab={\r\n                        <div className=\"myRooms-cards-description\" style={{fontSize: '15px'}}>\r\n                            <FiUserCheck />\r\n                            <span style={{ margin: \"0px 6px\", display: \"inline-flex\"}}>\r\n                                Details\r\n                            </span>\r\n                        </div>\r\n                    }\r\n                    key=\"userInfo\"\r\n                    style={{textAlign: \"left\"}}\r\n                    disabled={loading}\r\n                >\r\n                    <div className=\"myRooms-cards-box\" style={{padding: '5px 0px 0px 0px'}}>\r\n                        <div className=\"myRooms-cards-info\">\r\n                            <div className=\"myRooms-cards-description\">\r\n                                <RiUser6Line />\r\n                                <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"150px\" }}>\r\n                                    Name\r\n                                </span>\r\n                                {authReducer.firstName + \" \" + authReducer.lastName}\r\n                            </div>\r\n                            <div className=\"myRooms-cards-description\">\r\n                                <AiOutlineMail />\r\n                                <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"150px\" }}>\r\n                                    Email\r\n                                </span>\r\n                                {authReducer.email}\r\n                            </div>\r\n                            <div className=\"myRooms-cards-description\">\r\n                                <FiUserCheck />\r\n                                <span style={{ marginLeft: \"10px\", display: \"inline-flex\", minWidth: \"150px\" }}>\r\n                                    Username\r\n                                </span>\r\n                                {authReducer.userName}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </TabPane>\r\n                <TabPane\r\n                    tab={\r\n                        <div className=\"myRooms-cards-description\" style={{fontSize: '15px', padding: \"0px\", margin: '0px'}}>\r\n                            <FiUserCheck />\r\n\r\n                            <span style={{ margin: \"0px 6px\", display: \"inline-flex\"}}>\r\n                            Change Username\r\n                            </span>\r\n                        </div>\r\n                    }\r\n                    key=\"changeUsername\"\r\n                    destroyInactiveTabPane={true}\r\n                >\r\n                    <div className=\"signup-input-left\" style={{maxWidth: '400px', marginLeft: '20px'}}>\r\n                        <Form\r\n                            name=\"basic\"\r\n                            onFinish={submitUsername}\r\n                            layout=\"vertical\"\r\n                            initialValues={{\r\n                                layout: \"vertical\",\r\n                            }}\r\n                            autoComplete=\"off\"\r\n                            className=\"signup-form\"\r\n                        >\r\n                            <Form.Item\r\n                                label={\r\n                                    <label style={{ color: \"var(--primaryText)\" }}> \r\n                                        <span style={{paddingRight:'5px'}}>Username</span>\r\n                                        <Tooltip title=\"Username must start with a capital letter, have minimum of 3 characters and should not exceed 15 characters. No special charecters except '_' allowed.\">\r\n                                            <QuestionCircleOutlined />\r\n                                        </Tooltip>\r\n                                    </label>\r\n                                }\r\n                                name=\"userName\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: \"Please input valid username to set!\",\r\n                                    },\r\n                                    {\r\n                                        pattern: new RegExp(\"^[A-Z][a-z0-9_-]{2,15}$\"),\r\n                                        message:\"Invalid username\"\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input disabled={loading} defaultValue={authReducer.userName} />\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                \r\n                                <Button\r\n                                    htmlType=\"submit\"\r\n                                    type=\"primary\"\r\n                                    loading={loading}\r\n                                >\r\n                                    {loading ? \"Submitting\" : \"Submit\"}\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>\r\n                </TabPane>\r\n            </Tabs>\r\n    )\r\n}\r\n\r\n        ","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setBreadcrumb } from \"../Redux/Actions/RoomsDataActions\";\r\nimport { Card, Avatar, Tooltip } from \"antd\";\r\nimport { BsGithub, BsLinkedin } from \"react-icons/bs\";\r\nimport { SiGmail } from \"react-icons/si\";\r\nimport { GoGlobe } from \"react-icons/go\";\r\nimport ScrollToTop from \"react-scroll-to-top\";\r\n\r\nconst { Meta } = Card;\r\n\r\nexport default function AboutUs() {\r\n    const dispatch = useDispatch();\r\n    document.title = \"About Us | Code Rooms\"\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            setBreadcrumb([\r\n                {\r\n                    name: \"About Us\",\r\n                    url: \"/about\",\r\n                },\r\n            ])\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"aboutus-outer\">\r\n            <ScrollToTop smooth style={{paddingTop: '5px' }} color=\"var(--primaryBackground)\" />\r\n            <div className=\"aboutus-inner\">\r\n                <img\r\n                    onClick={() => {window.location.href = \"/#/\"}}\r\n                    src=\"./Logo.PNG\"\r\n                    style={{ alignSelf: \"center\", width: '250px', boxShadow: \"20px 20px 2px rgba(0, 0, 0, 0.3)\", marginBottom: '15px' }}\r\n                />\r\n                <div className=\"aboutus-title\">\r\n                    <u> About Us </u>\r\n                </div>\r\n\r\n                <div className=\"aboutus-cards\">\r\n                    <Card\r\n                        style={{ width: 300 }}\r\n                        cover={<img alt=\"Shlok\" src=\"https://avatars.githubusercontent.com/u/63449205?v=4\" />}\r\n                        actions={[\r\n                            (\r\n                                <a href=\"https://github.com/Shlok-Zanwar?tab=repositories\" target=\"_blank\">\r\n                                    <BsGithub className=\"aboutus-card-icons\" key=\"github\" />\r\n                                </a>\r\n                            ),\r\n                            (\r\n                                <a href=\"https://shlok-zanwar.github.io/\" target=\"_blank\">\r\n                                    <GoGlobe className=\"aboutus-card-icons\" key=\"website\" />\r\n                                </a>\r\n                            ),\r\n                            (\r\n                                <a href=\"https://www.linkedin.com/in/shlok-zanwar-0124961ba/\" target=\"_blank\">\r\n                                    <BsLinkedin className=\"aboutus-card-icons\" key=\"linkedin\" />\r\n                                </a>\r\n                            ),\r\n                            (\r\n                                <Tooltip title=\"shlokzanwar14@gmail.com\">\r\n                                    <a href=\"mailto:shlokzanwar14@gmail.com\" target=\"_blank\">\r\n                                        <SiGmail className=\"aboutus-card-icons\" key=\"gmail\" />\r\n                                    </a>\r\n                                </Tooltip>\r\n                            ),\r\n                        ]}\r\n                    >\r\n                        <Meta\r\n                            title=\"Shlok Zanwar\"\r\n                            description={\r\n                                <span >\r\n                                    <div style={{textAlign: 'left', marginBottom: '15px'}}>\r\n                                        (TY CS B-Tech) Student at vishwakarma institute of information technology, pune.\r\n                                    </div>\r\n                                    <div style={{textAlign: 'left'}}>\r\n                                        Quick learner, Proactive \r\n                                    </div>\r\n                                    <div style={{textAlign: 'left'}}>\r\n                                        Tech enthusiast \r\n                                    </div>\r\n                                </span>\r\n                            }\r\n                        />\r\n                    </Card>\r\n                    <Card\r\n                        style={{ width: 300 }}\r\n                        cover={<img alt=\"Roshan\" src=\"https://i.ibb.co/K6cpBDW/img.jpg\" />}\r\n                        actions={[\r\n                            (\r\n                                <a href=\"https://github.com/roshanpurohit\" target=\"_blank\">\r\n                                    <BsGithub className=\"aboutus-card-icons\" key=\"github\" />\r\n                                </a>\r\n                            ),\r\n                            (\r\n                                <a href=\"https://www.linkedin.com/in/roshan-purohit-87389b1a7\" target=\"_blank\">\r\n                                    <BsLinkedin className=\"aboutus-card-icons\" key=\"linkedin\" />\r\n                                </a>\r\n                            ),\r\n                            (\r\n                                <Tooltip title=\"roshpurohit24@gmail.com\">\r\n                                    <a href=\"mailto:roshpurohit24@gmail.com\" target=\"_blank\">\r\n                                        <SiGmail className=\"aboutus-card-icons\" key=\"gmail\" />\r\n                                    </a>\r\n                                </Tooltip>\r\n                            ),\r\n                        ]}\r\n                    >\r\n                        <Meta\r\n                            title=\"Roshan Purohit\"\r\n                            description={\r\n                                <span >\r\n                                    <div style={{textAlign: 'left', marginBottom: '15px'}}>\r\n                                        (TY CS B-Tech) Student at vishwakarma institute of information technology, pune.\r\n                                    </div>\r\n                                    <div style={{textAlign: 'left'}}>\r\n                                        Ardent problem solver \r\n                                    </div>\r\n                                    <div style={{textAlign: 'left'}}>\r\n                                        Web dev enthusiast \r\n                                    </div>\r\n                                </span>\r\n                            }\r\n                        />\r\n                    </Card>\r\n                </div>\r\n\r\n                <div className=\"aboutus-content\">\r\n                    <p>\r\n                        <span style={{color: \"var(--tertiaryBackground)\"}}>\r\n                        Code rooms is a learning management system where teachers can seamlessly create rooms,assignments and\r\n                        assess assignments. Students can easily submit assigned assignments.\r\n                        </span>\r\n                        <br />\r\n                        <br />\r\n                        <u>Cool Features:</u>\r\n                        <div className=\"aboutus-list\">\r\n                            <ul>\r\n                                <li>\r\n                                    Create Rooms with features like waiting room authority and visibility on the go with one\r\n                                    click.\r\n                                </li>\r\n                                <li> \r\n                                    Questions can be made in rooms with submission info and edit options right on the card.\r\n                                    </li>\r\n                                <li>\r\n                                    Create questions on the go with side by side expected user preview on the left with all\r\n                                    editable components on right in resizable panels.\r\n                                </li>\r\n                                <li>\r\n                                    Questions can be of code or file submission type.\r\n                                </li>\r\n                                <li>\r\n                                    Code type questions have option to add testcases which will be processed on submissions.\r\n                                </li>\r\n                                <li>\r\n                                    Question settings like End time and visibility can be edited anytime.\r\n                                </li>\r\n                                <li>\r\n                                    Question due time on question cards itself.\r\n                                </li>\r\n                                <li>\r\n                                    Code type questions can be submitted with user friendly resizable code editor with options\r\n                                    like run with entered input, save current code and submit.\r\n                                </li>\r\n                                <li>\r\n                                    File type questions let you upload the file with a preview before submitting\r\n                                    </li>\r\n                                <li>\r\n                                    Submissions of any type of question can be assessed easily in every question with a code\r\n                                    editor with submitted code or a preview of the file submitted right on the screen with\r\n                                    download option.\r\n                                </li>\r\n                                <li>\r\n                                    Easy navigation throughout the application with features like breadcrumbs. \r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </p>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginUser, logoutUser } from \"./Redux/Actions/AuthActions\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Home from \"./Components/Home\";\r\nimport MyNavbar from \"./Navbar/MyNavbar\";\r\nimport AllRooms from \"./MyRooms/AllRooms/AllRooms\";\r\nimport OneRoom from \"./MyRooms/RoomByRoomId/OneRoom\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { setMyRooms, removeMyRoomsLoading, setEnrolled, removeEnrolledLoading, setEnrolledLoading, setMyRoomsLoading } from \"./Redux/Actions/RoomsDataActions\";\r\nimport AllEnrolled from \"./EnrolledRooms/AllEnrolled/AllEnrolled\";\r\nimport JoinRoom from \"./EnrolledRooms/JoinRoom\";\r\nimport EnrolledRoom from \"./EnrolledRooms/EnrolledById/EnrolledRoom\";\r\nimport EditQuestion from \"./MyRooms/EditQuestion/EditQuestion\";\r\nimport CodePlayground from \"./CodePlayground/CodePlayground\";\r\n// import ViewQuestion from \"./Questions/ViewQuestion/ViewQuestion\";\r\nimport ViewQuestion from \"./EnrolledRooms/ViewQuestion/ViewQuestion\";\r\nimport CheckSubmissions from \"./MyRooms/CheckSubmissions/CheckSubmissions\";\r\nimport UserSettings from \"./Components/UserSettings\";\r\nimport AboutUs from \"./Components/AboutUs\";\r\nimport { useLocation } from \"react-router\";\r\nimport ReactGA from 'react-ga';\r\n\r\nexport default function AuthRouter() {\r\n    const [loading, setLoading] = useState(true);\r\n    const authReducer = useSelector(state => state.authReducer);\r\n    const dispatch = useDispatch();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    \r\n    const location = useLocation();\r\n\tuseEffect(() => {\r\n\t\t// console.log('location', location.pathname);\r\n        ReactGA.pageview(location.pathname);\r\n\t}, [location.pathname])\r\n\r\n\r\n    const handleError = (err) => {\r\n        if(!err.response){\r\n            enqueueSnackbar(\"Some Error occurred while getting Rooms. Please refresh page\", {variant: 'error'});\r\n            return;\r\n        }\r\n        if(err.response.status === 401){\r\n            dispatch(logoutUser());\r\n        }\r\n        else{\r\n            enqueueSnackbar(\"Some Error occurred while getting Rooms. Please refresh page\", {variant: 'error'})\r\n        }\r\n    }\r\n\r\n    const getMyRoomsData = async() => {\r\n        if(authReducer.accountType === 0){\r\n            return;\r\n        }\r\n        dispatch(setMyRoomsLoading());\r\n        axios.get(\"/my_rooms\")\r\n            .then(res => {\r\n                dispatch(setMyRooms(res.data.myRooms));\r\n                dispatch(removeMyRoomsLoading());\r\n            })\r\n            .catch(err => {\r\n                handleError(err);\r\n            })\r\n    }\r\n\r\n    const getEnrolledRoomsData = async() => {\r\n        dispatch(setEnrolledLoading());\r\n        axios.get(\"/enrolled_rooms\")\r\n            .then(res => {\r\n                dispatch(setEnrolled(res.data.enrolledRooms));\r\n                dispatch(removeEnrolledLoading());\r\n            })\r\n            .catch(err => {\r\n                handleError(err);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        try {\r\n            if (localStorage.JWTtoken) {\r\n                const token = localStorage.getItem(\"JWTtoken\");\r\n                // Decode token and get user info and exp\r\n                const decoded = jwt_decode(token);\r\n                // Set user and isAuthenticated\r\n                // store.dispatch(setCurrentUser(decoded));\r\n                // Check for expired token\r\n                // console.log(decoded)\r\n                const currentTime = Date.now() / 1000; // to get in milliseconds\r\n                if (decoded.exp >= currentTime) {\r\n                    const data = {\r\n                        isLogged: true,\r\n                        userId: decoded.userId,\r\n                        userName: decoded.userName,\r\n                        firstName: decoded.firstName,\r\n                        lastName: decoded.lastName,\r\n                        email: decoded.email,\r\n                        accountType: !decoded.accountType ? 0 : decoded.accountType,\r\n                    };\r\n                    console.log(data);\r\n                    // decoded.isLogged = true;\r\n                    dispatch(loginUser(data));\r\n                    getEnrolledRoomsData();\r\n                    getMyRoomsData();\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    return loading ? (\r\n        <div style={{fontSize: '40px', fontWeight: 'bolder', color: \"var(--secondaryBackground)\"}}>Loading .....</div>\r\n    ) : !authReducer.isLogged ? (\r\n        <Redirect\r\n            push\r\n            to={{\r\n                pathname: \"/login\",\r\n                state: {\r\n                    from: window.location.href,\r\n                },\r\n            }}\r\n        />\r\n    ) : (\r\n        <>\r\n            <MyNavbar />\r\n            {\r\n                authReducer.accountType > 0 ? (\r\n                <>\r\n                    <Switch>\r\n                        <Route exact path=\"/my_rooms\">\r\n                            <AllRooms getMyRoomsData={getMyRoomsData} />\r\n                        </Route>\r\n                        <Route exact path=\"/my_rooms/:id\">\r\n                            <OneRoom getMyRoomsData={getMyRoomsData} />\r\n                        </Route>\r\n                        <Route exact path=\"/edit_question\">\r\n                            <EditQuestion />\r\n                        </Route>\r\n                        <Route exact path=\"/submissions\">\r\n                            <CheckSubmissions />\r\n                        </Route>\r\n                        <Route exact path=\"/join_room\">\r\n                            <JoinRoom />\r\n                        </Route>\r\n                        <Route exact path=\"/enrolled_rooms\">\r\n                            <AllEnrolled getEnrolledRoomsData={getEnrolledRoomsData} />\r\n                        </Route>\r\n                        <Route exact path=\"/enrolled_rooms/:id\">\r\n                            <EnrolledRoom />\r\n                        </Route>\r\n                        <Route exact path=\"/question\">\r\n                            <ViewQuestion />\r\n                        </Route>\r\n                        <Route exact path=\"/code\">\r\n                            <CodePlayground />\r\n                        </Route>\r\n                        <Route exact path=\"/user_settings\">\r\n                            <UserSettings />\r\n                        </Route>\r\n                        <Route exact path=\"/about\">\r\n                            <AboutUs />\r\n                        </Route>\r\n                        <Route path=\"/\">\r\n                            <Home />\r\n                        </Route>\r\n\r\n                    </Switch>\r\n                    \r\n                </>\r\n                ) : (\r\n                <>\r\n                    <Switch>\r\n                        <Route exact path=\"/join_room\">\r\n                            <JoinRoom />\r\n                        </Route>\r\n                        <Route exact path=\"/enrolled_rooms\">\r\n                            <AllEnrolled getEnrolledRoomsData={getEnrolledRoomsData} />\r\n                        </Route>\r\n                        <Route exact path=\"/enrolled_rooms/:id\">\r\n                            <EnrolledRoom />\r\n                        </Route>\r\n                        <Route exact path=\"/question\">\r\n                            <ViewQuestion />\r\n                        </Route>\r\n                        <Route exact path=\"/code\">\r\n                            <CodePlayground />\r\n                        </Route>\r\n                        <Route exact path=\"/user_settings\">\r\n                            <UserSettings />\r\n                        </Route>\r\n                        <Route exact path=\"/about\">\r\n                            <AboutUs />\r\n                        </Route>\r\n                        <Route path=\"/\">\r\n                            <Home />\r\n                        </Route>\r\n                    </Switch>\r\n                </>)\r\n            }\r\n        </>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Typography } from 'antd';\r\nimport { PointSpreadLoading } from 'react-loadingg';\r\nimport axios from 'axios';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nexport default function VerifyEmail() {\r\n    document.title = \"Verify Email | Code Rooms\"\r\n\r\n    const [countdown, setCountdown] = useState(10);\r\n    const [result, setResult] = useState(\"\");\r\n    const [statusColor, setStatusColor] = useState(\"#ff1c03\")\r\n    \r\n    const queryParams = new URLSearchParams(useLocation().search);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const history = useHistory();\r\n\r\n    useEffect(async() => {\r\n        if(countdown <= 0){\r\n            // window.location.href = \"/login\"\r\n            history.replace(\"/login\");\r\n        }\r\n\r\n        if(result === \"\"){\r\n            if(!queryParams.has(\"email\") || !queryParams.has(\"otp\")){\r\n                setResult(\"Invalid Credentials\");\r\n                enqueueSnackbar(\"Some Error occurred\", {\r\n                    variant: \"error\",\r\n                });\r\n            }\r\n            else{\r\n                await axios.post(\"/auth/verify_email\", {\r\n                    email: queryParams.get(\"email\"),\r\n                    otp: queryParams.get(\"otp\")\r\n                })\r\n                    .then(res => {\r\n                        enqueueSnackbar(\"Email Verified\", {\r\n                            variant: \"success\",\r\n                        });\r\n                        setResult(\"Email id \" + queryParams.get(\"email\") + \" Verified\");\r\n                        setStatusColor(\"#46ed1c\");\r\n                    })\r\n                    .catch(err => {\r\n                        try {\r\n                            setResult(err.response.data.detail);\r\n                        } catch (error) {\r\n                            setResult(\"Some Error Occured\");\r\n                        }\r\n                        enqueueSnackbar(\"Some Error occurred\", {\r\n                            variant: \"error\",\r\n                        });\r\n                    })\r\n            }\r\n        }\r\n\r\n        setTimeout(() => {\r\n            setCountdown(countdown - 1);\r\n        }, 1000);\r\n    }, [countdown])\r\n\r\n    return (\r\n        <div className=\"VerifyEmail-outer-div\">\r\n            <div className=\"VerifyEmail-heading-div\">\r\n                Verifying Details with Server ...\r\n            </div>\r\n            {\r\n                result === \"\" ? (\r\n                    <div style={{marginTop: \"20px\", position: 'relative'}}>\r\n                        <PointSpreadLoading color=\"var(--loadingColor)\" />\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"verifyEmail-status-div\">\r\n                        <div>Status : <span style={{color: statusColor}}>{result}</span></div>\r\n                        <div>Redirecting to <span><a href=\"/#/login\">login</a></span> page in {countdown} seconds</div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Form, Input, Button, Tooltip} from \"antd\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {QuestionCircleOutlined} from \"@ant-design/icons\";\r\n\r\nexport default function Signup() {\r\n    document.title = \"Sign Up | Code Rooms\"\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    let history = useHistory();\r\n\r\n    const onFinish = async values => {\r\n        setLoading(true);\r\n        if (values.password !== values.rePassword) {\r\n            enqueueSnackbar(\"Passwords do not match!\", {\r\n                variant: \"error\",\r\n            });\r\n            setTimeout(() => {\r\n                setLoading(false);\r\n            }, 1000);\r\n            return;\r\n        }\r\n        await axios\r\n            .post(\"/auth/signup\", {\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                email: values.email,\r\n                password: values.password,\r\n                username: values.userName,\r\n            })\r\n            .then(res => {\r\n                enqueueSnackbar(\"Verification link has been sent to \" + values.email + \". Please verify your account.\", {\r\n                    variant: \"success\",\r\n                });\r\n                setLoading(false);\r\n                history.push('/login');\r\n            })\r\n            .catch(err => {\r\n                try {\r\n                    enqueueSnackbar(err.response.data.detail, {\r\n                        variant: \"error\",\r\n                    });\r\n                } catch (error) {\r\n                    enqueueSnackbar(\"Some Error occurred.\", {\r\n                        variant: \"error\",\r\n                    });\r\n                }\r\n                setLoading(false);\r\n            });\r\n    };\r\n    return (\r\n        <div className=\"signup-outer-div\">\r\n            <img\r\n                src=\"./Logo.PNG\"\r\n                style={{ alignSelf: \"center\", width: '250px', boxShadow: \"20px 20px 2px rgba(0, 0, 0, 0.3)\" }}\r\n            />\r\n            <div className=\"signup-header-div\">Sign Up</div>\r\n            <Form\r\n                name=\"basic\"\r\n                onFinish={onFinish}\r\n                // onFinishFailed={onFinishFailed}\r\n                layout=\"vertical\"\r\n                initialValues={{\r\n                    layout: \"vertical\",\r\n                }}\r\n                autoComplete=\"off\"\r\n                className=\"signup-form\"\r\n            >\r\n                <div className=\"signup-input-sameline\">\r\n                    <Form.Item\r\n                        label={<label style={{ color: \"var(--primaryText)\" }}>First Name</label>}\r\n                        name=\"firstName\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please input your First Name!\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={<label style={{ color: \"var(--primaryText)\" }}>Last Name</label>}\r\n                        name=\"lastName\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please input your Last Name!\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                </div>\r\n                <div className=\"signup-input-left\">\r\n                    <Form.Item\r\n                        label={<label style={{ color: \"var(--primaryText)\" }}>Email</label>}\r\n                        name=\"email\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please input your Email address!\",\r\n                            },\r\n                            {\r\n                                type: 'email',\r\n                                warningOnly: true,\r\n                                message:\"Input is not a valid email address!\"\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                         label={\r\n                            <label style={{ color: \"var(--primaryText)\" }}> \r\n                                <span style={{paddingRight:'5px'}}>Username</span>\r\n                                <Tooltip title=\"Username must start with a capital letter, have minimum of 3 characters and should not exceed 15 characters. No special charecters except '_' allowed.\">\r\n                                    <QuestionCircleOutlined />\r\n                                </Tooltip>\r\n                            </label>\r\n                        }\r\n                        name=\"userName\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please input username to set!\",\r\n                            },\r\n                            {\r\n                                pattern: new RegExp(\"^[A-Z][a-z0-9_-]{2,15}$\"),\r\n                                message:\"Invalid username\"\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                </div>\r\n                <div className=\"signup-input-sameline\">\r\n                    <Form.Item\r\n                        label={\r\n                            <label style={{ color: \"var(--primaryText)\" }}> \r\n                                <span style={{paddingRight:'5px'}}>Password</span>\r\n                                <Tooltip  title=\"Password must contain ATLEAST one uppercase character, one lowercase character, one numeric character, one special character and should have length of 5 to 15 characters.\">\r\n                                    <QuestionCircleOutlined />\r\n                                </Tooltip>\r\n                            </label>\r\n                        }\r\n                        name=\"password\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message:\"Please input password!\"\r\n                            },\r\n                            {\r\n                                message: \"Invalid Password!\",\r\n                                pattern: new RegExp(\"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[*.!@$%^#&:;<>(){},.?~_|]).{5,15}$\")\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={<label style={{ color: \"var(--primaryText)\" }}>Re-Enter Password</label>}\r\n                        name=\"rePassword\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please re-enter your password!\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n                </div>\r\n                <a href=\"/#/login\"> Already have an account? Log in. </a>\r\n                 <Form.Item\r\n                    wrapperCol={{\r\n                        offset: 8,\r\n                        span: 16,\r\n                    }}\r\n                >\r\n                    \r\n                    <Button\r\n                        htmlType=\"submit\"\r\n                        style={{\r\n                            backgroundColor: \"var(--success)\",\r\n                            width: \"auto\",\r\n                            fontSize: \"20px\",\r\n                            height: \"auto\",\r\n                            marginRight: \"130px\",\r\n                            marginTop:\"20px\"\r\n                        }}\r\n                        loading={loading}\r\n                    >\r\n                        {loading ? \"Submitting\" : \"Submit\"}\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Form, Input, Button,Tooltip } from \"antd\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\r\n\r\nexport default function ChangePassword() {\r\n    document.title = \"Reset Password | Code Rooms\"\r\n    \r\n    const [loading, setLoading] = useState(false);\r\n    const [showPasswordAndOTP, setShowPasswordAndOTP] = useState(false);\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    let history = useHistory();\r\n\r\n\r\n    const requestOTP = async(email) => {\r\n        setLoading(true);\r\n        await axios.get(\"/auth/request_change_password\", {\r\n            params: {\r\n                email: email\r\n            }\r\n        })\r\n            .then(res => {\r\n                setShowPasswordAndOTP(true);\r\n                enqueueSnackbar(\"OTP has been sent to \" + email, {\r\n                    variant: \"success\",\r\n                });\r\n            })\r\n            .catch(err => {\r\n                if(!err.response){\r\n                    enqueueSnackbar(\"Some Error occurred.\", {\r\n                        variant: \"error\",\r\n                    });\r\n                    setLoading(false);\r\n                    return;\r\n                }\r\n                if(err.response.status === 401){\r\n                    enqueueSnackbar(err.response.data.detail, {\r\n                        variant: \"error\",\r\n                    });\r\n                    history.replace(\"/login\");\r\n                }\r\n                else{\r\n                    enqueueSnackbar(err.response.data.detail, {\r\n                        variant: \"error\",\r\n                    });\r\n                }\r\n            })\r\n        setLoading(false);\r\n    }\r\n\r\n    const changePassword = async(values) => {\r\n        setLoading(true);\r\n        await axios.post(\"/auth/change_password\", {\r\n            email: values.email,\r\n            password: values.password,\r\n            otp: values.otp,\r\n        })\r\n            .then(res => {\r\n                enqueueSnackbar(\"Password changed\", {\r\n                    variant: \"success\",\r\n                });\r\n                history.replace(\"/login\");\r\n            })\r\n            .catch(err => {\r\n                if(!err.response){\r\n                    enqueueSnackbar(\"Some Error occurred.\", {\r\n                        variant: \"error\",\r\n                    });\r\n                    return;\r\n                }\r\n                enqueueSnackbar(err.response.data.detail, {\r\n                    variant: \"error\",\r\n                });\r\n            })\r\n        setLoading(false);\r\n    }\r\n     \r\n\r\n    const onFinish = async values => {\r\n        if(!values.otp){\r\n            requestOTP(values.email)\r\n        }\r\n        else{\r\n            if (values.password !== values.rePassword) {\r\n                enqueueSnackbar(\"Passwords do not match!\", {\r\n                    variant: \"error\",\r\n                });\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            changePassword(values);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"signup-outer-div\">\r\n            <img\r\n                src=\"./Logo.PNG\"\r\n                style={{ alignSelf: \"center\", width: '250px', boxShadow: \"20px 20px 2px rgba(0, 0, 0, 0.3)\" }}\r\n            />\r\n            <div className=\"signup-header-div\">Change password</div>\r\n            <Form\r\n                name=\"basic\"\r\n                layout=\"vertical\"\r\n                initialValues={{\r\n                    layout: \"vertical\",\r\n                }}\r\n                onFinish={onFinish}\r\n                autoComplete=\"off\"\r\n                className=\"signup-form\"\r\n            >\r\n                <div className=\"signup-input-left\">\r\n                    <Form.Item\r\n                        label={<label style={{ color: \"var(--primaryText)\" }}>Email</label>}\r\n                        name=\"email\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"Please input your Email address!\",\r\n                            },\r\n                            {\r\n                                type: 'email',\r\n                                warningOnly: true,\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input readOnly={showPasswordAndOTP} />\r\n                    </Form.Item>\r\n                </div>\r\n                {\r\n                    showPasswordAndOTP ? (\r\n                    <>\r\n                        <Form.Item\r\n                            label={<label style={{ color: \"var(--primaryText)\" }}>OTP</label>}\r\n                            name=\"otp\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Invalid OTP !\",\r\n                                },\r\n                                {\r\n                                    pattern: new RegExp(\"^[0-9]{6}$\"),\r\n                                    message:\"Invalid OTP !\"\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input type=\"number\" />\r\n                        </Form.Item>\r\n                        <div className=\"signup-input-sameline\">\r\n                            <Form.Item\r\n                                 label={\r\n                                    <label style={{ color: \"var(--primaryText)\" }}> \r\n                                        <span style={{paddingRight:'5px'}}>Password</span>\r\n                                        <Tooltip  title=\"Password must contain ATLEAST one uppercase character, one lowercase character, one numeric character, one special character and should have length of 5 to 15 characters.\">\r\n                                            <QuestionCircleOutlined />\r\n                                        </Tooltip>\r\n                                    </label>\r\n                                }\r\n                                name=\"password\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: \"Please input your password!\",\r\n                                    },\r\n                                    {\r\n                                        message: \"Invalid Password!\",\r\n                                        pattern: new RegExp(\"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[*.!@$%^#&:;<>(){},.?~_|]).{5,}$\")\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input.Password />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                label={<label style={{ color: \"var(--primaryText)\" }}>Re-Enter Password</label>}\r\n                                name=\"rePassword\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: \"Please re-enter your password!\",\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Input.Password />\r\n                            </Form.Item>\r\n                        </div> \r\n                        <span style={{color: 'red'}}>Do not refresh this page.</span>\r\n                    </> \r\n                    ) : (<></>)\r\n                }\r\n                <Form.Item\r\n                    wrapperCol={{\r\n                        offset: 8,\r\n                        span: 16,\r\n                    }}\r\n                >\r\n                    \r\n                    <Button\r\n                        htmlType=\"submit\"\r\n                        style={{\r\n                            backgroundColor: \"var(--success)\",\r\n                            width: \"auto\",\r\n                            // fontSize: \"20px\",\r\n                            height: \"auto\",\r\n                            marginRight: \"130px\",\r\n                            marginTop:\"20px\"\r\n                        }}\r\n                        loading={loading}\r\n                    >\r\n                        {showPasswordAndOTP ? \"Change Password\" : \"Get OTP\"}\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n","import './App.css';\r\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport Login from './Authentication/Login';\r\nimport AuthRouter from './AuthRouter';\r\nimport VerifyEmail from './Authentication/VerifyEmail';\r\nimport Signup from './Authentication/Signup';\r\nimport ChangePassword from './Authentication/ChangePassword';\r\nimport AboutUs from './Components/AboutUs';\r\n// import \"antd/dist/antd.css\";\r\n\r\nexport default function App() {\r\n\r\n  \treturn (\r\n\t\t<Router basename=\"/\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"/login\" >\r\n\t\t\t\t\t<Login />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/signup\">\r\n\t\t\t\t\t<Signup />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/verify_email\">\r\n\t\t\t\t\t<VerifyEmail />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/change_password\">\r\n\t\t\t\t\t<ChangePassword />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route exact path=\"/about_us\">\r\n\t\t\t\t\t<AboutUs />\r\n\t\t\t\t</Route>\r\n\r\n\t\t\t\t<Route path=\"/\">\r\n\t\t\t\t\t{/* {\r\n                        localStorage.getItem('redirectTo') ? <Redirect to={localStorage.getItem('redirectTo')} /> \r\n                        : null\r\n                        \r\n                    } */}\r\n\t\t\t\t\t<AuthRouter />\r\n\t\t\t\t</Route>\r\n\t\t\t\t\r\n\t\t\t</Switch>\r\n\t\t</Router>\r\n\t)\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    isLogged: false,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    var newState;\r\n    switch (action.type) {\r\n        case 'AR_SET_LOGGED':\r\n            newState = {...action.payload};\r\n            newState.isLogged = true;\r\n            return newState;\r\n        \r\n        case 'AR_LOGOUT':\r\n            newState = {};\r\n            newState.isLogged = false;\r\n            return newState;\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","const initialState = {\r\n    myRooms: [],\r\n    enrolledRooms: [],\r\n    myRoomsLoading: true,\r\n    enrolledRoomsLoading: true,\r\n    breadcrumb: [],\r\n}\r\n\r\nconst roomsDataReducer = (state = initialState, action) => {\r\n    var newState;\r\n    switch (action.type) {\r\n        case 'RDR_SET_MYROOMS_LOADING':\r\n            newState = {...state};\r\n            newState.myRoomsLoading = true;\r\n            return newState;\r\n        case 'RDR_REMOVE_MYROOMS_LOADING':\r\n            newState = {...state};\r\n            newState.myRoomsLoading = false;\r\n            return newState;\r\n\r\n        case 'RDR_SET_ENROLLED_LOADING':\r\n            newState = {...state};\r\n            newState.enrolledRoomsLoading = true;\r\n            return newState;\r\n        case 'RDR_REMOVE_ENROLLED_LOADING':\r\n            newState = {...state};\r\n            newState.enrolledRoomsLoading = false;\r\n            return newState;\r\n        \r\n        case 'RDR_SET_MYROOMS':\r\n            newState = {...state};\r\n            newState.myRooms = action.payload;\r\n            return newState;\r\n\r\n        case 'RDR_SET_ENROLLED':\r\n            newState = {...state};\r\n            newState.enrolledRooms = action.payload;\r\n            return newState;\r\n\r\n        case 'RDR_SET_BREADCRUMB':\r\n            newState = {...state};\r\n            newState.breadcrumb = action.payload;\r\n            return newState;\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default roomsDataReducer;","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./AuthReducer\";\r\nimport roomsDataReducer from \"./RoomsDataReducer\";\r\n\r\nconst ReduxCombined = combineReducers({\r\n    authReducer,\r\n    roomsDataReducer\r\n})\r\n\r\nexport default ReduxCombined;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from 'react-redux';\r\nimport ReduxCombined from './Redux/ReduxCombined';\r\nimport axios from 'axios';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport { backendURL } from './Constants';\r\nimport ReactGA from 'react-ga';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\n\r\n// ReactGA.initialize('G-RM261M996T');\r\nReactGA.initialize('UA-193484628-1');\r\n\r\n\r\naxios.defaults.baseURL = backendURL;\r\naxios.defaults.headers.common['Authorization'] = localStorage.getItem('JWTtoken');\r\n\r\nconst store = createStore(\r\n    ReduxCombined,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n  \t\t<Provider store={store}>\r\n\t\t  \t<SnackbarProvider\r\n\t\t\t\tmaxSnack={3}\r\n\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\thorizontal: 'left',\r\n\t\t\t\t}}\r\n\t\t\t\tautoHideDuration={4000}\r\n\t\t\t>\r\n\t\t\t<App />\r\n\t\t\t</SnackbarProvider>\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n\r\n\r\n//   const temp = () => {\r\n//     axios.get(\"/\")\r\n//     .then(res => {\r\n//         alert(\"LOGINNNN\");\r\n\t\t\r\n//     })\r\n//     .catch(err => {\r\n//         if(!err.response){\r\n//             // enqueueSnackbar(\"Some Error occurred while getting \" + route, {variant: 'error'});\r\n//             return;\r\n//         }\r\n//         if(err.response.status === 401){\r\n//             dispatch(logoutUser());\r\n//         }\r\n//         else{\r\n//             // enqueueSnackbar(\"Some Error occurred while getting \" + route, {variant: 'error'})\r\n//         }\r\n//     })\r\n//   }"],"sourceRoot":""}